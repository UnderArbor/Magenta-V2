/*! For license information please see main.bundle.js.LICENSE.txt */
(()=>{var e={7228:e=>{e.exports=function(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}},2858:e=>{e.exports=function(e){if(Array.isArray(e))return e}},3646:(e,r,t)=>{var n=t(7228);e.exports=function(e){if(Array.isArray(e))return n(e)}},8926:e=>{function r(e,r,t,n,a,o,i){try{var l=e[o](i),s=l.value}catch(e){return void t(e)}l.done?r(s):Promise.resolve(s).then(n,a)}e.exports=function(e){return function(){var t=this,n=arguments;return new Promise((function(a,o){var i=e.apply(t,n);function l(e){r(i,a,o,l,s,"next",e)}function s(e){r(i,a,o,l,s,"throw",e)}l(void 0)}))}}},9713:e=>{e.exports=function(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}},7154:e=>{function r(){return e.exports=r=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},r.apply(this,arguments)}e.exports=r},6860:e=>{e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},3884:e=>{e.exports=function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}},521:e=>{e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},8206:e=>{e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},3038:(e,r,t)=>{var n=t(2858),a=t(3884),o=t(379),i=t(521);e.exports=function(e,r){return n(e)||a(e,r)||o(e,r)||i()}},319:(e,r,t)=>{var n=t(3646),a=t(6860),o=t(379),i=t(8206);e.exports=function(e){return n(e)||a(e)||o(e)||i()}},379:(e,r,t)=>{var n=t(7228);e.exports=function(e,r){if(e){if("string"==typeof e)return n(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?n(e,r):void 0}}},7757:(e,r,t)=>{e.exports=t(5666)},8594:(e,r,t)=>{"use strict";t.d(r,{Z:()=>a});var n=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const a=(o={},function(e){return void 0===o[e]&&(o[e]=(r=e,n.test(r)||111===r.charCodeAt(0)&&110===r.charCodeAt(1)&&r.charCodeAt(2)<91)),o[e];var r});var o},8195:(e,r,t)=>{"use strict";function n(e,r){for(var t=arguments.length,n=new Array(t>2?t-2:0),a=2;a<t;a++)n[a-2]=arguments[a];if(!e){var o;if(void 0===r)o=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var i=0;(o=new Error(r.replace(/%s/g,(function(){return n[i++]})))).name="Invariant Violation"}throw o.framesToPop=1,o}}t.d(r,{k:()=>n})},9669:(e,r,t)=>{e.exports=t(1609)},5448:(e,r,t)=>{"use strict";var n=t(4867),a=t(6026),o=t(4372),i=t(5327),l=t(4097),s=t(4109),u=t(7985),c=t(5061);e.exports=function(e){return new Promise((function(r,t){var d=e.data,h=e.headers;n.isFormData(d)&&delete h["Content-Type"];var f=new XMLHttpRequest;if(e.auth){var g=e.auth.username||"",p=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";h.Authorization="Basic "+btoa(g+":"+p)}var m=l(e.baseURL,e.url);if(f.open(e.method.toUpperCase(),i(m,e.params,e.paramsSerializer),!0),f.timeout=e.timeout,f.onreadystatechange=function(){if(f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in f?s(f.getAllResponseHeaders()):null,o={data:e.responseType&&"text"!==e.responseType?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:n,config:e,request:f};a(r,t,o),f=null}},f.onabort=function(){f&&(t(c("Request aborted",e,"ECONNABORTED",f)),f=null)},f.onerror=function(){t(c("Network Error",e,null,f)),f=null},f.ontimeout=function(){var r="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(r=e.timeoutErrorMessage),t(c(r,e,"ECONNABORTED",f)),f=null},n.isStandardBrowserEnv()){var y=(e.withCredentials||u(m))&&e.xsrfCookieName?o.read(e.xsrfCookieName):void 0;y&&(h[e.xsrfHeaderName]=y)}if("setRequestHeader"in f&&n.forEach(h,(function(e,r){void 0===d&&"content-type"===r.toLowerCase()?delete h[r]:f.setRequestHeader(r,e)})),n.isUndefined(e.withCredentials)||(f.withCredentials=!!e.withCredentials),e.responseType)try{f.responseType=e.responseType}catch(r){if("json"!==e.responseType)throw r}"function"==typeof e.onDownloadProgress&&f.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){f&&(f.abort(),t(e),f=null)})),d||(d=null),f.send(d)}))}},1609:(e,r,t)=>{"use strict";var n=t(4867),a=t(1849),o=t(321),i=t(7185);function l(e){var r=new o(e),t=a(o.prototype.request,r);return n.extend(t,o.prototype,r),n.extend(t,r),t}var s=l(t(5655));s.Axios=o,s.create=function(e){return l(i(s.defaults,e))},s.Cancel=t(5263),s.CancelToken=t(4972),s.isCancel=t(6502),s.all=function(e){return Promise.all(e)},s.spread=t(8713),s.isAxiosError=t(6268),e.exports=s,e.exports.default=s},5263:e=>{"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},4972:(e,r,t)=>{"use strict";var n=t(5263);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var r;this.promise=new Promise((function(e){r=e}));var t=this;e((function(e){t.reason||(t.reason=new n(e),r(t.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(r){e=r})),cancel:e}},e.exports=a},6502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,r,t)=>{"use strict";var n=t(4867),a=t(5327),o=t(782),i=t(3572),l=t(7185);function s(e){this.defaults=e,this.interceptors={request:new o,response:new o}}s.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=l(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var r=[i,void 0],t=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){r.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){r.push(e.fulfilled,e.rejected)}));r.length;)t=t.then(r.shift(),r.shift());return t},s.prototype.getUri=function(e){return e=l(this.defaults,e),a(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},n.forEach(["delete","get","head","options"],(function(e){s.prototype[e]=function(r,t){return this.request(l(t||{},{method:e,url:r,data:(t||{}).data}))}})),n.forEach(["post","put","patch"],(function(e){s.prototype[e]=function(r,t,n){return this.request(l(n||{},{method:e,url:r,data:t}))}})),e.exports=s},782:(e,r,t)=>{"use strict";var n=t(4867);function a(){this.handlers=[]}a.prototype.use=function(e,r){return this.handlers.push({fulfilled:e,rejected:r}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){n.forEach(this.handlers,(function(r){null!==r&&e(r)}))},e.exports=a},4097:(e,r,t)=>{"use strict";var n=t(1793),a=t(7303);e.exports=function(e,r){return e&&!n(r)?a(e,r):r}},5061:(e,r,t)=>{"use strict";var n=t(481);e.exports=function(e,r,t,a,o){var i=new Error(e);return n(i,r,t,a,o)}},3572:(e,r,t)=>{"use strict";var n=t(4867),a=t(8527),o=t(6502),i=t(5655);function l(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return l(e),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=n.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),n.forEach(["delete","get","head","post","put","patch","common"],(function(r){delete e.headers[r]})),(e.adapter||i.adapter)(e).then((function(r){return l(e),r.data=a(r.data,r.headers,e.transformResponse),r}),(function(r){return o(r)||(l(e),r&&r.response&&(r.response.data=a(r.response.data,r.response.headers,e.transformResponse))),Promise.reject(r)}))}},481:e=>{"use strict";e.exports=function(e,r,t,n,a){return e.config=r,t&&(e.code=t),e.request=n,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},7185:(e,r,t)=>{"use strict";var n=t(4867);e.exports=function(e,r){r=r||{};var t={},a=["url","method","data"],o=["headers","auth","proxy","params"],i=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],l=["validateStatus"];function s(e,r){return n.isPlainObject(e)&&n.isPlainObject(r)?n.merge(e,r):n.isPlainObject(r)?n.merge({},r):n.isArray(r)?r.slice():r}function u(a){n.isUndefined(r[a])?n.isUndefined(e[a])||(t[a]=s(void 0,e[a])):t[a]=s(e[a],r[a])}n.forEach(a,(function(e){n.isUndefined(r[e])||(t[e]=s(void 0,r[e]))})),n.forEach(o,u),n.forEach(i,(function(a){n.isUndefined(r[a])?n.isUndefined(e[a])||(t[a]=s(void 0,e[a])):t[a]=s(void 0,r[a])})),n.forEach(l,(function(n){n in r?t[n]=s(e[n],r[n]):n in e&&(t[n]=s(void 0,e[n]))}));var c=a.concat(o).concat(i).concat(l),d=Object.keys(e).concat(Object.keys(r)).filter((function(e){return-1===c.indexOf(e)}));return n.forEach(d,u),t}},6026:(e,r,t)=>{"use strict";var n=t(5061);e.exports=function(e,r,t){var a=t.config.validateStatus;t.status&&a&&!a(t.status)?r(n("Request failed with status code "+t.status,t.config,null,t.request,t)):e(t)}},8527:(e,r,t)=>{"use strict";var n=t(4867);e.exports=function(e,r,t){return n.forEach(t,(function(t){e=t(e,r)})),e}},5655:(e,r,t)=>{"use strict";var n=t(4867),a=t(6016),o={"Content-Type":"application/x-www-form-urlencoded"};function i(e,r){!n.isUndefined(e)&&n.isUndefined(e["Content-Type"])&&(e["Content-Type"]=r)}var l,s={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(l=t(5448)),l),transformRequest:[function(e,r){return a(r,"Accept"),a(r,"Content-Type"),n.isFormData(e)||n.isArrayBuffer(e)||n.isBuffer(e)||n.isStream(e)||n.isFile(e)||n.isBlob(e)?e:n.isArrayBufferView(e)?e.buffer:n.isURLSearchParams(e)?(i(r,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):n.isObject(e)?(i(r,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};n.forEach(["delete","get","head"],(function(e){s.headers[e]={}})),n.forEach(["post","put","patch"],(function(e){s.headers[e]=n.merge(o)})),e.exports=s},1849:e=>{"use strict";e.exports=function(e,r){return function(){for(var t=new Array(arguments.length),n=0;n<t.length;n++)t[n]=arguments[n];return e.apply(r,t)}}},5327:(e,r,t)=>{"use strict";var n=t(4867);function a(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,r,t){if(!r)return e;var o;if(t)o=t(r);else if(n.isURLSearchParams(r))o=r.toString();else{var i=[];n.forEach(r,(function(e,r){null!=e&&(n.isArray(e)?r+="[]":e=[e],n.forEach(e,(function(e){n.isDate(e)?e=e.toISOString():n.isObject(e)&&(e=JSON.stringify(e)),i.push(a(r)+"="+a(e))})))})),o=i.join("&")}if(o){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}},7303:e=>{"use strict";e.exports=function(e,r){return r?e.replace(/\/+$/,"")+"/"+r.replace(/^\/+/,""):e}},4372:(e,r,t)=>{"use strict";var n=t(4867);e.exports=n.isStandardBrowserEnv()?{write:function(e,r,t,a,o,i){var l=[];l.push(e+"="+encodeURIComponent(r)),n.isNumber(t)&&l.push("expires="+new Date(t).toGMTString()),n.isString(a)&&l.push("path="+a),n.isString(o)&&l.push("domain="+o),!0===i&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var r=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return r?decodeURIComponent(r[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},6268:e=>{"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},7985:(e,r,t)=>{"use strict";var n=t(4867);e.exports=n.isStandardBrowserEnv()?function(){var e,r=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function a(e){var n=e;return r&&(t.setAttribute("href",n),n=t.href),t.setAttribute("href",n),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=a(window.location.href),function(r){var t=n.isString(r)?a(r):r;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},6016:(e,r,t)=>{"use strict";var n=t(4867);e.exports=function(e,r){n.forEach(e,(function(t,n){n!==r&&n.toUpperCase()===r.toUpperCase()&&(e[r]=t,delete e[n])}))}},4109:(e,r,t)=>{"use strict";var n=t(4867),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var r,t,o,i={};return e?(n.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),r=n.trim(e.substr(0,o)).toLowerCase(),t=n.trim(e.substr(o+1)),r){if(i[r]&&a.indexOf(r)>=0)return;i[r]="set-cookie"===r?(i[r]?i[r]:[]).concat([t]):i[r]?i[r]+", "+t:t}})),i):i}},8713:e=>{"use strict";e.exports=function(e){return function(r){return e.apply(null,r)}}},4867:(e,r,t)=>{"use strict";var n=t(1849),a=Object.prototype.toString;function o(e){return"[object Array]"===a.call(e)}function i(e){return void 0===e}function l(e){return null!==e&&"object"==typeof e}function s(e){if("[object Object]"!==a.call(e))return!1;var r=Object.getPrototypeOf(e);return null===r||r===Object.prototype}function u(e){return"[object Function]"===a.call(e)}function c(e,r){if(null!=e)if("object"!=typeof e&&(e=[e]),o(e))for(var t=0,n=e.length;t<n;t++)r.call(null,e[t],t,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.call(null,e[a],a,e)}e.exports={isArray:o,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:function(e){return null!==e&&!i(e)&&null!==e.constructor&&!i(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:l,isPlainObject:s,isUndefined:i,isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:u,isStream:function(e){return l(e)&&u(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:c,merge:function e(){var r={};function t(t,n){s(r[n])&&s(t)?r[n]=e(r[n],t):s(t)?r[n]=e({},t):o(t)?r[n]=t.slice():r[n]=t}for(var n=0,a=arguments.length;n<a;n++)c(arguments[n],t);return r},extend:function(e,r,t){return c(r,(function(r,a){e[a]=t&&"function"==typeof r?n(r,t):r})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},7175:(e,r,t)=>{"use strict";t.d(r,{Z:()=>g});var n=t(4015),a=t.n(n),o=t(3645),i=t.n(o),l=t(1667),s=t.n(l),u=t(6006),c=t(6782),d=i()(a()),h=s()(u.Z),f=s()(c.Z);d.push([e.id,"@font-face{font-family:'Cinzel';src:url("+h+');font-weight:100 900;font-stretch:25% 151%}#root{position:relative;background-color:#dad6db;--card-width: 100px;--card-height: 133px}.magentaLogo{color:grey;font-family:"Cinzel"}.topLogo{margin-left:120px;margin-top:10px;font-size:48px;font-weight:600}.bottomLogo{font-size:84px;font-weight:700;margin-right:200px;padding-top:56px}.navContainer{height:64px;display:flex;text-align:center;align-items:center;width:100%}.mainPage{width:100%}.headerBody{width:100%;height:100vh;text-align:center;background-image:linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)),url('+f+');background-position:center;background-repeat:no-repeat;background-size:cover}.heroText{font-family:"Cinzel";font-size:64px;width:60%;margin:0 auto;margin-top:25vh;color:white}.taglineText{font-size:36px;color:white;margin-top:4vh}.headerButtonsContainer{display:flex;flex-direction:row;justify-content:space-between;margin:0 auto;margin-top:168px;width:40%;justify-content:center}.headerButton{height:54px;border-radius:13px;width:272px;font-size:24px}.builderEnter{color:white;background-color:grey;font-weight:bold;margin-right:80px}.decklistEnter{color:grey;background-color:white}.contentBody{height:3096px}.featureHeader{font-family:"Cinzel";font-size:56px;margin:80px auto;text-align:center}.builderPage{width:100%;min-height:150vh;margin:0 auto;background-color:#dad6db;text-align:center;display:flex;flex-direction:column;position:relative}.builder{height:150vh;position:relative;z-index:0}.builderContainer{background-color:#bebabf;z-index:2;min-height:calc(100% - 16px);width:0px;margin:8px 0;margin-left:120px;box-shadow:inset 0 1px 0 #e3c3ee,0 1px 3px rgba(0,0,0,0.3)}.deckBanner{position:relative;height:240px;width:100%;background-color:#5d465d}.deckInfo{width:60%;padding:12px 16px;display:flex;flex-direction:column}.deckNameDisplay{display:flex;justify-content:flex-start}.deckNameField{border:none;background-color:transparent;font-size:28px;font-family:"Cinzel"}.deckNameField::placeholder{color:white;opacity:1}.deckFormatContainer{position:relative;display:flex;flex-direction:row;justify-content:flex-start;align-items:center;color:white;font-family:"Cinzel";margin-top:12px;margin-left:16px}.formatHeader{font-family:"Cinzel";font-size:19px}.formatInput{border:none;background-color:transparent;font-size:19px;font-family:"Cinzel";margin-left:6px;color:white}.menuDownArrow{margin:auto 8px;width:13px;height:auto;fill:white}.formatOptionContainer{position:absolute;display:flex;flex-direction:column;top:24px;left:88px;height:200px;overflow-y:scroll;background-color:black;border:1px solid grey;z-index:10;text-align:left;padding:6px;padding-right:16px}.formatOption{padding:6px 4px;color:white;text-align:left;font-weight:bold;font-size:16px}.selectedFormat{color:black;background-color:white}.cardCount{color:white;text-align:left;margin:6px 0;font-size:19px;text-indent:16px;font-family:"Cinzel"}.deckArt{position:absolute;top:0;right:0;height:100%;width:300px}.hoverArt{border:2px dotted white;opacity:0.8}.builderExit{position:absolute;right:0;top:0;color:white;font-size:48px;height:0}.deckContainer{position:relative;min-height:calc(150vh - 240px - 16px)}.typeGrid{display:flex;width:calc(100% - 20px);margin:0 10px;-webkit-transition:all 0.25s;transition:all 0.25s}.skinnyGrid{width:calc(100% - 320px);-webkit-transition:all 0.35s;transition:all 0.35s}.typeGridColumn{padding-right:10px;background-clip:padding-box}.typeContainer{display:flex;flex:1;flex-direction:row;flex-wrap:wrap;-webkit-column-break-inside:avoid;page-break-inside:avoid}.typeHeader{display:flex;flex-direction:row;width:100%;justify-content:space-between;padding-bottom:4px;border-top-left-radius:4px;border-top-right-radius:4px;align-items:center;z-index:1}.arrow-down{visibility:hidden;width:30px;height:30px;position:relative;background:transparent;box-shadow:0px 0px 0px transparent;border:0px solid transparent;text-shadow:0px 0px 0px transparent}.arrow-down:before,.arrow-down:after{content:\'\';display:block;width:8px;height:2px;background:white;position:absolute;margin:auto 0}.arrow-down:before{right:14px;border-top-left-radius:10px;border-bottom-left-radius:10px;transform:rotate(45deg)}.arrow-down:after{right:10px;transform:rotate(-45deg)}.arrow-down.active:before{transform:rotate(-45deg)}.arrow-down.active:after{transform:rotate(45deg)}.typeHeader:hover{background-color:rgba(0,0,0,0.2)}.typeHeader:hover>.arrow-down{visibility:visible}.typeTitle{text-align:left;text-indent:6px;font-size:22px;margin-top:8px;font-family:"Cinzel";font-weight:300}.typeDivider{width:100%;margin-top:0px;margin-bottom:8px}.typeContent{display:flex;flex-direction:row;flex-wrap:wrap;width:100%}.tokenContent{display:flex;flex-direction:row;flex-wrap:wrap;margin:0 10px;width:calc(100% - 20px)}.cardName{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-top:4px;font-size:14px}.cardContainer{position:relative;width:100px;margin:12px 4px 14px 4px;border-radius:6px;text-align:center}.tokenContainer{position:relative;width:100px;margin:12px 4px 14px 4px;border-radius:6px;text-align:center}.cardArtContainer{position:relative;width:100%;height:133px;border-radius:6px;box-shadow:inset 0 2px 0 #878787,0 4px 6px rgba(0,0,0,0.3),2px 0 6px rgba(0,0,0,0.3),-2px 0 6px rgba(0,0,0,0.3)}.cardArt{width:100%;height:100%;display:block;border-radius:6px;border:3px solid black;background-color:black;object-fit:cover;object-position:50% 0%;filter:saturate(130%) contrast(110%)}.moreCards{opacity:0.5;border:2px dashed grey}.quantCover{background-image:linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,0,0.037) 16.3%, rgba(0,0,0,0.091) 30.7%, rgba(0,0,0,0.158) 43.4%, rgba(0,0,0,0.236) 54.5%, rgba(0,0,0,0.321) 64.1%, rgba(0,0,0,0.412) 72.4%, rgba(0,0,0,0.506) 79.3%, rgba(0,0,0,0.599) 85%, rgba(0,0,0,0.688) 89.6%, rgba(0,0,0,0.772) 93.2%, rgba(0,0,0,0.846) 95.9%, rgba(0,0,0,0.909) 97.9%, rgba(0,0,0,0.958) 99.1%, rgba(0,0,0,0.989) 99.8%, #000 100%);border-radius:6px;width:100%;height:100%;z-index:6;position:absolute;top:0;left:0;transition:background-color 0.5s}.settingsCover{background-color:rgba(23,23,23,0.55);opacity:0;z-index:7;transition:0.45s;display:flex;cursor:pointer}.settingsHover{opacity:1;transition:0.45s}.settingsIcon{opacity:1;height:68px;width:68px;margin:26px auto;z-index:6}.quantContainer{position:relative;font-size:20px;height:24px;width:100%;display:flex;flex-direction:row;justify-content:space-around;align-items:center;transform:translateY(-24px);z-index:8}.quantButton{font-weight:bold;font-size:28px;opacity:0.4;color:#b3b3b3;z-index:10;height:100%;display:inline-flex;align-items:center}.decrementCard{color:white;text-shadow:2px 2px 3px red, 2px -2px 3px red, -2px 2px 3px red, -2px -2px 3px red;transition:0.45s}.decrementCard:hover{color:red;text-shadow:1px 1px 2px white, 1px -1px 2px white, -1px 1px 2px white, -1px -1px 2px white}.incrementCard{color:white;text-shadow:2px 2px 3px green, 2px -2px 3px green, -2px 2px 3px green, -2px -2px 3px green;transition:0.45s}.incrementCard:hover{color:green;text-shadow:1px 1px 2px white, -1px 1px 2px white, 1px -1px 2px white, -1px -1px 2px white}.cardQuantity{display:flex;flex-direction:row;align-items:end;color:white;text-shadow:-0.5px -0.5px 0 #000, 0.5px -0.5px 0 #000, -0.5px 0.5px 0 #000, 0.5px 0.5px 0 #000;z-index:3;font-family:"Cinzel";letter-spacing:2px;margin-left:5px}.quantityX{font-family:inherit;margin-top:6px;font-size:12px}.quantInput{font-family:inherit;display:inline-block;white-space:nowrap}.bigCardImage{position:absolute;left:calc(104px);top:0;border-radius:20px;width:420px;z-index:10;filter:saturate(120%) contrast(110%)}.cardDragImage{width:100px;height:133px}.ghostCard{width:100px;height:133px;border:3px dotted grey;border-radius:6px;position:absolute;top:0;left:0}.ghostCard>*{opacity:0}.settings{position:absolute;left:calc(104px);top:0;display:flex;flex-direction:column;background-color:#191919;color:white;width:420px;height:540px;border:2px solid grey;z-index:12;border-radius:6px;font-size:24px;pointer-events:auto}.settingsNameContainer{width:95%;text-align:center;margin:10px auto;font-family:Cinzel}.setSelector{display:flex;flex-direction:row;justify-content:flex-start;position:relative;margin:16px auto;width:88%;align-items:center;white-space:nowrap}.setInput{width:100%;margin-left:8px;color:black;background-color:white;text-indent:4px;font-size:16px;height:24px;border:none}.setDropButton{background:transparent;box-shadow:0px 0px 0px transparent;border:0px solid transparent;text-shadow:0px 0px 0px transparent;background-color:white;height:24px;padding:2px;border-left:1px solid lightgrey;padding-right:4px}.setDropDown{position:absolute;top:24px;left:52px;width:85.8%;z-index:11;white-space:nowrap}.overflowY{overflow-y:auto;overflow-x:hidden;min-height:280px}.setOption{position:absolute;display:flex;align-items:center;width:100%;height:32px;background-color:white;color:black;border:3px solid grey;text-indent:4px;font-size:18px;white-space:nowrap}.setOption:hover{color:white;background-color:grey}.smallCardImage{width:240px;position:absolute;border-radius:20px;filter:saturate(120%) contrast(110%)}.footerContainer{background-color:#c1bbc4;width:100%;height:180px;text-align:right}.newDeckArea{display:flex;flex-direction:column;width:100%;position:absolute;top:50vh;z-index:1}.createDeckButton{background-color:#bebabf;border:2px solid black;color:black;width:240px;height:28px;border-radius:50px;text-align:center;display:inline-block;margin:8px auto}.inputFileLabel{text-decoration:underline;cursor:pointer;margin:8px auto}.searchbarContainer{display:flex;flex-direction:row;width:100%;justify-content:space-between}.searchArea{position:relative;width:50%;margin:16px;margin-bottom:24px;margin-right:0;display:flex;flex-direction:row}.search{outline:none;width:100%;background-color:white;font-size:24px;text-align:left;height:32px;border-radius:10px;text-indent:4px}.searchBar{color:black;z-index:2;opacity:.7;position:relative}.ghostBar{color:grey;position:absolute;left:0px;top:0px;z-index:1}.searchIcon{height:32px;width:auto;position:absolute;top:0px;right:0px;z-index:2;fill:grey;cursor:pointer;padding:6px 6px;border-top-right-radius:10px;border-top-right-radius:10px}.loadingContainer{position:absolute;top:40%;z-index:3;display:flex;flex-direction:row;align-items:center}.loadingCircle{width:6px;height:6px;background-color:black;border-radius:50%;margin:2px}.decktoolsContainer{position:absolute;top:0;right:0;width:0px;height:100%;z-index:2}.decktoolsButton{border:2px solid grey;width:72px;height:48px;font-size:20px;text-align:center;position:absolute;right:20px;top:20px;z-index:10}.toolsMenu{background-color:grey;height:100%;position:relative;z-index:2}#draggable{cursor:move}.hidden{visibility:hidden}.noHover{pointer-events:none}\n',"",{version:3,sources:["webpack://./src/css/core.scss"],names:[],mappings:"AAkBA,WACC,oBAAqB,CACrB,2CAA8D,CAC9D,mBAAoB,CACpB,qBAAsB,CAKvB,MACC,iBAAkB,CAClB,wBA7B6B,CA8B7B,mBAAa,CACb,oBAAc,CACd,aAGA,UAAW,CACX,oBAXqB,CAYrB,SAGA,iBAAkB,CAClB,eAAgB,CAChB,cAAe,CACf,eAAgB,CAChB,YAGA,cAAe,CACf,eAAgB,CAChB,kBAAmB,CACnB,gBAAiB,CACjB,cAIA,WAxCmB,CAyCnB,YAAa,CACb,iBAAkB,CAClB,kBAAmB,CACnB,UAAW,CACX,UAGA,UAAW,CACX,YAGA,UAAW,CACX,YAAa,CACb,iBAAkB,CAClB,0GAC2C,CAC3C,0BAA2B,CAC3B,2BAA4B,CAC5B,qBAAsB,CACtB,UAGA,oBArDqB,CAsDrB,cAAe,CACf,SAAU,CACV,aAAc,CACd,eAAgB,CAChB,WAAY,CACZ,aAGA,cAAe,CACf,WAAY,CACZ,cAAe,CACf,wBAGA,YAAa,CACb,kBAAmB,CACnB,6BAA8B,CAC9B,aAAc,CACd,gBAAiB,CACjB,SAAU,CACV,sBAAuB,CACvB,cAGA,WAAY,CACZ,kBAAmB,CACnB,WAAY,CACZ,cAAe,CACf,cAGA,WAAY,CACZ,qBAAsB,CACtB,gBAAiB,CACjB,iBAAkB,CAClB,eAGA,UAAW,CACX,sBAAuB,CACvB,aAGA,aAAc,CACd,eAGA,oBArGqB,CAsGrB,cAAe,CACf,gBAAiB,CACjB,iBAAkB,CAClB,aAGA,UAAW,CACX,gBA5HqB,CA6HrB,aAAc,CACd,wBAxI6B,CAyI7B,iBAAkB,CAClB,YAAa,CACb,qBAAsB,CACtB,iBAAkB,CAClB,SAGA,YAAa,CACb,iBAAkB,CAClB,SAAU,CACV,kBAKA,wBArJ0C,CAsJ1C,SAAU,CACV,4BAA6B,CAC7B,SAAU,CACV,YAAa,CACb,iBAAkB,CAClB,0DAA4E,CAC5E,YAGA,iBAAkB,CAClB,YA7JoB,CA8JpB,UAAW,CACX,wBAAiC,CACjC,UAGA,SAAU,CACV,iBAAkB,CAClB,YAAa,CACb,qBAAsB,CACtB,iBAGA,YAAa,CACb,0BAA2B,CAC3B,eAGA,WAAY,CACZ,4BAA6B,CAC7B,cAAe,CACf,oBA/JqB,CAgKrB,4BAGA,WAAY,CACZ,SAAU,CACV,qBAGA,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,0BAA2B,CAC3B,kBAAmB,CACnB,WAAY,CACZ,oBA9KqB,CA+KrB,eAAgB,CAChB,gBAAiB,CACjB,cAGA,oBApLqB,CAqLrB,cAAe,CACf,aAGA,WAAY,CACZ,4BAA6B,CAC7B,cAAe,CACf,oBA5LqB,CA6LrB,eAAgB,CAChB,WAAY,CACZ,eAGA,eAAgB,CAChB,UAAW,CACX,WAAY,CACZ,UAAW,CACX,uBAGA,iBAAkB,CAClB,YAAa,CACb,qBAAsB,CACtB,QAAS,CACT,SAAU,CACV,YAAa,CACb,iBAAkB,CAClB,sBAAuB,CACvB,qBAAsB,CACtB,UAAW,CACX,eAAgB,CAChB,WAAY,CACZ,kBAAmB,CACnB,cAGA,eAAgB,CAChB,WAAY,CACZ,eAAgB,CAChB,gBAAiB,CACjB,cAAe,CACf,gBAGA,WAAY,CACZ,sBAAuB,CACvB,WAGA,WAAY,CACZ,eAAgB,CAChB,YAAa,CACb,cAAe,CACf,gBAAiB,CACjB,oBA3OqB,CA4OrB,SAGA,iBAAkB,CAClB,KAAM,CACN,OAAQ,CACR,WAAY,CACZ,WAAY,CACZ,UAGA,uBAAwB,CACxB,WAAY,CACZ,aAGA,iBAAkB,CAClB,OAAQ,CACR,KAAM,CACN,WAAY,CACZ,cAAe,CACf,QAAS,CACT,eAGA,iBAAkB,CAClB,qCApRgE,CAqRhE,UAKA,YAAa,CACb,uBAAwB,CACxB,aAAc,CACd,4BAA6B,CAC7B,oBAAqB,CACrB,YAGA,wBAAyB,CACzB,4BAA6B,CAC7B,oBAAqB,CACrB,gBAGA,kBAAmB,CACnB,2BAA4B,CAC5B,eAGA,YAAa,CACb,MAAO,CACP,kBAAmB,CACnB,cAAe,CACf,iCAAkC,CAClC,uBAAwB,CACxB,YAGA,YAAa,CACb,kBAAmB,CACnB,UAAW,CACX,6BAA8B,CAC9B,kBAAmB,CACnB,0BAA2B,CAC3B,2BAA4B,CAC5B,kBAAmB,CACnB,SAAU,CACV,YAKA,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,sBAAuB,CACvB,kCAAmC,CACnC,4BAA6B,CAC7B,mCAAoC,CACpC,qCAIA,UAAW,CACX,aAAc,CACd,SAAU,CACV,UAAW,CACX,gBAAiB,CACjB,iBAAkB,CAClB,aAAc,CAEd,mBAGA,UAAW,CACX,2BAA4B,CAC5B,8BAA+B,CAC/B,uBAAwB,CACxB,kBAGA,UAAW,CACX,wBAAyB,CACzB,0BAGA,wBAAyB,CACzB,yBAGA,uBAAwB,CACxB,kBAKA,gCAAoC,CACpC,8BAGA,kBAAmB,CACnB,WAGA,eAAgB,CAChB,eAAgB,CAChB,cAAe,CACf,cAAe,CACf,oBA/WqB,CAgXrB,eAAgB,CAChB,aAGA,UAAW,CACX,cAAe,CACf,iBAAkB,CAClB,aAGA,YAAa,CACb,kBAAmB,CACnB,cAAe,CACf,UAAW,CACX,cAGA,YAAa,CACb,kBAAmB,CACnB,cAAe,CACf,aAAc,CACd,uBAAwB,CACxB,UAKA,kBAAmB,CACnB,eAAgB,CAChB,sBAAuB,CACvB,cAAe,CACf,cAAe,CACf,eAGA,iBAAkB,CAClB,WAzaiB,CA0ajB,wBAAyB,CACzB,iBAAkB,CAClB,iBAAkB,CAClB,gBAGA,iBAAkB,CAClB,WAjbiB,CAkbjB,wBAAyB,CACzB,iBAAkB,CAClB,iBAAkB,CAClB,kBAGA,iBAAkB,CAClB,UAAW,CACX,YAzbkB,CA0blB,iBAAkB,CAClB,+GACgE,CAChE,SAGA,UAAW,CACX,WAAY,CACZ,aAAc,CACd,iBAAkB,CAClB,sBAAuB,CACvB,sBAAuB,CACvB,gBAAiB,CACjB,sBAAuB,CACvB,oCAAqC,CACrC,WAGA,WAAY,CACZ,sBAAuB,CACvB,YAKA,oaAkBC,CAED,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,SAAU,CACV,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,gCAAiC,CACjC,eAGA,oCAAuC,CACvC,SAAU,CACV,SAAU,CACV,gBAAiB,CACjB,YAAa,CACb,cAAe,CACf,eAGA,SAAU,CACV,gBAAiB,CACjB,cAGA,SAAU,CACV,WAAY,CACZ,UAAW,CACX,gBAAiB,CACjB,SAAU,CACV,gBAGA,iBAAkB,CAClB,cAAe,CACf,WAAY,CACZ,UAAW,CACX,YAAa,CACb,kBAAmB,CACnB,4BAA6B,CAC7B,kBAAmB,CACnB,2BAA4B,CAC5B,SAAU,CACV,aAGA,gBAAiB,CACjB,cAAe,CACf,WAAY,CACZ,aAAyB,CACzB,UAAW,CACX,WAAY,CACZ,mBAAoB,CACpB,kBAAmB,CACnB,eAGA,WAAY,CACZ,kFACkB,CAClB,gBAAiB,CACjB,qBAGA,SAAU,CACV,0FACoB,CACpB,eAGA,WAAY,CACZ,0FACoB,CACpB,gBAAiB,CACjB,qBAGA,WAAY,CACZ,0FACoB,CACpB,cAGA,YAAa,CACb,kBAAmB,CACnB,eAAgB,CAChB,WAAY,CACZ,8FACmB,CACnB,SAAU,CACV,oBA7iBqB,CA8iBrB,kBAAmB,CACnB,eAAgB,CAChB,WAGA,mBAAoB,CACpB,cAAe,CACf,cAAe,CACf,YAGA,mBAAoB,CACpB,oBAAqB,CACrB,kBAAmB,CACnB,cAGA,iBAAkB,CAClB,gBAAgC,CAChC,KAAM,CACN,kBAAmB,CACnB,WAplBkB,CAqlBlB,UAAW,CACX,oCAAqC,CACrC,eAGA,WA9lBiB,CA+lBjB,YA9lBkB,CA+lBlB,WAGA,WAnmBiB,CAomBjB,YAnmBkB,CAomBlB,sBAAuB,CACvB,iBAAkB,CAClB,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,aAGA,SAAU,CACV,UAKA,iBAAkB,CAClB,gBAAgC,CAChC,KAAM,CACN,YAAa,CACb,qBAAsB,CACtB,wBAAiC,CACjC,WAAY,CACZ,WAtnBkB,CAunBlB,YAAa,CACb,qBAAsB,CACtB,UAAW,CACX,iBAAkB,CAClB,cAAe,CACf,mBAAoB,CACpB,uBAGA,SAAU,CACV,iBAAkB,CAClB,gBAAiB,CACjB,kBAAmB,CACnB,aAGA,YAAa,CACb,kBAAmB,CACnB,0BAA2B,CAC3B,iBAAkB,CAClB,gBAAiB,CACjB,SAAU,CACV,kBAAmB,CACnB,kBAAmB,CACnB,UAGA,UAAW,CACX,eAAgB,CAChB,WAAY,CACZ,sBAAuB,CACvB,eAAgB,CAChB,cAAe,CACf,WAAY,CACZ,WAAY,CACZ,eAGA,sBAAuB,CACvB,kCAAmC,CACnC,4BAA6B,CAC7B,mCAAoC,CACpC,sBAAuB,CACvB,WAAY,CACZ,WAAY,CACZ,+BAAgC,CAChC,iBAAkB,CAClB,aAGA,iBAAkB,CAClB,QAAS,CACT,SAAU,CACV,WAAY,CACZ,UAAW,CACX,kBAAmB,CACnB,WAGA,eAAgB,CAChB,iBAAkB,CAClB,gBAAiB,CACjB,WAGA,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,UAAW,CACX,WAAY,CACZ,sBAAuB,CACvB,WAAY,CACZ,qBAAsB,CACtB,eAAgB,CAChB,cAAe,CACf,kBAAmB,CACnB,iBAGA,WAAY,CACZ,qBAAsB,CACtB,gBAGA,WAAY,CACZ,iBAAkB,CAClB,kBAAmB,CACnB,oCAAqC,CACrC,iBAKA,wBA3tBgC,CA4tBhC,UAAW,CACX,YA9sBoB,CA+sBpB,gBAAiB,CACjB,aAGA,YAAa,CACb,qBAAsB,CACtB,UAAW,CACX,iBAAkB,CAClB,QAAS,CACT,SAAU,CACV,kBAGA,wBAzuB0C,CA0uB1C,sBAAuB,CACvB,WAAY,CACZ,WAAY,CACZ,WAAY,CACZ,kBAAmB,CACnB,iBAAkB,CAClB,oBAAqB,CACrB,eAAgB,CAChB,gBAGA,yBAA0B,CAC1B,cAAe,CACf,eAAgB,CAChB,oBAIA,YAAa,CACb,kBAAmB,CACnB,UAAW,CACX,6BAA8B,CAC9B,YAGA,iBAAkB,CAClB,SAAU,CACV,WAAY,CACZ,kBAAmB,CACnB,cAAe,CACf,YAAa,CACb,kBAAmB,CACnB,QAGA,YAAa,CACb,UAAW,CACX,sBAAuB,CACvB,cAAe,CACf,eAAgB,CAChB,WAAY,CACZ,kBAAmB,CACnB,eAAgB,CAChB,WAGA,WAAY,CACZ,SAAU,CACV,UAAW,CACX,iBAAkB,CAClB,UAGA,UAAW,CACX,iBAAkB,CAClB,QAAS,CACT,OAAQ,CACR,SAAU,CACV,YAGA,WAAY,CACZ,UAAW,CACX,iBAAkB,CAClB,OAAQ,CACR,SAAU,CACV,SAAU,CACV,SAAU,CACV,cAAe,CACf,eAAgB,CAChB,4BAA6B,CAC7B,4BAA6B,CAC7B,kBAIA,iBAAkB,CAClB,OAAQ,CACR,SAAU,CACV,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,eAGA,SAAU,CACV,UAAW,CACX,sBAAuB,CACvB,iBAAkB,CAClB,UAAW,CACX,oBAIA,iBAAkB,CAClB,KAAM,CACN,OAAQ,CACR,SAAU,CACV,WAAY,CACZ,SAAU,CACV,iBAGA,qBAAsB,CACtB,UAAW,CACX,WAAY,CACZ,cAAe,CACf,iBAAkB,CAClB,iBAAkB,CAClB,UAAW,CACX,QAAS,CACT,UAAW,CACX,WAGA,qBAAsB,CACtB,WAAY,CACZ,iBAAkB,CAClB,SAAU,CACV,WAKA,WAAY,CACZ,QAGA,iBAAkB,CAClB,SAGA,mBAAoB",sourcesContent:["$root-color: hsl(284, 6%, 85%);\n$outside-color: hsl(284, 7%, 75%);\n$main-container-color: hsl(284, 12%, 80%);\n$builder-container-color: hsl(288, 4%, 74%);\n$card-width: 100px;\n$card-height: 133px;\n$banner-height: 240px;\n\n$popup-width: 420px;\n\n$builder-height: 150vh;\n$deck-height: calc(#{$builder-height} - #{$banner-height} - 16px);\n\n$tools-width: 300px;\n\n$header-height: 64px;\n$footer-height: 180px;\n\n@font-face {\n\tfont-family: 'Cinzel';\n\tsrc: url('../utils/fonts/Cinzel/Cinzel-VariableFont_wght.ttf');\n\tfont-weight: 100 900;\n\tfont-stretch: 25% 151%;\n}\n\n$header-font: 'Cinzel';\n\n#root {\n\tposition: relative;\n\tbackground-color: $root-color;\n\t--card-width: #{$card-width};\n\t--card-height: #{$card-height};\n}\n\n.magentaLogo {\n\tcolor: grey;\n\tfont-family: $header-font;\n}\n\n.topLogo {\n\tmargin-left: 120px;\n\tmargin-top: 10px;\n\tfont-size: 48px;\n\tfont-weight: 600;\n}\n\n.bottomLogo {\n\tfont-size: 84px;\n\tfont-weight: 700;\n\tmargin-right: 200px;\n\tpadding-top: 56px;\n}\n\n.navContainer {\n\t// background-color: $outside-color;\n\theight: $header-height;\n\tdisplay: flex;\n\ttext-align: center;\n\talign-items: center;\n\twidth: 100%;\n}\n\n.mainPage {\n\twidth: 100%;\n}\n\n.headerBody {\n\twidth: 100%;\n\theight: 100vh;\n\ttext-align: center;\n\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)),\n\t\turl('../utils/images/HeroImage_Smoke.jpg');\n\tbackground-position: center;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n}\n\n.heroText {\n\tfont-family: $header-font;\n\tfont-size: 64px;\n\twidth: 60%;\n\tmargin: 0 auto;\n\tmargin-top: 25vh;\n\tcolor: white;\n}\n\n.taglineText {\n\tfont-size: 36px;\n\tcolor: white;\n\tmargin-top: 4vh;\n}\n\n.headerButtonsContainer {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\tmargin: 0 auto;\n\tmargin-top: 168px;\n\twidth: 40%;\n\tjustify-content: center;\n}\n\n.headerButton {\n\theight: 54px;\n\tborder-radius: 13px;\n\twidth: 272px;\n\tfont-size: 24px;\n}\n\n.builderEnter {\n\tcolor: white;\n\tbackground-color: grey;\n\tfont-weight: bold;\n\tmargin-right: 80px;\n}\n\n.decklistEnter {\n\tcolor: grey;\n\tbackground-color: white;\n}\n\n.contentBody {\n\theight: 3096px;\n}\n\n.featureHeader {\n\tfont-family: $header-font;\n\tfont-size: 56px;\n\tmargin: 80px auto;\n\ttext-align: center;\n}\n\n.builderPage {\n\twidth: 100%;\n\tmin-height: $builder-height;\n\tmargin: 0 auto;\n\tbackground-color: $root-color;\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n}\n\n.builder {\n\theight: 150vh;\n\tposition: relative;\n\tz-index: 0;\n}\n\n/* DECK BUILDER */\n\n.builderContainer {\n\tbackground-color: $builder-container-color;\n\tz-index: 2;\n\tmin-height: calc(100% - 16px);\n\twidth: 0px;\n\tmargin: 8px 0;\n\tmargin-left: 120px;\n\tbox-shadow: inset 0 1px 0 hsl(284, 56%, 85%), 0 1px 3px hsla(0, 0%, 0%, 0.3);\n}\n\n.deckBanner {\n\tposition: relative;\n\theight: $banner-height;\n\twidth: 100%;\n\tbackground-color: rgb(93, 70, 93);\n}\n\n.deckInfo {\n\twidth: 60%;\n\tpadding: 12px 16px;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.deckNameDisplay {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n}\n\n.deckNameField {\n\tborder: none;\n\tbackground-color: transparent;\n\tfont-size: 28px;\n\tfont-family: $header-font;\n}\n\n.deckNameField::placeholder {\n\tcolor: white;\n\topacity: 1;\n}\n\n.deckFormatContainer {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tcolor: white;\n\tfont-family: $header-font;\n\tmargin-top: 12px;\n\tmargin-left: 16px;\n}\n\n.formatHeader {\n\tfont-family: $header-font;\n\tfont-size: 19px;\n}\n\n.formatInput {\n\tborder: none;\n\tbackground-color: transparent;\n\tfont-size: 19px;\n\tfont-family: $header-font;\n\tmargin-left: 6px;\n\tcolor: white;\n}\n\n.menuDownArrow {\n\tmargin: auto 8px;\n\twidth: 13px;\n\theight: auto;\n\tfill: white;\n}\n\n.formatOptionContainer {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttop: 24px;\n\tleft: 88px;\n\theight: 200px;\n\toverflow-y: scroll;\n\tbackground-color: black;\n\tborder: 1px solid grey;\n\tz-index: 10;\n\ttext-align: left;\n\tpadding: 6px;\n\tpadding-right: 16px;\n}\n\n.formatOption {\n\tpadding: 6px 4px;\n\tcolor: white;\n\ttext-align: left;\n\tfont-weight: bold;\n\tfont-size: 16px;\n}\n\n.selectedFormat {\n\tcolor: black;\n\tbackground-color: white;\n}\n\n.cardCount {\n\tcolor: white;\n\ttext-align: left;\n\tmargin: 6px 0;\n\tfont-size: 19px;\n\ttext-indent: 16px;\n\tfont-family: $header-font;\n}\n\n.deckArt {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\theight: 100%;\n\twidth: 300px;\n}\n\n.hoverArt {\n\tborder: 2px dotted white;\n\topacity: 0.8;\n}\n\n.builderExit {\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\tcolor: white;\n\tfont-size: 48px;\n\theight: 0;\n}\n\n.deckContainer {\n\tposition: relative;\n\tmin-height: $deck-height;\n}\n\n//TYPES\n\n.typeGrid {\n\tdisplay: flex;\n\twidth: calc(100% - 20px);\n\tmargin: 0 10px;\n\t-webkit-transition: all 0.25s;\n\ttransition: all 0.25s;\n}\n\n.skinnyGrid {\n\twidth: calc(100% - 320px);\n\t-webkit-transition: all 0.35s;\n\ttransition: all 0.35s;\n}\n\n.typeGridColumn {\n\tpadding-right: 10px; /* gutter size */\n\tbackground-clip: padding-box;\n}\n\n.typeContainer {\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\t-webkit-column-break-inside: avoid; /* Chrome, Safari, Opera */\n\tpage-break-inside: avoid; /* Firefox */\n}\n\n.typeHeader {\n\tdisplay: flex;\n\tflex-direction: row;\n\twidth: 100%;\n\tjustify-content: space-between;\n\tpadding-bottom: 4px;\n\tborder-top-left-radius: 4px;\n\tborder-top-right-radius: 4px;\n\talign-items: center;\n\tz-index: 1;\n}\n\n/* Arrow Experiment */\n\n.arrow-down {\n\tvisibility: hidden;\n\twidth: 30px;\n\theight: 30px;\n\tposition: relative;\n\tbackground: transparent;\n\tbox-shadow: 0px 0px 0px transparent;\n\tborder: 0px solid transparent;\n\ttext-shadow: 0px 0px 0px transparent;\n}\n\n.arrow-down:before,\n.arrow-down:after {\n\tcontent: '';\n\tdisplay: block;\n\twidth: 8px;\n\theight: 2px;\n\tbackground: white;\n\tposition: absolute;\n\tmargin: auto 0;\n\t/* transition: transform 0.5s;        Doesn't currently work*/\n}\n\n.arrow-down:before {\n\tright: 14px;\n\tborder-top-left-radius: 10px;\n\tborder-bottom-left-radius: 10px;\n\ttransform: rotate(45deg);\n}\n\n.arrow-down:after {\n\tright: 10px;\n\ttransform: rotate(-45deg);\n}\n\n.arrow-down.active:before {\n\ttransform: rotate(-45deg);\n}\n\n.arrow-down.active:after {\n\ttransform: rotate(45deg);\n}\n\n/* Arrow Experiment */\n\n.typeHeader:hover {\n\tbackground-color: rgba(0, 0, 0, 0.2);\n}\n\n.typeHeader:hover > .arrow-down {\n\tvisibility: visible;\n}\n\n.typeTitle {\n\ttext-align: left;\n\ttext-indent: 6px;\n\tfont-size: 22px;\n\tmargin-top: 8px;\n\tfont-family: $header-font;\n\tfont-weight: 300;\n}\n\n.typeDivider {\n\twidth: 100%;\n\tmargin-top: 0px;\n\tmargin-bottom: 8px;\n}\n\n.typeContent {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\twidth: 100%;\n}\n\n.tokenContent {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tmargin: 0 10px;\n\twidth: calc(100% - 20px);\n}\n\n//CARDS\n\n.cardName {\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tmargin-top: 4px;\n\tfont-size: 14px;\n}\n\n.cardContainer {\n\tposition: relative;\n\twidth: $card-width;\n\tmargin: 12px 4px 14px 4px;\n\tborder-radius: 6px;\n\ttext-align: center;\n}\n\n.tokenContainer {\n\tposition: relative;\n\twidth: $card-width;\n\tmargin: 12px 4px 14px 4px;\n\tborder-radius: 6px;\n\ttext-align: center;\n}\n\n.cardArtContainer {\n\tposition: relative;\n\twidth: 100%;\n\theight: $card-height;\n\tborder-radius: 6px;\n\tbox-shadow: inset 0 2px 0 hsl(0, 0%, 53%), 0 4px 6px hsla(0, 0%, 0%, 0.3),\n\t\t2px 0 6px hsla(0, 0%, 0%, 0.3), -2px 0 6px hsla(0, 0%, 0%, 0.3);\n}\n\n.cardArt {\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: block;\n\tborder-radius: 6px;\n\tborder: 3px solid black;\n\tbackground-color: black;\n\tobject-fit: cover;\n\tobject-position: 50% 0%;\n\tfilter: saturate(130%) contrast(110%);\n}\n\n.moreCards {\n\topacity: 0.5;\n\tborder: 2px dashed grey;\n}\n\n//Card Quantity\n\n.quantCover {\n\tbackground-image: linear-gradient(\n\t\tto bottom,\n\t\thsla(0, 0%, 0%, 0) 0%,\n\t\thsla(0, 0%, 0%, 0.037) 16.3%,\n\t\thsla(0, 0%, 0%, 0.091) 30.7%,\n\t\thsla(0, 0%, 0%, 0.158) 43.4%,\n\t\thsla(0, 0%, 0%, 0.236) 54.5%,\n\t\thsla(0, 0%, 0%, 0.321) 64.1%,\n\t\thsla(0, 0%, 0%, 0.412) 72.4%,\n\t\thsla(0, 0%, 0%, 0.506) 79.3%,\n\t\thsla(0, 0%, 0%, 0.599) 85%,\n\t\thsla(0, 0%, 0%, 0.688) 89.6%,\n\t\thsla(0, 0%, 0%, 0.772) 93.2%,\n\t\thsla(0, 0%, 0%, 0.846) 95.9%,\n\t\thsla(0, 0%, 0%, 0.909) 97.9%,\n\t\thsla(0, 0%, 0%, 0.958) 99.1%,\n\t\thsla(0, 0%, 0%, 0.989) 99.8%,\n\t\thsl(0, 0%, 0%) 100%\n\t);\n\n\tborder-radius: 6px;\n\twidth: 100%;\n\theight: 100%;\n\tz-index: 6;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\ttransition: background-color 0.5s;\n}\n\n.settingsCover {\n\tbackground-color: hsla(0, 0%, 9%, 0.55);\n\topacity: 0;\n\tz-index: 7;\n\ttransition: 0.45s;\n\tdisplay: flex;\n\tcursor: pointer;\n}\n\n.settingsHover {\n\topacity: 1;\n\ttransition: 0.45s;\n}\n\n.settingsIcon {\n\topacity: 1;\n\theight: 68px;\n\twidth: 68px;\n\tmargin: 26px auto;\n\tz-index: 6;\n}\n\n.quantContainer {\n\tposition: relative;\n\tfont-size: 20px;\n\theight: 24px;\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\talign-items: center;\n\ttransform: translateY(-24px);\n\tz-index: 8;\n}\n\n.quantButton {\n\tfont-weight: bold;\n\tfont-size: 28px;\n\topacity: 0.4;\n\tcolor: rgb(179, 179, 179);\n\tz-index: 10;\n\theight: 100%;\n\tdisplay: inline-flex;\n\talign-items: center;\n}\n\n.decrementCard {\n\tcolor: white;\n\ttext-shadow: 2px 2px 3px red, 2px -2px 3px red, -2px 2px 3px red,\n\t\t-2px -2px 3px red;\n\ttransition: 0.45s;\n}\n\n.decrementCard:hover {\n\tcolor: red;\n\ttext-shadow: 1px 1px 2px white, 1px -1px 2px white, -1px 1px 2px white,\n\t\t-1px -1px 2px white;\n}\n\n.incrementCard {\n\tcolor: white;\n\ttext-shadow: 2px 2px 3px green, 2px -2px 3px green, -2px 2px 3px green,\n\t\t-2px -2px 3px green;\n\ttransition: 0.45s;\n}\n\n.incrementCard:hover {\n\tcolor: green;\n\ttext-shadow: 1px 1px 2px white, -1px 1px 2px white, 1px -1px 2px white,\n\t\t-1px -1px 2px white;\n}\n\n.cardQuantity {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: end;\n\tcolor: white;\n\ttext-shadow: -0.5px -0.5px 0 #000, 0.5px -0.5px 0 #000, -0.5px 0.5px 0 #000,\n\t\t0.5px 0.5px 0 #000;\n\tz-index: 3;\n\tfont-family: $header-font;\n\tletter-spacing: 2px;\n\tmargin-left: 5px;\n}\n\n.quantityX {\n\tfont-family: inherit;\n\tmargin-top: 6px;\n\tfont-size: 12px;\n}\n\n.quantInput {\n\tfont-family: inherit;\n\tdisplay: inline-block;\n\twhite-space: nowrap;\n}\n\n.bigCardImage {\n\tposition: absolute;\n\tleft: calc(#{$card-width + 4px});\n\ttop: 0;\n\tborder-radius: 20px;\n\twidth: $popup-width;\n\tz-index: 10;\n\tfilter: saturate(120%) contrast(110%);\n}\n\n.cardDragImage {\n\twidth: $card-width;\n\theight: $card-height;\n}\n\n.ghostCard {\n\twidth: $card-width;\n\theight: $card-height;\n\tborder: 3px dotted grey;\n\tborder-radius: 6px;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n.ghostCard > * {\n\topacity: 0;\n}\n\n//Settings\n\n.settings {\n\tposition: absolute;\n\tleft: calc(#{$card-width + 4px});\n\ttop: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: rgb(25, 25, 25);\n\tcolor: white;\n\twidth: $popup-width;\n\theight: 540px;\n\tborder: 2px solid grey;\n\tz-index: 12;\n\tborder-radius: 6px;\n\tfont-size: 24px;\n\tpointer-events: auto;\n}\n\n.settingsNameContainer {\n\twidth: 95%;\n\ttext-align: center;\n\tmargin: 10px auto;\n\tfont-family: Cinzel;\n}\n\n.setSelector {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\tposition: relative;\n\tmargin: 16px auto;\n\twidth: 88%;\n\talign-items: center;\n\twhite-space: nowrap;\n}\n\n.setInput {\n\twidth: 100%;\n\tmargin-left: 8px;\n\tcolor: black;\n\tbackground-color: white;\n\ttext-indent: 4px;\n\tfont-size: 16px;\n\theight: 24px;\n\tborder: none;\n}\n\n.setDropButton {\n\tbackground: transparent;\n\tbox-shadow: 0px 0px 0px transparent;\n\tborder: 0px solid transparent;\n\ttext-shadow: 0px 0px 0px transparent;\n\tbackground-color: white;\n\theight: 24px;\n\tpadding: 2px;\n\tborder-left: 1px solid lightgrey;\n\tpadding-right: 4px;\n}\n\n.setDropDown {\n\tposition: absolute;\n\ttop: 24px;\n\tleft: 52px;\n\twidth: 85.8%;\n\tz-index: 11;\n\twhite-space: nowrap;\n}\n\n.overflowY {\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tmin-height: 280px;\n}\n\n.setOption {\n\tposition: absolute;\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\theight: 32px;\n\tbackground-color: white;\n\tcolor: black;\n\tborder: 3px solid grey;\n\ttext-indent: 4px;\n\tfont-size: 18px;\n\twhite-space: nowrap;\n}\n\n.setOption:hover {\n\tcolor: white;\n\tbackground-color: grey;\n}\n\n.smallCardImage {\n\twidth: 240px;\n\tposition: absolute;\n\tborder-radius: 20px;\n\tfilter: saturate(120%) contrast(110%);\n}\n\n//Footer\n\n.footerContainer {\n\tbackground-color: $outside-color;\n\twidth: 100%;\n\theight: $footer-height;\n\ttext-align: right;\n}\n\n.newDeckArea {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tposition: absolute;\n\ttop: 50vh;\n\tz-index: 1;\n}\n\n.createDeckButton {\n\tbackground-color: $builder-container-color;\n\tborder: 2px solid black;\n\tcolor: black;\n\twidth: 240px;\n\theight: 28px;\n\tborder-radius: 50px;\n\ttext-align: center;\n\tdisplay: inline-block;\n\tmargin: 8px auto;\n}\n\n.inputFileLabel {\n\ttext-decoration: underline;\n\tcursor: pointer;\n\tmargin: 8px auto;\n}\n\n// Search Classes\n.searchbarContainer {\n\tdisplay: flex;\n\tflex-direction: row;\n\twidth: 100%;\n\tjustify-content: space-between;\n}\n\n.searchArea {\n\tposition: relative;\n\twidth: 50%;\n\tmargin: 16px;\n\tmargin-bottom: 24px;\n\tmargin-right: 0;\n\tdisplay: flex;\n\tflex-direction: row;\n}\n\n.search {\n\toutline: none;\n\twidth: 100%;\n\tbackground-color: white;\n\tfont-size: 24px;\n\ttext-align: left;\n\theight: 32px;\n\tborder-radius: 10px;\n\ttext-indent: 4px;\n}\n\n.searchBar {\n\tcolor: black;\n\tz-index: 2;\n\topacity: .7;\n\tposition: relative;\n}\n\n.ghostBar {\n\tcolor: grey;\n\tposition: absolute;\n\tleft: 0px;\n\ttop: 0px;\n\tz-index: 1;\n}\n\n.searchIcon {\n\theight: 32px;\n\twidth: auto;\n\tposition: absolute;\n\ttop: 0px;\n\tright: 0px;\n\tz-index: 2;\n\tfill: grey;\n\tcursor: pointer;\n\tpadding: 6px 6px;\n\tborder-top-right-radius: 10px;\n\tborder-top-right-radius: 10px;\n}\n\n\n.loadingContainer {\n\tposition: absolute;\n\ttop: 40%;\n\tz-index: 3;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n}\n\n.loadingCircle {\n\twidth: 6px;\n\theight: 6px;\n\tbackground-color: black;\n\tborder-radius: 50%;\n\tmargin: 2px;\n}\n\n// Deck Tools\n.decktoolsContainer {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\twidth: 0px;\n\theight: 100%;\n\tz-index: 2;\n}\n\n.decktoolsButton {\n\tborder: 2px solid grey;\n\twidth: 72px;\n\theight: 48px;\n\tfont-size: 20px;\n\ttext-align: center;\n\tposition: absolute;\n\tright: 20px;\n\ttop: 20px;\n\tz-index: 10;\n}\n\n.toolsMenu {\n\tbackground-color: grey;\n\theight: 100%;\n\tposition: relative;\n\tz-index: 2;\n}\n\n// Utility\n\n#draggable {\n\tcursor: move;\n}\n\n.hidden {\n\tvisibility: hidden;\n}\n\n.noHover {\n\tpointer-events: none;\n}\n"],sourceRoot:""}]);const g=d},1003:(e,r,t)=>{"use strict";t.d(r,{Z:()=>tr});var n=t(4015),a=t.n(n),o=t(3645),i=t.n(o),l=t(1667),s=t.n(l),u=t(2866),c=t(1179),d=t(8424),h=t(5277),f=t(7973),g=t(8896),p=t(901),m=t(5534),y=t(1952),S=t(7134),v=t(3237),C=t(1802),A=t(1875),b=t(8578),k=t(2086),w=t(1538),B=t(3802),D=t(7538),T=t(8250),M=t(3888),E=t(2937),P=t(3210),x=t(3809),R=t(5305),G=t(5148),F=t(4620),W=t(8961),O=t(5633),H=t(7977),L=t(4737),I=t(6819),N=t(9678),V=t(159),z=t(1860),K=t(8592),U=t(9650),j=t(7935),_=t(9896),q=t(4196),Z=t(9824),J=t(3972),Y=t(7075),Q=t(7271),$=t(4571),X=t(6160),ee=t(2597),re=t(6362),te=t(2145),ne=t(741),ae=t(1462),oe=i()(a()),ie=s()(u.Z),le=s()(c.Z),se=s()(d.Z),ue=s()(h.Z),ce=s()(f.Z),de=s()(g.Z),he=s()(p.Z),fe=s()(m.Z),ge=s()(y.Z),pe=s()(S.Z),me=s()(v.Z),ye=s()(C.Z),Se=s()(A.Z),ve=s()(b.Z),Ce=s()(k.Z),Ae=s()(w.Z),be=s()(B.Z),ke=s()(D.Z),we=s()(T.Z),Be=s()(M.Z),De=s()(E.Z),Te=s()(P.Z),Me=s()(x.Z),Ee=s()(R.Z),Pe=s()(G.Z),xe=s()(F.Z),Re=s()(W.Z),Ge=s()(O.Z),Fe=s()(H.Z),We=s()(L.Z),Oe=s()(I.Z),He=s()(N.Z),Le=s()(V.Z),Ie=s()(z.Z),Ne=s()(K.Z),Ve=s()(U.Z),ze=s()(j.Z),Ke=s()(_.Z),Ue=s()(q.Z),je=s()(Z.Z),_e=s()(J.Z),qe=s()(Y.Z),Ze=s()(Q.Z),Je=s()($.Z),Ye=s()(X.Z),Qe=s()(ee.Z),$e=s()(re.Z),Xe=s()(te.Z),er=s()(ne.Z),rr=s()(ae.Z);oe.push([e.id,".cardColorContainer{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap;position:absolute;visibility:visible;z-index:5;left:0px;top:0px;width:calc(100% - 6px);color:black;padding-left:3px;margin-left:3px;margin-top:3px}.manaHover{opacity:0.75;transition:0.45s}.cardColorDot{height:17px;width:17px;margin:2px 0;margin-right:1px;border-radius:100%;display:inline-block;background:transparent;border:1px solid black;display:block;background-attachment:fixed;background-repeat:no-repeat;background-size:contain;filter:contrast(100%)}.blue{content:url("+ie+")}.black{content:url("+le+")}.green{content:url("+se+")}.red{content:url("+ue+")}.white{content:url("+ce+")}.C{content:url("+de+")}.X{content:url("+he+")}.S{content:url("+fe+")}.mana0{content:url("+ge+")}.mana1{content:url("+pe+")}.mana2{content:url("+me+")}.mana3{content:url("+ye+")}.mana4{content:url("+Se+")}.mana5{content:url("+ve+")}.mana6{content:url("+Ce+")}.mana7{content:url("+Ae+")}.mana8{content:url("+be+")}.mana9{content:url("+ke+")}.mana10{content:url("+we+")}.mana11{content:url("+Be+")}.mana12{content:url("+De+")}.mana13{content:url("+Te+")}.mana14{content:url("+Me+")}.mana15{content:url("+Ee+")}.mana16{content:url("+Pe+")}.mana17{content:url("+xe+")}.mana18{content:url("+Re+")}.mana19{content:url("+Ge+")}.mana20{content:url("+Fe+")}.Uor2{content:url("+We+")}.Bor2{content:url("+Oe+")}.Gor2{content:url("+He+")}.Wor2{content:url("+Le+")}.Ror2{content:url("+Ie+")}.RorW{content:url("+Ne+")}.GorU{content:url("+Ve+")}.BorG{content:url("+ze+")}.BorR{content:url("+Ke+")}.GorW{content:url("+Ue+")}.RorG{content:url("+je+")}.UorB{content:url("+_e+")}.UorR{content:url("+qe+")}.WorB{content:url("+Ze+")}.WorU{content:url("+Je+")}.UP{content:url("+Ye+")}.GP{content:url("+Qe+")}.RP{content:url("+$e+")}.BP{content:url("+Xe+")}.WP{content:url("+er+")}.HW{content:url("+rr+");width:8.5px;border-top-left-radius:0%;border-bottom-left-radius:0%;border-top-right-radius:100px;border-bottom-right-radius:100px}\n","",{version:3,sources:["webpack://./src/css/mana.scss"],names:[],mappings:"AAAA,oBACC,YAAa,CACb,kBAAmB,CACnB,0BAA2B,CAC3B,cAAe,CACf,iBAAkB,CAClB,kBAAmB,CACnB,SAAU,CACV,QAAS,CACT,OAAQ,CACR,sBAAuB,CACvB,WAAY,CACZ,gBAAiB,CACjB,eAAgB,CAChB,cAAe,CACf,WAGA,YAAa,CACb,gBAAiB,CACjB,cAGA,WAAY,CACZ,UAAW,CACX,YAAa,CACb,gBAAiB,CACjB,kBAAmB,CACnB,oBAAqB,CACrB,sBAAuB,CACvB,sBAAuB,CACvB,aAAc,CACd,2BAA4B,CAC5B,2BAA4B,CAC5B,uBAAwB,CACxB,qBAAsB,CACtB,MAGA,+CAAiD,CACjD,OAEA,+CAAkD,CAClD,OAEA,+CAAkD,CAClD,KAEA,+CAAgD,CAChD,OAEA,+CAAkD,CAClD,GAEA,+CAAsD,CACtD,GAEA,+CAA8C,CAC9C,GAEA,+CAAiD,CACjD,OAEA,+CAA8C,CAC9C,OAEA,+CAA8C,CAC9C,OAEA,gDAA8C,CAC9C,OAEA,gDAA8C,CAC9C,OAEA,gDAA8C,CAC9C,OAEA,gDAA8C,CAC9C,OAEA,gDAA8C,CAC9C,OAEA,gDAA8C,CAC9C,OAEA,gDAA8C,CAC9C,OAEA,gDAA8C,CAC9C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,QAEA,gDAA+C,CAC/C,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,MAEA,gDAAiD,CACjD,IAEA,gDAA+C,CAC/C,IAEA,gDAA+C,CAC/C,IAEA,gDAA+C,CAC/C,IAEA,gDAA+C,CAC/C,IAEA,gDAA+C,CAC/C,IAGA,gDAAsD,CACtD,WAAY,CACZ,yBAA0B,CAC1B,4BAA6B,CAC7B,6BAA8B,CAC9B,gCAAiC",sourcesContent:[".cardColorContainer {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\tflex-wrap: wrap;\n\tposition: absolute;\n\tvisibility: visible;\n\tz-index: 5;\n\tleft: 0px;\n\ttop: 0px;\n\twidth: calc(100% - 6px);\n\tcolor: black;\n\tpadding-left: 3px;\n\tmargin-left: 3px;\n\tmargin-top: 3px;\n}\n\n.manaHover {\n\topacity: 0.75;\n\ttransition: 0.45s;\n}\n\n.cardColorDot {\n\theight: 17px;\n\twidth: 17px;\n\tmargin: 2px 0;\n\tmargin-right: 1px;\n\tborder-radius: 100%;\n\tdisplay: inline-block;\n\tbackground: transparent;\n\tborder: 1px solid black;\n\tdisplay: block;\n\tbackground-attachment: fixed;\n\tbackground-repeat: no-repeat;\n\tbackground-size: contain;\n\tfilter: contrast(100%);\n}\n\n.blue {\n\tcontent: url('../utils/images/mana/BlueMana.png');\n}\n.black {\n\tcontent: url('../utils/images/mana/BlackMana.png');\n}\n.green {\n\tcontent: url('../utils/images/mana/GreenMana.png');\n}\n.red {\n\tcontent: url('../utils/images/mana/RedMana.png');\n}\n.white {\n\tcontent: url('../utils/images/mana/WhiteMana.png');\n}\n.C {\n\tcontent: url('../utils/images/mana/ColorlessMana.png');\n}\n.X {\n\tcontent: url('../utils/images/mana/XMana.png');\n}\n.S {\n\tcontent: url('../utils/images/mana/SnowMana.png');\n}\n.mana0 {\n\tcontent: url('../utils/images/mana/0Mana.png');\n}\n.mana1 {\n\tcontent: url('../utils/images/mana/1Mana.png');\n}\n.mana2 {\n\tcontent: url('../utils/images/mana/2Mana.png');\n}\n.mana3 {\n\tcontent: url('../utils/images/mana/3Mana.png');\n}\n.mana4 {\n\tcontent: url('../utils/images/mana/4Mana.png');\n}\n.mana5 {\n\tcontent: url('../utils/images/mana/5Mana.png');\n}\n.mana6 {\n\tcontent: url('../utils/images/mana/6Mana.png');\n}\n.mana7 {\n\tcontent: url('../utils/images/mana/7Mana.png');\n}\n.mana8 {\n\tcontent: url('../utils/images/mana/8Mana.png');\n}\n.mana9 {\n\tcontent: url('../utils/images/mana/9Mana.png');\n}\n.mana10 {\n\tcontent: url('../utils/images/mana/10Mana.png');\n}\n.mana11 {\n\tcontent: url('../utils/images/mana/11Mana.png');\n}\n.mana12 {\n\tcontent: url('../utils/images/mana/12Mana.png');\n}\n.mana13 {\n\tcontent: url('../utils/images/mana/13Mana.png');\n}\n.mana14 {\n\tcontent: url('../utils/images/mana/14Mana.png');\n}\n.mana15 {\n\tcontent: url('../utils/images/mana/15Mana.png');\n}\n.mana16 {\n\tcontent: url('../utils/images/mana/16Mana.png');\n}\n.mana17 {\n\tcontent: url('../utils/images/mana/17Mana.png');\n}\n.mana18 {\n\tcontent: url('../utils/images/mana/18Mana.png');\n}\n.mana19 {\n\tcontent: url('../utils/images/mana/19Mana.png');\n}\n.mana20 {\n\tcontent: url('../utils/images/mana/20Mana.png');\n}\n.Uor2 {\n\tcontent: url('../utils/images/mana/Uor2Mana.png');\n}\n.Bor2 {\n\tcontent: url('../utils/images/mana/Bor2Mana.png');\n}\n.Gor2 {\n\tcontent: url('../utils/images/mana/Gor2Mana.png');\n}\n.Wor2 {\n\tcontent: url('../utils/images/mana/Wor2Mana.png');\n}\n.Ror2 {\n\tcontent: url('../utils/images/mana/Ror2Mana.png');\n}\n.RorW {\n\tcontent: url('../utils/images/mana/RorWMana.png');\n}\n.GorU {\n\tcontent: url('../utils/images/mana/GorUMana.png');\n}\n.BorG {\n\tcontent: url('../utils/images/mana/BorGMana.png');\n}\n.BorR {\n\tcontent: url('../utils/images/mana/BorRMana.png');\n}\n.GorW {\n\tcontent: url('../utils/images/mana/GorWMana.png');\n}\n.RorG {\n\tcontent: url('../utils/images/mana/RorGMana.png');\n}\n.UorB {\n\tcontent: url('../utils/images/mana/UorBMana.png');\n}\n.UorR {\n\tcontent: url('../utils/images/mana/UorRMana.png');\n}\n.WorB {\n\tcontent: url('../utils/images/mana/WorBMana.png');\n}\n.WorU {\n\tcontent: url('../utils/images/mana/WorUMana.png');\n}\n.UP {\n\tcontent: url('../utils/images/mana/UPMana.png');\n}\n.GP {\n\tcontent: url('../utils/images/mana/GPMana.png');\n}\n.RP {\n\tcontent: url('../utils/images/mana/RPMana.png');\n}\n.BP {\n\tcontent: url('../utils/images/mana/BPMana.png');\n}\n.WP {\n\tcontent: url('../utils/images/mana/WPMana.png');\n}\n\n.HW {\n\tcontent: url('../utils/images/mana/HalfWhiteMana.png');\n\twidth: 8.5px;\n\tborder-top-left-radius: 0%;\n\tborder-bottom-left-radius: 0%;\n\tborder-top-right-radius: 100px;\n\tborder-bottom-right-radius: 100px;\n}\n"],sourceRoot:""}]);const tr=oe},4231:(e,r,t)=>{"use strict";t.d(r,{Z:()=>l});var n=t(4015),a=t.n(n),o=t(3645),i=t.n(o)()(a());i.push([e.id,".modal{position:fixed;overflow:hidden;top:0;right:0;bottom:0;left:0;background-color:rgba(0,0,0,0.65);width:100%;height:100%;display:flex;align-items:center;justify-content:center;padding:1.5em 1em;z-index:999999;box-sizing:border-box}.modal.modal-fade{animation:fade-in 1s 1 linear;animation-fill-mode:forwards;opacity:0}.modal>.modal-overlay{width:100%;height:100%;position:absolute;top:0;left:0}.modal>.modal-close{position:absolute;right:15px;top:10px;color:#5e5e5e;cursor:pointer;font-size:1.25em;padding:7px;background:rgba(255,255,255,0.749);border:1px solid #c3c0c0;border-radius:50%;width:42px;height:42px;display:flex;align-items:center;justify-content:center;z-index:999999;box-sizing:border-box;display:inline-block;text-align:center}.modal>.modal-close:hover{background:rgba(255,255,255,0.989)}.modal>.modal-body{z-index:2;position:relative;margin:0 auto;background-color:white;border:1px solid rgba(255,255,255,0.25);border-radius:3px;overflow-x:hidden;overflow-y:auto;max-height:100%;padding:15px 20px;color:#c3c0c0}@keyframes fade-in{0%{animation-timing-function:cubic-bezier(0.2242, 0.7499, 0.3142, 0.8148);opacity:0}100%{opacity:1}}.authHeader{color:var(--header-text-color);background-color:var(--header-color);text-align:center;font-size:48px}.form-group{margin:16px;align-items:center;text-align:center;display:flex;flex-direction:column}.authInput{font-size:36px;height:36px;margin:16px}.login-form{display:flex;flex-direction:column;width:100%}.register-form{display:flex;flex-direction:column;width:100%}.authButton{font-size:28px;height:48px;width:200px;align-items:center;margin:16px auto;border:1px solid black}.importInfo{width:80vw;background-color:grey;color:white;margin:-15px -20px;padding:50px}.progress{height:20px}.progressBar{border:1px solid lightgrey;border-radius:8px;margin:10px 6px;padding-top:20px;position:relative;width:calc(100% - 12px)}.progressAmount{background-color:purple;border-radius:8px;position:absolute;top:0;left:0}.importName{text-align:center}\n","",{version:3,sources:["webpack://./src/css/modal.scss"],names:[],mappings:"AAAA,OACC,cAAe,CACf,eAAgB,CAChB,KAAM,CACN,OAAQ,CACR,QAAS,CACT,MAAO,CACP,iCAAqC,CACrC,UAAW,CACX,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,iBAAkB,CAClB,cAAe,CACf,qBAAsB,CACtB,kBAGA,6BAA8B,CAC9B,4BAA6B,CAC7B,SAAU,CACV,sBAGA,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,oBAGA,iBAAkB,CAClB,UAAW,CACX,QAAS,CACT,aAAc,CACd,cAAe,CACf,gBAAiB,CACjB,WAAY,CACZ,kCAAsC,CACtC,wBAAyB,CACzB,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,cAAe,CACf,qBAAsB,CACtB,oBAAqB,CACrB,iBAAkB,CAClB,0BAGA,kCAAsC,CACtC,mBAGA,SAAU,CACV,iBAAkB,CAClB,aAAc,CACd,sBAAuB,CACvB,uCAA2C,CAC3C,iBAAkB,CAClB,iBAAkB,CAClB,eAAgB,CAChB,eAAgB,CAChB,iBAAkB,CAClB,aAAc,CACd,mBAGA,GACC,sEAAuE,CACvE,SAAU,CAEX,KACC,SAAU,CAAA,CAIZ,YACC,8BAA+B,CAC/B,oCAAqC,CACrC,iBAAkB,CAClB,cAAe,CACf,YAGA,WAAY,CACZ,kBAAmB,CACnB,iBAAkB,CAClB,YAAa,CACb,qBAAsB,CACtB,WAGA,cAAe,CACf,WAAY,CACZ,WAAY,CACZ,YAGA,YAAa,CACb,qBAAsB,CACtB,UAAW,CACX,eAGA,YAAa,CACb,qBAAsB,CACtB,UAAW,CACX,YAGA,cAAe,CACf,WAAY,CACZ,WAAY,CACZ,kBAAmB,CACnB,gBAAiB,CACjB,sBAAuB,CACvB,YAGA,UAAW,CACX,qBAAsB,CACtB,WAAY,CACZ,kBAAmB,CACnB,YAAa,CACb,UAGA,WAAY,CACZ,aAGA,0BAA2B,CAC3B,iBAAkB,CAClB,eAAgB,CAChB,gBAAiB,CACjB,iBAAkB,CAClB,uBAAwB,CACxB,gBAGA,uBAAwB,CACxB,iBAAkB,CAClB,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,YAGA,iBAAkB",sourcesContent:[".modal {\n\tposition: fixed;\n\toverflow: hidden;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground-color: rgba(0, 0, 0, 0.65);\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 1.5em 1em;\n\tz-index: 999999;\n\tbox-sizing: border-box;\n}\n\n.modal.modal-fade {\n\tanimation: fade-in 1s 1 linear;\n\tanimation-fill-mode: forwards;\n\topacity: 0;\n}\n\n.modal > .modal-overlay {\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n.modal > .modal-close {\n\tposition: absolute;\n\tright: 15px;\n\ttop: 10px;\n\tcolor: #5e5e5e;\n\tcursor: pointer;\n\tfont-size: 1.25em;\n\tpadding: 7px;\n\tbackground: rgba(255, 255, 255, 0.749);\n\tborder: 1px solid #c3c0c0;\n\tborder-radius: 50%;\n\twidth: 42px;\n\theight: 42px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tz-index: 999999;\n\tbox-sizing: border-box;\n\tdisplay: inline-block;\n\ttext-align: center;\n}\n\n.modal > .modal-close:hover {\n\tbackground: rgba(255, 255, 255, 0.989);\n}\n\n.modal > .modal-body {\n\tz-index: 2;\n\tposition: relative;\n\tmargin: 0 auto;\n\tbackground-color: white;\n\tborder: 1px solid rgba(255, 255, 255, 0.25);\n\tborder-radius: 3px;\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\tmax-height: 100%;\n\tpadding: 15px 20px;\n\tcolor: #c3c0c0;\n}\n\n@keyframes fade-in {\n\t0% {\n\t\tanimation-timing-function: cubic-bezier(0.2242, 0.7499, 0.3142, 0.8148);\n\t\topacity: 0;\n\t}\n\t100% {\n\t\topacity: 1;\n\t}\n}\n\n.authHeader {\n\tcolor: var(--header-text-color);\n\tbackground-color: var(--header-color);\n\ttext-align: center;\n\tfont-size: 48px;\n}\n\n.form-group {\n\tmargin: 16px;\n\talign-items: center;\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.authInput {\n\tfont-size: 36px;\n\theight: 36px;\n\tmargin: 16px;\n}\n\n.login-form {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n}\n\n.register-form {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n}\n\n.authButton {\n\tfont-size: 28px;\n\theight: 48px;\n\twidth: 200px;\n\talign-items: center;\n\tmargin: 16px auto;\n\tborder: 1px solid black;\n}\n\n.importInfo {\n\twidth: 80vw;\n\tbackground-color: grey;\n\tcolor: white;\n\tmargin: -15px -20px;\n\tpadding: 50px;\n}\n\n.progress {\n\theight: 20px;\n}\n\n.progressBar {\n\tborder: 1px solid lightgrey;\n\tborder-radius: 8px;\n\tmargin: 10px 6px;\n\tpadding-top: 20px;\n\tposition: relative;\n\twidth: calc(100% - 12px);\n}\n\n.progressAmount {\n\tbackground-color: purple;\n\tborder-radius: 8px;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n.importName {\n\ttext-align: center;\n}"],sourceRoot:""}]);const l=i},9600:(e,r,t)=>{"use strict";t.d(r,{Z:()=>h});var n=t(4015),a=t.n(n),o=t(3645),i=t.n(o),l=t(1667),s=t.n(l),u=t(7881),c=i()(a()),d=s()(u.Z);c.push([e.id,"@font-face{font-family:'Montserrat';src:url("+d+");font-weight:normal;font-style:normal}*,*:before,*:after{box-sizing:border-box;font-family:\"Montserrat\";scroll-behavior:smooth;--scrollbarBG: #cfd8dc;--thumbBG: #90a4ae;scrollbar-width:thin;scrollbar-color:var(--thumbBG) var(--scrollbarBG)}*::-webkit-scrollbar{width:11px}*::-webkit-scrollbar-track{background:var(--scrollbarBG)}*::-webkit-scrollbar-thumb{background-color:var(--thumbBG);border-radius:6px;border:3px solid var(--scrollbarBG)}html,body,div,span,object,iframe,figure,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,code,em,img,small,strike,strong,sub,sup,tt,b,u,i,ol,ul,li,fieldset,form,label,table,caption,tbody,tfoot,thead,tr,th,td,main,canvas,embed,footer,header,nav,section,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;text-size-adjust:none}footer,header,nav,section,main{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input{-webkit-appearance:none;border-radius:0}button{outline:none;cursor:pointer;background-color:transparent;border:none}\n","",{version:3,sources:["webpack://./src/css/reset.scss"],names:[],mappings:"AAAA,WACC,wBAAyB,CACzB,2CAA4D,CAC5D,kBAAmB,CACnB,iBAAkB,CAKnB,mBAGC,qBAAsB,CACtB,wBANuB,CAOvB,sBAAuB,CACvB,sBAAc,CACd,kBAAU,CACV,oBAAqB,CACrB,iDAAkD,CAClD,qBAGA,UAAW,CACX,2BAEA,6BAA8B,CAC9B,2BAEA,+BAAgC,CAChC,iBAAkB,CAClB,mCAAoC,CACpC,sPAqDA,QAAS,CACT,SAAU,CACV,QAAS,CACT,cAAe,CACf,YAAa,CACb,uBAAwB,CACxB,iCAAkC,CAClC,kCAAmC,CACnC,qBAAsB,CACtB,+BAOA,aAAc,CACd,KAGA,aAAc,CACd,MAIA,eAAgB,CAChB,aAIA,WAAY,CACZ,oDAMA,UAAW,CACX,YAAa,CACb,MAGA,wBAAyB,CACzB,gBAAiB,CACjB,MAGA,uBAAwB,CACxB,eAAgB,CAChB,OAIA,YAAa,CACb,cAAe,CACf,4BAA6B,CAC7B,WAAY",sourcesContent:["@font-face {\n\tfont-family: 'Montserrat';\n\tsrc: url('../utils/fonts/Montserrat/Montserrat-Regular.ttf');\n\tfont-weight: normal;\n\tfont-style: normal;\n}\n\n$body-font: 'Montserrat';\n\n*,\n*:before,\n*:after {\n\tbox-sizing: border-box;\n\tfont-family: $body-font;\n\tscroll-behavior: smooth;\n\t--scrollbarBG: #cfd8dc;\n\t--thumbBG: #90a4ae;\n\tscrollbar-width: thin;\n\tscrollbar-color: var(--thumbBG) var(--scrollbarBG);\n}\n\n*::-webkit-scrollbar {\n\twidth: 11px;\n}\n*::-webkit-scrollbar-track {\n\tbackground: var(--scrollbarBG);\n}\n*::-webkit-scrollbar-thumb {\n\tbackground-color: var(--thumbBG);\n\tborder-radius: 6px;\n\tborder: 3px solid var(--scrollbarBG);\n}\n\nhtml,\nbody,\ndiv,\nspan,\nobject,\niframe,\nfigure,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\ncode,\nem,\nimg,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nb,\nu,\ni,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\nmain,\ncanvas,\nembed,\nfooter,\nheader,\nnav,\nsection,\nvideo {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-rendering: optimizeLegibility;\n\t-webkit-font-smoothing: antialiased;\n\ttext-size-adjust: none;\n}\n\nfooter,\nheader,\nnav,\nsection,\nmain {\n\tdisplay: block;\n}\n\nbody {\n\tline-height: 1;\n}\n\nol,\nul {\n\tlist-style: none;\n}\n\nblockquote,\nq {\n\tquotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n\tcontent: '';\n\tcontent: none;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\ninput {\n\t-webkit-appearance: none;\n\tborder-radius: 0;\n}\n\n/* TO DO: Make buttons accessible: https://www.eventbrite.com/engineering/how-to-fix-the-ugly-focus-ring-and-not-break-accessibility-in-react/ */\nbutton {\n\toutline: none;\n\tcursor: pointer;\n\tbackground-color: transparent;\n\tborder: none;\n}\n"],sourceRoot:""}]);const h=c},3645:e=>{"use strict";e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var t=e(r);return r[2]?"@media ".concat(r[2]," {").concat(t,"}"):t})).join("")},r.i=function(e,t,n){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(n)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);n&&a[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),r.push(s))}},r}},4015:e=>{"use strict";function r(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}e.exports=function(e){var t,n,a=(n=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(t,n)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),u="/*# ".concat(s," */"),c=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[o].concat(c).concat([u]).join("\n")}return[o].join("\n")}},1667:e=>{"use strict";e.exports=function(e,r){return r||(r={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),r.hash&&(e+=r.hash),/["'() \t\n]/.test(e)||r.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},6782:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"782c95190d6581b7bbc9084742e50b14.jpg"},1952:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"7945daed27249a06073347bf6e805167.png"},8250:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"eef9942281009ad5d8601489758652a0.png"},3888:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"9183da846fdf50496d63829a5c2eaaad.png"},2937:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"f0713ad4fb551360e418ada16ae91d21.png"},3210:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"ae2edec92a9b12f11120c97318753b97.png"},3809:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"716a4db94469f6181547aadddd979a5b.png"},5305:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"df4b45a851c78ca231405b58e142af69.png"},5148:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"ed1ba51d3a502079c0d918b5e19408d5.png"},4620:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"a584dbc5d216f1cc4f978db491aff4b0.png"},8961:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"ca6127b2c54e7a0aa2b3c00afdf44080.png"},5633:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"f947e2f28895336169104289c0f75ef2.png"},7134:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"284fd9f84e1d50c73cdbec1e565081fd.png"},7977:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"4a46d1ad1c8a9f7e2d3fccbfd02130ee.png"},3237:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"f8b6d583ccfb0512cdfab3a85a206270.png"},1802:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"12f731eecfe2886f4506aa9a842a407e.png"},1875:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"670f629c9af3920663e65296e9bd45d0.png"},8578:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"4a2bc8aff6caa355038e45aa23b1c860.png"},2086:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"7e8d31e40cf25b774cbd13271f59218b.png"},1538:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"0155855812a3bb8b7b1078bc35d69bd1.png"},3802:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"7e09643e8871a2756935ce0aab676167.png"},7538:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"5bf94f58e49d1bd714fd59d3be713977.png"},2145:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"ffbf40c19ee096385beabc50c2ccd631.png"},1179:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"01a998d251f92f45eda505bf05ba4afe.png"},2866:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"9d382b7b2ab89041ac06dbb133be8471.png"},6819:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"a01f837e515166b6b517bb6f07c928e1.png"},7935:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"0e9b3b8b4833752854c5f9eeb4841b83.png"},9896:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"fe678313c7b8a587ca3b3c13d0fa4edf.png"},8896:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"261eb9d239e351213bd0199172bcf22b.png"},2597:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"1f19b66025f926e2fada7c47a7d26651.png"},9678:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"d9baebe5f010d2d87080bf8d10a53eb0.png"},9650:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"744353174777fae554cef376fdfb2bf5.png"},4196:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"184aac79145f3e6385ccecc69df5f4b1.png"},8424:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"450fe3e913057a057d4946b47fe1b00e.png"},1462:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"da712882fde86bc8f8a01b24d11bbd88.png"},6362:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"850f3a5c07fe9a103be8f9b02f33bc18.png"},5277:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"91ace79dad1e70269266bb00e5a9a164.png"},1860:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"28880fbcffaac0db3a22ee3e8b80af06.png"},9824:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"5c07bb6b22a7a1203f2ce25f7f5254af.png"},8592:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"cfd7b1f7782c256e215e08810c7e8944.png"},5534:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"f15742cfdd4ba70e47ae94b749ef07e0.png"},6160:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"fc6cba8e8d50fdd54d631681178bfb3a.png"},4737:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"fa5837fba0684d62e6ddaf28d31e0214.png"},3972:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"07583b19ad2666f4282a36e6d3b841df.png"},7075:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"897f4c62e7236f69c4c1bac365619774.png"},741:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"d0714788df91f5644c07e4516476b513.png"},7973:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"0b8ca547d4c69b65ddd328923297d622.png"},159:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"e73e0e841d4c494995055288ad53bc6a.png"},7271:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"ab5338759553e8a55d02c6ac30199009.png"},4571:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"595b936157bcb433f0a87197e94cf260.png"},901:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"2c10cdb684420aaf079671837c7e4011.png"},6006:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"fonts/Cinzel-VariableFont_wght.ttf"},7881:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=t.p+"fonts/Montserrat-Regular.ttf"},8679:(e,r,t)=>{"use strict";var n=t(9864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function s(e){return n.isMemo(e)?i:l[e.$$typeof]||a}l[n.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[n.Memo]=i;var u=Object.defineProperty,c=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,h=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,g=Object.prototype;e.exports=function e(r,t,n){if("string"!=typeof t){if(g){var a=f(t);a&&a!==g&&e(r,a,n)}var i=c(t);d&&(i=i.concat(d(t)));for(var l=s(r),p=s(t),m=0;m<i.length;++m){var y=i[m];if(!(o[y]||n&&n[y]||p&&p[y]||l&&l[y])){var S=h(t,y);try{u(r,y,S)}catch(e){}}}}return r}},5299:(e,r,t)=>{"use strict";var n=t(7798);function a(e){return!0===n(e)&&"[object Object]"===Object.prototype.toString.call(e)}e.exports=function(e){var r,t;return!1!==a(e)&&"function"==typeof(r=e.constructor)&&!1!==a(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf")}},7798:e=>{"use strict";e.exports=function(e){return null!=e&&"object"==typeof e&&!1===Array.isArray(e)}},3300:(e,r)=>{"use strict";var t=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t)return t;throw new Error("unable to locate global object")}();e.exports=r=t.fetch,t.fetch&&(r.default=t.fetch.bind(t)),r.Headers=t.Headers,r.Request=t.Request,r.Response=t.Response},7418:e=>{"use strict";var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,s=a(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))t.call(i,c)&&(s[c]=i[c]);if(r){l=r(i);for(var d=0;d<l.length;d++)n.call(i,l[d])&&(s[l[d]]=i[l[d]])}}return s}},7650:(e,r,t)=>{"use strict";var n=t(6212);e.exports=function(e,r,t){if(!n(e))return{};"function"==typeof r&&(t=r,r=[]),"string"==typeof r&&(r=[r]);for(var a="function"==typeof t,o=Object.keys(e),i={},l=0;l<o.length;l++){var s=o[l],u=e[s];r&&(-1!==r.indexOf(s)||a&&!t(u,s,e))||(i[s]=u)}return i}},6212:(e,r,t)=>{"use strict";var n=t(5299);e.exports=function(e){return n(e)||"function"==typeof e||Array.isArray(e)}},2703:(e,r,t)=>{"use strict";var n=t(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,r,t,a,o,i){if(i!==n){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function r(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:r,element:e,elementType:e,instanceOf:r,node:e,objectOf:r,oneOf:r,oneOfType:r,shape:r,exact:r,checkPropTypes:o,resetWarningCache:a};return t.PropTypes=t,t}},5697:(e,r,t)=>{e.exports=t(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},2514:(e,r,t)=>{"use strict";t.d(r,{L:()=>je,W:()=>_e});var n=t(7294),a=t(4890),o="dnd-core/INIT_COORDS",i="dnd-core/BEGIN_DRAG",l="dnd-core/PUBLISH_DRAG_SOURCE",s="dnd-core/HOVER",u="dnd-core/DROP",c="dnd-core/END_DRAG",d=function(e,r){return e===r};function h(e,r){return!e&&!r||!(!e||!r)&&e.x===r.x&&e.y===r.y}function f(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:d;if(e.length!==r.length)return!1;for(var n=0;n<e.length;++n)if(!t(e[n],r[n]))return!1;return!0}function g(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?g(Object(t),!0).forEach((function(r){m(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):g(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function m(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var y={initialSourceClientOffset:null,initialClientOffset:null,clientOffset:null};function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,r=arguments.length>1?arguments[1]:void 0,t=r.payload;switch(r.type){case o:case i:return{initialSourceClientOffset:t.sourceClientOffset,initialClientOffset:t.clientOffset,clientOffset:t.clientOffset};case s:return h(e.clientOffset,t.clientOffset)?e:p(p({},e),{},{clientOffset:t.clientOffset});case c:case u:return y;default:return e}}var v="dnd-core/ADD_SOURCE",C="dnd-core/ADD_TARGET",A="dnd-core/REMOVE_SOURCE",b="dnd-core/REMOVE_TARGET";function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,r,t){return r.split(".").reduce((function(e,r){return e&&e[r]?e[r]:t||null}),e)}function B(e,r){return e.filter((function(e){return e!==r}))}function D(e){return"object"===k(e)}function T(e,r){var t=new Map,n=function(e){t.set(e,t.has(e)?t.get(e)+1:1)};e.forEach(n),r.forEach(n);var a=[];return t.forEach((function(e,r){1===e&&a.push(r)})),a}function M(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function E(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?M(Object(t),!0).forEach((function(r){P(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):M(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function P(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var x={itemType:null,item:null,sourceId:null,targetIds:[],dropResult:null,didDrop:!1,isSourcePublic:null};function R(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x,r=arguments.length>1?arguments[1]:void 0,t=r.payload;switch(r.type){case i:return E(E({},e),{},{itemType:t.itemType,item:t.item,sourceId:t.sourceId,isSourcePublic:t.isSourcePublic,dropResult:null,didDrop:!1});case l:return E(E({},e),{},{isSourcePublic:!0});case s:return E(E({},e),{},{targetIds:t.targetIds});case b:return-1===e.targetIds.indexOf(t.targetId)?e:E(E({},e),{},{targetIds:B(e.targetIds,t.targetId)});case u:return E(E({},e),{},{dropResult:t.dropResult,didDrop:!0,targetIds:[]});case c:return E(E({},e),{},{itemType:null,item:null,sourceId:null,dropResult:null,didDrop:!1,isSourcePublic:null,targetIds:[]});default:return e}}function G(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1?arguments[1]:void 0;switch(r.type){case v:case C:return e+1;case A:case b:return e-1;default:return e}}var F=[],W=[];function O(e,r){return e!==F&&(e===W||void 0===r||(t=e,r.filter((function(e){return t.indexOf(e)>-1}))).length>0);var t}function H(){var e=arguments.length>1?arguments[1]:void 0;switch(e.type){case s:break;case v:case C:case b:case A:return F;case i:case l:case c:case u:default:return W}var r=e.payload,t=r.targetIds,n=void 0===t?[]:t,a=r.prevTargetIds,o=void 0===a?[]:a,d=T(n,o),h=d.length>0||!f(n,o);if(!h)return F;var g=o[o.length-1],p=n[n.length-1];return g!==p&&(g&&d.push(g),p&&d.push(p)),d}function L(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return e+1}function I(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function N(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?I(Object(t),!0).forEach((function(r){V(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):I(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function V(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function z(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;return{dirtyHandlerIds:H(e.dirtyHandlerIds,{type:r.type,payload:N(N({},r.payload),{},{prevTargetIds:w(e,"dragOperation.targetIds",[])})}),dragOffset:S(e.dragOffset,r),refCount:G(e.refCount,r),dragOperation:R(e.dragOperation,r),stateId:L(e.stateId)}}F.__IS_NONE__=!0,W.__IS_ALL__=!0;var K=t(8195);function U(e,r){return{type:o,payload:{sourceClientOffset:r||null,clientOffset:e||null}}}var j={type:o,payload:{clientOffset:null,sourceClientOffset:null}};function _(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{publishSource:!0},n=t.publishSource,a=void 0===n||n,o=t.clientOffset,l=t.getSourceClientOffset,s=e.getMonitor(),u=e.getRegistry();e.dispatch(U(o)),q(r,s,u);var c=Y(r,s);if(null!==c){var d=null;if(o){if(!l)throw new Error("getSourceClientOffset must be defined");Z(l),d=l(c)}e.dispatch(U(o,d));var h=u.getSource(c),f=h.beginDrag(s,c);J(f),u.pinSource(c);var g=u.getSourceType(c);return{type:i,payload:{itemType:g,item:f,sourceId:c,clientOffset:o||null,sourceClientOffset:d||null,isSourcePublic:!!a}}}e.dispatch(j)}}function q(e,r,t){(0,K.k)(!r.isDragging(),"Cannot call beginDrag while dragging."),e.forEach((function(e){(0,K.k)(t.getSource(e),"Expected sourceIds to be registered.")}))}function Z(e){(0,K.k)("function"==typeof e,"When clientOffset is provided, getSourceClientOffset must be a function.")}function J(e){(0,K.k)(D(e),"Item must be an object.")}function Y(e,r){for(var t=null,n=e.length-1;n>=0;n--)if(r.canDragSource(e[n])){t=e[n];break}return t}function Q(e){return function(){if(e.getMonitor().isDragging())return{type:l}}}function $(e,r){return null===r?null===e:Array.isArray(e)?e.some((function(e){return e===r})):e===r}function X(e){return function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.clientOffset;ee(r);var a=r.slice(0),o=e.getMonitor(),i=e.getRegistry();re(a,o,i);var l=o.getItemType();return te(a,i,l),ne(a,o,i),{type:s,payload:{targetIds:a,clientOffset:n||null}}}}function ee(e){(0,K.k)(Array.isArray(e),"Expected targetIds to be an array.")}function re(e,r,t){(0,K.k)(r.isDragging(),"Cannot call hover while not dragging."),(0,K.k)(!r.didDrop(),"Cannot call hover after drop.");for(var n=0;n<e.length;n++){var a=e[n];(0,K.k)(e.lastIndexOf(a)===n,"Expected targetIds to be unique in the passed array.");var o=t.getTarget(a);(0,K.k)(o,"Expected targetIds to be registered.")}}function te(e,r,t){for(var n=e.length-1;n>=0;n--){var a=e[n];$(r.getTargetType(a),t)||e.splice(n,1)}}function ne(e,r,t){e.forEach((function(e){t.getTarget(e).hover(r,e)}))}function ae(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function oe(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ae(Object(t),!0).forEach((function(r){ie(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ae(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function ie(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function le(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.getMonitor(),n=e.getRegistry();se(t);var a=ce(t);a.forEach((function(a,o){var i=ue(a,o,n,t),l={type:u,payload:{dropResult:oe(oe({},r),i)}};e.dispatch(l)}))}}function se(e){(0,K.k)(e.isDragging(),"Cannot call drop while not dragging."),(0,K.k)(!e.didDrop(),"Cannot call drop twice during one drag operation.")}function ue(e,r,t,n){var a=t.getTarget(e),o=a?a.drop(n,e):void 0;return function(e){(0,K.k)(void 0===e||D(e),"Drop result must either be an object or undefined.")}(o),void 0===o&&(o=0===r?{}:n.getDropResult()),o}function ce(e){var r=e.getTargetIds().filter(e.canDropOnTarget,e);return r.reverse(),r}function de(e){return function(){var r=e.getMonitor(),t=e.getRegistry();!function(e){(0,K.k)(e.isDragging(),"Cannot call endDrag while not dragging.")}(r);var n=r.getSourceId();return null!=n&&(t.getSource(n,!0).endDrag(r,n),t.unpinSource()),{type:c}}}function he(e,r){return{x:e.x-r.x,y:e.y-r.y}}function fe(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var ge,pe=function(){function e(r,t){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.store=r,this.registry=t}var r,t;return r=e,(t=[{key:"subscribeToStateChange",value:function(e){var r=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{handlerIds:void 0},n=t.handlerIds;(0,K.k)("function"==typeof e,"listener must be a function."),(0,K.k)(void 0===n||Array.isArray(n),"handlerIds, when specified, must be an array of strings.");var a=this.store.getState().stateId,o=function(){var t=r.store.getState(),o=t.stateId;try{o===a||o===a+1&&!O(t.dirtyHandlerIds,n)||e()}finally{a=o}};return this.store.subscribe(o)}},{key:"subscribeToOffsetChange",value:function(e){var r=this;(0,K.k)("function"==typeof e,"listener must be a function.");var t=this.store.getState().dragOffset;return this.store.subscribe((function(){var n=r.store.getState().dragOffset;n!==t&&(t=n,e())}))}},{key:"canDragSource",value:function(e){if(!e)return!1;var r=this.registry.getSource(e);return(0,K.k)(r,"Expected to find a valid source."),!this.isDragging()&&r.canDrag(this,e)}},{key:"canDropOnTarget",value:function(e){if(!e)return!1;var r=this.registry.getTarget(e);return(0,K.k)(r,"Expected to find a valid target."),!(!this.isDragging()||this.didDrop())&&$(this.registry.getTargetType(e),this.getItemType())&&r.canDrop(this,e)}},{key:"isDragging",value:function(){return Boolean(this.getItemType())}},{key:"isDraggingSource",value:function(e){if(!e)return!1;var r=this.registry.getSource(e,!0);return(0,K.k)(r,"Expected to find a valid source."),!(!this.isDragging()||!this.isSourcePublic())&&this.registry.getSourceType(e)===this.getItemType()&&r.isDragging(this,e)}},{key:"isOverTarget",value:function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{shallow:!1};if(!e)return!1;var t=r.shallow;if(!this.isDragging())return!1;var n=this.registry.getTargetType(e),a=this.getItemType();if(a&&!$(n,a))return!1;var o=this.getTargetIds();if(!o.length)return!1;var i=o.indexOf(e);return t?i===o.length-1:i>-1}},{key:"getItemType",value:function(){return this.store.getState().dragOperation.itemType}},{key:"getItem",value:function(){return this.store.getState().dragOperation.item}},{key:"getSourceId",value:function(){return this.store.getState().dragOperation.sourceId}},{key:"getTargetIds",value:function(){return this.store.getState().dragOperation.targetIds}},{key:"getDropResult",value:function(){return this.store.getState().dragOperation.dropResult}},{key:"didDrop",value:function(){return this.store.getState().dragOperation.didDrop}},{key:"isSourcePublic",value:function(){return Boolean(this.store.getState().dragOperation.isSourcePublic)}},{key:"getInitialClientOffset",value:function(){return this.store.getState().dragOffset.initialClientOffset}},{key:"getInitialSourceClientOffset",value:function(){return this.store.getState().dragOffset.initialSourceClientOffset}},{key:"getClientOffset",value:function(){return this.store.getState().dragOffset.clientOffset}},{key:"getSourceClientOffset",value:function(){return n=(e=this.store.getState().dragOffset).clientOffset,a=e.initialClientOffset,o=e.initialSourceClientOffset,n&&a&&o?he((t=o,{x:(r=n).x+t.x,y:r.y+t.y}),a):null;var e,r,t,n,a,o}},{key:"getDifferenceFromInitialOffset",value:function(){return r=(e=this.store.getState().dragOffset).clientOffset,t=e.initialClientOffset,r&&t?he(r,t):null;var e,r,t}}])&&fe(r.prototype,t),e}(),me=0;function ye(e){return(ye="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Se(e,r){r&&Array.isArray(e)?e.forEach((function(e){return Se(e,!1)})):(0,K.k)("string"==typeof e||"symbol"===ye(e),r?"Type can only be a string, a symbol, or an array of either.":"Type can only be a string or a symbol.")}function ve(e){Ae.length||Ce(),Ae[Ae.length]=e}!function(e){e.SOURCE="SOURCE",e.TARGET="TARGET"}(ge||(ge={}));var Ce,Ae=[],be=0;function ke(){for(;be<Ae.length;){var e=be;if(be+=1,Ae[e].call(),be>1024){for(var r=0,t=Ae.length-be;r<t;r++)Ae[r]=Ae[r+be];Ae.length-=be,be=0}}Ae.length=0,be=0}var we,Be,De,Te=void 0!==t.g?t.g:self,Me=Te.MutationObserver||Te.WebKitMutationObserver;function Ee(e){return function(){var r=setTimeout(n,0),t=setInterval(n,50);function n(){clearTimeout(r),clearInterval(t),e()}}}"function"==typeof Me?(we=1,Be=new Me(ke),De=document.createTextNode(""),Be.observe(De,{characterData:!0}),Ce=function(){we=-we,De.data=we}):Ce=Ee(ke),ve.requestFlush=Ce,ve.makeRequestCallFromTimer=Ee;var Pe=[],xe=[],Re=ve.makeRequestCallFromTimer((function(){if(xe.length)throw xe.shift()}));function Ge(e){var r;(r=Pe.length?Pe.pop():new Fe).task=e,ve(r)}var Fe=function(){function e(){}return e.prototype.call=function(){try{this.task.call()}catch(e){Ge.onerror?Ge.onerror(e):(xe.push(e),Re())}finally{this.task=null,Pe[Pe.length]=this}},e}();function We(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Oe(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function He(e){switch(e[0]){case"S":return ge.SOURCE;case"T":return ge.TARGET;default:(0,K.k)(!1,"Cannot parse handler ID: ".concat(e))}}function Le(e,r){var t,n,a=e.entries(),o=!1;do{var i=a.next(),l=i.done;if((t=i.value,n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(t,n)||function(e,r){if(e){if("string"==typeof e)return Oe(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Oe(e,r):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[1]===r)return!0;o=!!l}while(!o);return!1}var Ie=function(){function e(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.types=new Map,this.dragSources=new Map,this.dropTargets=new Map,this.pinnedSourceId=null,this.pinnedSource=null,this.store=r}var r,t;return r=e,(t=[{key:"addSource",value:function(e,r){Se(e),function(e){(0,K.k)("function"==typeof e.canDrag,"Expected canDrag to be a function."),(0,K.k)("function"==typeof e.beginDrag,"Expected beginDrag to be a function."),(0,K.k)("function"==typeof e.endDrag,"Expected endDrag to be a function.")}(r);var t=this.addHandler(ge.SOURCE,e,r);return this.store.dispatch(function(e){return{type:v,payload:{sourceId:e}}}(t)),t}},{key:"addTarget",value:function(e,r){Se(e,!0),function(e){(0,K.k)("function"==typeof e.canDrop,"Expected canDrop to be a function."),(0,K.k)("function"==typeof e.hover,"Expected hover to be a function."),(0,K.k)("function"==typeof e.drop,"Expected beginDrag to be a function.")}(r);var t=this.addHandler(ge.TARGET,e,r);return this.store.dispatch(function(e){return{type:C,payload:{targetId:e}}}(t)),t}},{key:"containsHandler",value:function(e){return Le(this.dragSources,e)||Le(this.dropTargets,e)}},{key:"getSource",value:function(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,K.k)(this.isSourceId(e),"Expected a valid source ID.");var t=r&&e===this.pinnedSourceId,n=t?this.pinnedSource:this.dragSources.get(e);return n}},{key:"getTarget",value:function(e){return(0,K.k)(this.isTargetId(e),"Expected a valid target ID."),this.dropTargets.get(e)}},{key:"getSourceType",value:function(e){return(0,K.k)(this.isSourceId(e),"Expected a valid source ID."),this.types.get(e)}},{key:"getTargetType",value:function(e){return(0,K.k)(this.isTargetId(e),"Expected a valid target ID."),this.types.get(e)}},{key:"isSourceId",value:function(e){return He(e)===ge.SOURCE}},{key:"isTargetId",value:function(e){return He(e)===ge.TARGET}},{key:"removeSource",value:function(e){var r=this;(0,K.k)(this.getSource(e),"Expected an existing source."),this.store.dispatch(function(e){return{type:A,payload:{sourceId:e}}}(e)),Ge((function(){r.dragSources.delete(e),r.types.delete(e)}))}},{key:"removeTarget",value:function(e){(0,K.k)(this.getTarget(e),"Expected an existing target."),this.store.dispatch(function(e){return{type:b,payload:{targetId:e}}}(e)),this.dropTargets.delete(e),this.types.delete(e)}},{key:"pinSource",value:function(e){var r=this.getSource(e);(0,K.k)(r,"Expected an existing source."),this.pinnedSourceId=e,this.pinnedSource=r}},{key:"unpinSource",value:function(){(0,K.k)(this.pinnedSource,"No source is pinned at the time."),this.pinnedSourceId=null,this.pinnedSource=null}},{key:"addHandler",value:function(e,r,t){var n=function(e){var r=(me++).toString();switch(e){case ge.SOURCE:return"S".concat(r);case ge.TARGET:return"T".concat(r);default:throw new Error("Unknown Handler Role: ".concat(e))}}(e);return this.types.set(n,r),e===ge.SOURCE?this.dragSources.set(n,t):e===ge.TARGET&&this.dropTargets.set(n,t),n}}])&&We(r.prototype,t),e}();function Ne(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function Ve(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function ze(e){var r="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__;return(0,a.MT)(z,e&&r&&r({name:"dnd-core",instanceId:"dnd-core"}))}var Ke=function(){function e(){var r=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];Ne(this,e),this.isSetUp=!1,this.handleRefCountChange=function(){var e=r.store.getState().refCount>0;r.backend&&(e&&!r.isSetUp?(r.backend.setup(),r.isSetUp=!0):!e&&r.isSetUp&&(r.backend.teardown(),r.isSetUp=!1))};var n=ze(t);this.store=n,this.monitor=new pe(n,new Ie(n)),n.subscribe(this.handleRefCountChange)}var r,t;return r=e,(t=[{key:"receiveBackend",value:function(e){this.backend=e}},{key:"getMonitor",value:function(){return this.monitor}},{key:"getBackend",value:function(){return this.backend}},{key:"getRegistry",value:function(){return this.monitor.registry}},{key:"getActions",value:function(){var e=this,r=this.store.dispatch,t=function(e){return{beginDrag:_(e),publishDragSource:Q(e),hover:X(e),drop:le(e),endDrag:de(e)}}(this);return Object.keys(t).reduce((function(n,a){var o,i=t[a];return n[a]=(o=i,function(){for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];var i=o.apply(e,n);void 0!==i&&r(i)}),n}),{})}},{key:"dispatch",value:function(e){this.store.dispatch(e)}}])&&Ve(r.prototype,t),e}();function Ue(e,r,t,n){var a=new Ke(n),o=e(a,r,t);return a.receiveBackend(o),a}var je=n.createContext({dragDropManager:void 0});function _e(e,r,t,n){return{dragDropManager:Ue(e,r,t,n)}}},7780:(e,r,t)=>{"use strict";t.d(r,{c0:()=>T,LW:()=>W});var n=t(7294),a=t(8195),o="undefined"!=typeof window?n.useLayoutEffect:n.useEffect;function i(e,r,t,n){var a=t?t.call(n,e,r):void 0;if(void 0!==a)return!!a;if(e===r)return!0;if("object"!=typeof e||!e||"object"!=typeof r||!r)return!1;var o=Object.keys(e),i=Object.keys(r);if(o.length!==i.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(r),s=0;s<o.length;s++){var u=o[s];if(!l(u))return!1;var c=e[u],d=r[u];if(!1===(a=t?t.call(n,c,d,u):void 0)||void 0===a&&c!==d)return!1}return!0}function l(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function s(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function u(e,r,t){var a,u,c=(a=function(e,r,t){var a,s,u=(a=(0,n.useState)((function(){return r(e)})),s=2,function(e){if(Array.isArray(e))return e}(a)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(a,s)||function(e,r){if(e){if("string"==typeof e)return l(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?l(e,r):void 0}}(a,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=u[0],d=u[1],h=(0,n.useCallback)((function(){var n=r(e);i(c,n)||(d(n),t&&t())}),[c,e,t]);return o(h,[]),[c,h]}(e,r,t),u=2,function(e){if(Array.isArray(e))return e}(a)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(a,u)||function(e,r){if(e){if("string"==typeof e)return s(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?s(e,r):void 0}}(a,u)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),d=c[0],h=c[1];return o((function(){var r=e.getHandlerId();if(null!=r)return e.subscribeToStateChange(h,{handlerIds:[r]})}),[e,h]),d}var c=t(2514);function d(){var e=(0,n.useContext)(c.L).dragDropManager;return(0,a.k)(null!=e,"Expected drag drop context"),e}function h(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var f=!1,g=!1,p=function(){function e(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.sourceId=null,this.internalMonitor=r.getMonitor()}var r,t;return r=e,(t=[{key:"receiveHandlerId",value:function(e){this.sourceId=e}},{key:"getHandlerId",value:function(){return this.sourceId}},{key:"canDrag",value:function(){(0,a.k)(!f,"You may not call monitor.canDrag() inside your canDrag() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");try{return f=!0,this.internalMonitor.canDragSource(this.sourceId)}finally{f=!1}}},{key:"isDragging",value:function(){if(!this.sourceId)return!1;(0,a.k)(!g,"You may not call monitor.isDragging() inside your isDragging() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");try{return g=!0,this.internalMonitor.isDraggingSource(this.sourceId)}finally{g=!1}}},{key:"subscribeToStateChange",value:function(e,r){return this.internalMonitor.subscribeToStateChange(e,r)}},{key:"isDraggingSource",value:function(e){return this.internalMonitor.isDraggingSource(e)}},{key:"isOverTarget",value:function(e,r){return this.internalMonitor.isOverTarget(e,r)}},{key:"getTargetIds",value:function(){return this.internalMonitor.getTargetIds()}},{key:"isSourcePublic",value:function(){return this.internalMonitor.isSourcePublic()}},{key:"getSourceId",value:function(){return this.internalMonitor.getSourceId()}},{key:"subscribeToOffsetChange",value:function(e){return this.internalMonitor.subscribeToOffsetChange(e)}},{key:"canDragSource",value:function(e){return this.internalMonitor.canDragSource(e)}},{key:"canDropOnTarget",value:function(e){return this.internalMonitor.canDropOnTarget(e)}},{key:"getItemType",value:function(){return this.internalMonitor.getItemType()}},{key:"getItem",value:function(){return this.internalMonitor.getItem()}},{key:"getDropResult",value:function(){return this.internalMonitor.getDropResult()}},{key:"didDrop",value:function(){return this.internalMonitor.didDrop()}},{key:"getInitialClientOffset",value:function(){return this.internalMonitor.getInitialClientOffset()}},{key:"getInitialSourceClientOffset",value:function(){return this.internalMonitor.getInitialSourceClientOffset()}},{key:"getSourceClientOffset",value:function(){return this.internalMonitor.getSourceClientOffset()}},{key:"getClientOffset",value:function(){return this.internalMonitor.getClientOffset()}},{key:"getDifferenceFromInitialOffset",value:function(){return this.internalMonitor.getDifferenceFromInitialOffset()}}])&&h(r.prototype,t),e}();function m(e,r){"function"==typeof e?e(r):e.current=r}function y(e,r){var t=e.ref;return(0,a.k)("string"!=typeof t,"Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute"),t?(0,n.cloneElement)(e,{ref:function(e){m(t,e),m(r,e)}}):(0,n.cloneElement)(e,{ref:r})}function S(e){if("string"!=typeof e.type){var r=e.type.displayName||e.type.name||"the component";throw new Error("Only native element nodes can now be passed to React DnD connectors."+"You can either wrap ".concat(r," into a <div>, or turn it into a ")+"drag source or a drop target itself.")}}function v(e){var r={};return Object.keys(e).forEach((function(t){var a=e[t];if(t.endsWith("Ref"))r[t]=e[t];else{var o=function(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!(0,n.isValidElement)(r)){var a=r;return e(a,t),a}var o=r;return S(o),y(o,t?function(r){return e(r,t)}:e)}}(a);r[t]=function(){return o}}})),r}function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function A(e){return null!==e&&"object"===C(e)&&Object.prototype.hasOwnProperty.call(e,"current")}function b(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var k=function(){function e(r){var t=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.hooks=v({dragSource:function(e,r){t.clearDragSource(),t.dragSourceOptions=r||null,A(e)?t.dragSourceRef=e:t.dragSourceNode=e,t.reconnectDragSource()},dragPreview:function(e,r){t.clearDragPreview(),t.dragPreviewOptions=r||null,A(e)?t.dragPreviewRef=e:t.dragPreviewNode=e,t.reconnectDragPreview()}}),this.handlerId=null,this.dragSourceRef=null,this.dragSourceOptionsInternal=null,this.dragPreviewRef=null,this.dragPreviewOptionsInternal=null,this.lastConnectedHandlerId=null,this.lastConnectedDragSource=null,this.lastConnectedDragSourceOptions=null,this.lastConnectedDragPreview=null,this.lastConnectedDragPreviewOptions=null,this.backend=r}var r,t;return r=e,(t=[{key:"receiveHandlerId",value:function(e){this.handlerId!==e&&(this.handlerId=e,this.reconnect())}},{key:"reconnect",value:function(){this.reconnectDragSource(),this.reconnectDragPreview()}},{key:"reconnectDragSource",value:function(){var e=this.dragSource,r=this.didHandlerIdChange()||this.didConnectedDragSourceChange()||this.didDragSourceOptionsChange();r&&this.disconnectDragSource(),this.handlerId&&(e?r&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragSource=e,this.lastConnectedDragSourceOptions=this.dragSourceOptions,this.dragSourceUnsubscribe=this.backend.connectDragSource(this.handlerId,e,this.dragSourceOptions)):this.lastConnectedDragSource=e)}},{key:"reconnectDragPreview",value:function(){var e=this.dragPreview,r=this.didHandlerIdChange()||this.didConnectedDragPreviewChange()||this.didDragPreviewOptionsChange();r&&this.disconnectDragPreview(),this.handlerId&&(e?r&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragPreview=e,this.lastConnectedDragPreviewOptions=this.dragPreviewOptions,this.dragPreviewUnsubscribe=this.backend.connectDragPreview(this.handlerId,e,this.dragPreviewOptions)):this.lastConnectedDragPreview=e)}},{key:"didHandlerIdChange",value:function(){return this.lastConnectedHandlerId!==this.handlerId}},{key:"didConnectedDragSourceChange",value:function(){return this.lastConnectedDragSource!==this.dragSource}},{key:"didConnectedDragPreviewChange",value:function(){return this.lastConnectedDragPreview!==this.dragPreview}},{key:"didDragSourceOptionsChange",value:function(){return!i(this.lastConnectedDragSourceOptions,this.dragSourceOptions)}},{key:"didDragPreviewOptionsChange",value:function(){return!i(this.lastConnectedDragPreviewOptions,this.dragPreviewOptions)}},{key:"disconnectDragSource",value:function(){this.dragSourceUnsubscribe&&(this.dragSourceUnsubscribe(),this.dragSourceUnsubscribe=void 0)}},{key:"disconnectDragPreview",value:function(){this.dragPreviewUnsubscribe&&(this.dragPreviewUnsubscribe(),this.dragPreviewUnsubscribe=void 0,this.dragPreviewNode=null,this.dragPreviewRef=null)}},{key:"clearDragSource",value:function(){this.dragSourceNode=null,this.dragSourceRef=null}},{key:"clearDragPreview",value:function(){this.dragPreviewNode=null,this.dragPreviewRef=null}},{key:"connectTarget",get:function(){return this.dragSource}},{key:"dragSourceOptions",get:function(){return this.dragSourceOptionsInternal},set:function(e){this.dragSourceOptionsInternal=e}},{key:"dragPreviewOptions",get:function(){return this.dragPreviewOptionsInternal},set:function(e){this.dragPreviewOptionsInternal=e}},{key:"dragSource",get:function(){return this.dragSourceNode||this.dragSourceRef&&this.dragSourceRef.current}},{key:"dragPreview",get:function(){return this.dragPreviewNode||this.dragPreviewRef&&this.dragPreviewRef.current}}])&&b(r.prototype,t),e}();function w(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function B(e){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function D(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function T(e){var r=(0,n.useRef)(e);r.current=e,(0,a.k)(null!=e.item,"item must be defined"),(0,a.k)(null!=e.item.type,"item type must be defined");var t,i,l,s=(t=d(),i=[(0,n.useMemo)((function(){return new p(t)}),[t]),(0,n.useMemo)((function(){return new k(t.getBackend())}),[t])],l=2,function(e){if(Array.isArray(e))return e}(i)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(i,l)||function(e,r){if(e){if("string"==typeof e)return D(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?D(e,r):void 0}}(i,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=s[0],h=s[1];!function(e,r,t){var i=d(),l=(0,n.useMemo)((function(){return{beginDrag:function(){var t=e.current,n=t.begin,o=t.item;if(n){var i=n(r);return(0,a.k)(null==i||"object"===B(i),"dragSpec.begin() must either return an object, undefined, or null"),i||o||{}}return o||{}},canDrag:function(){return"boolean"==typeof e.current.canDrag?e.current.canDrag:"function"!=typeof e.current.canDrag||e.current.canDrag(r)},isDragging:function(t,n){var a=e.current.isDragging;return a?a(r):n===t.getSourceId()},endDrag:function(){var n=e.current.end;n&&n(r.getItem(),r),t.reconnect()}}}),[]);o((function(){var n=function(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(e,r)||function(e,r){if(e){if("string"==typeof e)return w(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?w(e,r):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(function(e,r,t){var n=t.getRegistry(),a=n.addSource(e,r);return[a,function(){return n.removeSource(a)}]}(e.current.item.type,l,i),2),a=n[0],o=n[1];return r.receiveHandlerId(a),t.receiveHandlerId(a),o}),[])}(r,c,h);var f=u(c,r.current.collect||function(){return{}},(function(){return h.reconnect()})),g=(0,n.useMemo)((function(){return h.hooks.dragSource()}),[h]),m=(0,n.useMemo)((function(){return h.hooks.dragPreview()}),[h]);return o((function(){h.dragSourceOptions=r.current.options||null,h.reconnect()}),[h]),o((function(){h.dragPreviewOptions=r.current.previewOptions||null,h.reconnect()}),[h]),[f,g,m]}function M(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var E=function(){function e(r){var t=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.hooks=v({dropTarget:function(e,r){t.clearDropTarget(),t.dropTargetOptions=r,A(e)?t.dropTargetRef=e:t.dropTargetNode=e,t.reconnect()}}),this.handlerId=null,this.dropTargetRef=null,this.dropTargetOptionsInternal=null,this.lastConnectedHandlerId=null,this.lastConnectedDropTarget=null,this.lastConnectedDropTargetOptions=null,this.backend=r}var r,t;return r=e,(t=[{key:"reconnect",value:function(){var e=this.didHandlerIdChange()||this.didDropTargetChange()||this.didOptionsChange();e&&this.disconnectDropTarget();var r=this.dropTarget;this.handlerId&&(r?e&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDropTarget=r,this.lastConnectedDropTargetOptions=this.dropTargetOptions,this.unsubscribeDropTarget=this.backend.connectDropTarget(this.handlerId,r,this.dropTargetOptions)):this.lastConnectedDropTarget=r)}},{key:"receiveHandlerId",value:function(e){e!==this.handlerId&&(this.handlerId=e,this.reconnect())}},{key:"didHandlerIdChange",value:function(){return this.lastConnectedHandlerId!==this.handlerId}},{key:"didDropTargetChange",value:function(){return this.lastConnectedDropTarget!==this.dropTarget}},{key:"didOptionsChange",value:function(){return!i(this.lastConnectedDropTargetOptions,this.dropTargetOptions)}},{key:"disconnectDropTarget",value:function(){this.unsubscribeDropTarget&&(this.unsubscribeDropTarget(),this.unsubscribeDropTarget=void 0)}},{key:"clearDropTarget",value:function(){this.dropTargetRef=null,this.dropTargetNode=null}},{key:"connectTarget",get:function(){return this.dropTarget}},{key:"dropTargetOptions",get:function(){return this.dropTargetOptionsInternal},set:function(e){this.dropTargetOptionsInternal=e}},{key:"dropTarget",get:function(){return this.dropTargetNode||this.dropTargetRef&&this.dropTargetRef.current}}])&&M(r.prototype,t),e}();function P(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var x=!1,R=function(){function e(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.targetId=null,this.internalMonitor=r.getMonitor()}var r,t;return r=e,(t=[{key:"receiveHandlerId",value:function(e){this.targetId=e}},{key:"getHandlerId",value:function(){return this.targetId}},{key:"subscribeToStateChange",value:function(e,r){return this.internalMonitor.subscribeToStateChange(e,r)}},{key:"canDrop",value:function(){if(!this.targetId)return!1;(0,a.k)(!x,"You may not call monitor.canDrop() inside your canDrop() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor");try{return x=!0,this.internalMonitor.canDropOnTarget(this.targetId)}finally{x=!1}}},{key:"isOver",value:function(e){return!!this.targetId&&this.internalMonitor.isOverTarget(this.targetId,e)}},{key:"getItemType",value:function(){return this.internalMonitor.getItemType()}},{key:"getItem",value:function(){return this.internalMonitor.getItem()}},{key:"getDropResult",value:function(){return this.internalMonitor.getDropResult()}},{key:"didDrop",value:function(){return this.internalMonitor.didDrop()}},{key:"getInitialClientOffset",value:function(){return this.internalMonitor.getInitialClientOffset()}},{key:"getInitialSourceClientOffset",value:function(){return this.internalMonitor.getInitialSourceClientOffset()}},{key:"getSourceClientOffset",value:function(){return this.internalMonitor.getSourceClientOffset()}},{key:"getClientOffset",value:function(){return this.internalMonitor.getClientOffset()}},{key:"getDifferenceFromInitialOffset",value:function(){return this.internalMonitor.getDifferenceFromInitialOffset()}}])&&P(r.prototype,t),e}();function G(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function F(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function W(e){var r=(0,n.useRef)(e);r.current=e,(0,a.k)(null!=e.accept,"accept must be defined");var t,i,l,s=(t=d(),i=[(0,n.useMemo)((function(){return new R(t)}),[t]),(0,n.useMemo)((function(){return new E(t.getBackend())}),[t])],l=2,function(e){if(Array.isArray(e))return e}(i)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(i,l)||function(e,r){if(e){if("string"==typeof e)return F(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?F(e,r):void 0}}(i,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=s[0],h=s[1];!function(e,r,t){var a=d(),i=(0,n.useMemo)((function(){return{canDrop:function(){var t=e.current.canDrop;return!t||t(r.getItem(),r)},hover:function(){var t=e.current.hover;t&&t(r.getItem(),r)},drop:function(){var t=e.current.drop;if(t)return t(r.getItem(),r)}}}),[r]);o((function(){var n=function(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(e,r)||function(e,r){if(e){if("string"==typeof e)return G(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?G(e,r):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(function(e,r,t){var n=t.getRegistry(),a=n.addTarget(e,r);return[a,function(){return n.removeTarget(a)}]}(e.current.accept,i,a),2),o=n[0],l=n[1];return r.receiveHandlerId(o),t.receiveHandlerId(o),l}),[r,t])}(r,c,h);var f=u(c,r.current.collect||function(){return{}},(function(){return h.reconnect()})),g=(0,n.useMemo)((function(){return h.hooks.dropTarget()}),[h]);return o((function(){h.dropTargetOptions=e.options||null,h.reconnect()}),[e.options]),[f,g]}},4785:(e,r,t)=>{"use strict";t.d(r,{useDrag:()=>a.c0,useDrop:()=>a.LW});var n=t(1388);t.o(n,"useDrag")&&t.d(r,{useDrag:function(){return n.useDrag}}),t.o(n,"useDrop")&&t.d(r,{useDrop:function(){return n.useDrop}});var a=t(7780)},3897:()=>{},8058:()=>{},1388:(e,r,t)=>{"use strict";var n=t(5253);t.o(n,"useDrag")&&t.d(r,{useDrag:function(){return n.useDrag}}),t.o(n,"useDrop")&&t.d(r,{useDrop:function(){return n.useDrop}});var a=t(8058);t.o(a,"useDrag")&&t.d(r,{useDrag:function(){return a.useDrag}}),t.o(a,"useDrop")&&t.d(r,{useDrop:function(){return a.useDrop}});var o=t(2105);t.o(o,"useDrag")&&t.d(r,{useDrag:function(){return o.useDrag}}),t.o(o,"useDrop")&&t.d(r,{useDrop:function(){return o.useDrop}});var i=t(3897);t.o(i,"useDrag")&&t.d(r,{useDrag:function(){return i.useDrag}}),t.o(i,"useDrop")&&t.d(r,{useDrop:function(){return i.useDrop}})},5253:()=>{},2105:()=>{},4448:(e,r,t)=>{"use strict";var n=t(7294),a=t(7418),o=t(3840);function i(e){for(var r="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)r+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(i(227));var l=new Set,s={};function u(e,r){c(e,r),c(e+"Capture",r)}function c(e,r){for(s[e]=r,e=0;e<r.length;e++)l.add(r[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f=Object.prototype.hasOwnProperty,g={},p={};function m(e,r,t,n,a,o,i){this.acceptsBooleans=2===r||3===r||4===r,this.attributeName=n,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=r,this.sanitizeURL=o,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var r=e[0];y[r]=new m(r,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var S=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function C(e,r,t,n){var a=y.hasOwnProperty(r)?y[r]:null;(null!==a?0===a.type:!n&&2<r.length&&("o"===r[0]||"O"===r[0])&&("n"===r[1]||"N"===r[1]))||(function(e,r,t,n){if(null==r||function(e,r,t,n){if(null!==t&&0===t.type)return!1;switch(typeof r){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,r,t,n))return!0;if(n)return!1;if(null!==t)switch(t.type){case 3:return!r;case 4:return!1===r;case 5:return isNaN(r);case 6:return isNaN(r)||1>r}return!1}(r,t,a,n)&&(t=null),n||null===a?function(e){return!!f.call(p,e)||!f.call(g,e)&&(h.test(e)?p[e]=!0:(g[e]=!0,!1))}(r)&&(null===t?e.removeAttribute(r):e.setAttribute(r,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(r=a.attributeName,n=a.attributeNamespace,null===t?e.removeAttribute(r):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,n?e.setAttributeNS(n,r,t):e.setAttribute(r,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var r=e.replace(S,v);y[r]=new m(r,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var r=e.replace(S,v);y[r]=new m(r,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var r=e.replace(S,v);y[r]=new m(r,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var A=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,b=60103,k=60106,w=60107,B=60108,D=60114,T=60109,M=60110,E=60112,P=60113,x=60120,R=60115,G=60116,F=60121,W=60128,O=60129,H=60130,L=60131;if("function"==typeof Symbol&&Symbol.for){var I=Symbol.for;b=I("react.element"),k=I("react.portal"),w=I("react.fragment"),B=I("react.strict_mode"),D=I("react.profiler"),T=I("react.provider"),M=I("react.context"),E=I("react.forward_ref"),P=I("react.suspense"),x=I("react.suspense_list"),R=I("react.memo"),G=I("react.lazy"),F=I("react.block"),I("react.scope"),W=I("react.opaque.id"),O=I("react.debug_trace_mode"),H=I("react.offscreen"),L=I("react.legacy_hidden")}var N,V="function"==typeof Symbol&&Symbol.iterator;function z(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=V&&e[V]||e["@@iterator"])?e:null}function K(e){if(void 0===N)try{throw Error()}catch(e){var r=e.stack.trim().match(/\n( *(at )?)/);N=r&&r[1]||""}return"\n"+N+e}var U=!1;function j(e,r){if(!e||U)return"";U=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(r)if(r=function(){throw Error()},Object.defineProperty(r.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(r,[])}catch(e){var n=e}Reflect.construct(e,[],r)}else{try{r.call()}catch(e){n=e}e.call(r.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=n.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{U=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?K(e):""}function _(e){switch(e.tag){case 5:return K(e.type);case 16:return K("Lazy");case 13:return K("Suspense");case 19:return K("SuspenseList");case 0:case 2:case 15:return j(e.type,!1);case 11:return j(e.type.render,!1);case 22:return j(e.type._render,!1);case 1:return j(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case w:return"Fragment";case k:return"Portal";case D:return"Profiler";case B:return"StrictMode";case P:return"Suspense";case x:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case M:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var r=e.render;return r=r.displayName||r.name||"",e.displayName||(""!==r?"ForwardRef("+r+")":"ForwardRef");case R:return q(e.type);case F:return q(e._render);case G:r=e._payload,e=e._init;try{return q(e(r))}catch(e){}}return null}function Z(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function J(e){var r=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===r||"radio"===r)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var r=J(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,r),n=""+e[r];if(!e.hasOwnProperty(r)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,o=t.set;return Object.defineProperty(e,r,{configurable:!0,get:function(){return a.call(this)},set:function(e){n=""+e,o.call(this,e)}}),Object.defineProperty(e,r,{enumerable:t.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[r]}}}}(e))}function Q(e){if(!e)return!1;var r=e._valueTracker;if(!r)return!0;var t=r.getValue(),n="";return e&&(n=J(e)?e.checked?"true":"false":e.value),(e=n)!==t&&(r.setValue(e),!0)}function $(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(r){return e.body}}function X(e,r){var t=r.checked;return a({},r,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function ee(e,r){var t=null==r.defaultValue?"":r.defaultValue,n=null!=r.checked?r.checked:r.defaultChecked;t=Z(null!=r.value?r.value:t),e._wrapperState={initialChecked:n,initialValue:t,controlled:"checkbox"===r.type||"radio"===r.type?null!=r.checked:null!=r.value}}function re(e,r){null!=(r=r.checked)&&C(e,"checked",r,!1)}function te(e,r){re(e,r);var t=Z(r.value),n=r.type;if(null!=t)"number"===n?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");r.hasOwnProperty("value")?ae(e,r.type,t):r.hasOwnProperty("defaultValue")&&ae(e,r.type,Z(r.defaultValue)),null==r.checked&&null!=r.defaultChecked&&(e.defaultChecked=!!r.defaultChecked)}function ne(e,r,t){if(r.hasOwnProperty("value")||r.hasOwnProperty("defaultValue")){var n=r.type;if(!("submit"!==n&&"reset"!==n||void 0!==r.value&&null!==r.value))return;r=""+e._wrapperState.initialValue,t||r===e.value||(e.value=r),e.defaultValue=r}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ae(e,r,t){"number"===r&&$(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function oe(e,r){return e=a({children:void 0},r),(r=function(e){var r="";return n.Children.forEach(e,(function(e){null!=e&&(r+=e)})),r}(r.children))&&(e.children=r),e}function ie(e,r,t,n){if(e=e.options,r){r={};for(var a=0;a<t.length;a++)r["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=r.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&n&&(e[t].defaultSelected=!0)}else{for(t=""+Z(t),r=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(n&&(e[a].defaultSelected=!0));null!==r||e[a].disabled||(r=e[a])}null!==r&&(r.selected=!0)}}function le(e,r){if(null!=r.dangerouslySetInnerHTML)throw Error(i(91));return a({},r,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,r){var t=r.value;if(null==t){if(t=r.children,r=r.defaultValue,null!=t){if(null!=r)throw Error(i(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(i(93));t=t[0]}r=t}null==r&&(r=""),t=r}e._wrapperState={initialValue:Z(t)}}function ue(e,r){var t=Z(r.value),n=Z(r.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==r.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=n&&(e.defaultValue=""+n)}function ce(e){var r=e.textContent;r===e._wrapperState.initialValue&&""!==r&&null!==r&&(e.value=r)}var de="http://www.w3.org/1999/xhtml";function he(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function fe(e,r){return null==e||"http://www.w3.org/1999/xhtml"===e?he(r):"http://www.w3.org/2000/svg"===e&&"foreignObject"===r?"http://www.w3.org/1999/xhtml":e}var ge,pe,me=(pe=function(e,r){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=r;else{for((ge=ge||document.createElement("div")).innerHTML="<svg>"+r.valueOf().toString()+"</svg>",r=ge.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;r.firstChild;)e.appendChild(r.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,r,t,n){MSApp.execUnsafeLocalFunction((function(){return pe(e,r)}))}:pe);function ye(e,r){if(r){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=r)}e.textContent=r}var Se={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ve=["Webkit","ms","Moz","O"];function Ce(e,r,t){return null==r||"boolean"==typeof r||""===r?"":t||"number"!=typeof r||0===r||Se.hasOwnProperty(e)&&Se[e]?(""+r).trim():r+"px"}function Ae(e,r){for(var t in e=e.style,r)if(r.hasOwnProperty(t)){var n=0===t.indexOf("--"),a=Ce(t,r[t],n);"float"===t&&(t="cssFloat"),n?e.setProperty(t,a):e[t]=a}}Object.keys(Se).forEach((function(e){ve.forEach((function(r){r=r+e.charAt(0).toUpperCase()+e.substring(1),Se[r]=Se[e]}))}));var be=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ke(e,r){if(r){if(be[e]&&(null!=r.children||null!=r.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=r.dangerouslySetInnerHTML){if(null!=r.children)throw Error(i(60));if("object"!=typeof r.dangerouslySetInnerHTML||!("__html"in r.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=r.style&&"object"!=typeof r.style)throw Error(i(62))}}function we(e,r){if(-1===e.indexOf("-"))return"string"==typeof r.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Be(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var De=null,Te=null,Me=null;function Ee(e){if(e=$n(e)){if("function"!=typeof De)throw Error(i(280));var r=e.stateNode;r&&(r=ea(r),De(e.stateNode,e.type,r))}}function Pe(e){Te?Me?Me.push(e):Me=[e]:Te=e}function xe(){if(Te){var e=Te,r=Me;if(Me=Te=null,Ee(e),r)for(e=0;e<r.length;e++)Ee(r[e])}}function Re(e,r){return e(r)}function Ge(e,r,t,n,a){return e(r,t,n,a)}function Fe(){}var We=Re,Oe=!1,He=!1;function Le(){null===Te&&null===Me||(Fe(),xe())}function Ie(e,r){var t=e.stateNode;if(null===t)return null;var n=ea(t);if(null===n)return null;t=n[r];e:switch(r){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(i(231,r,typeof t));return t}var Ne=!1;if(d)try{var Ve={};Object.defineProperty(Ve,"passive",{get:function(){Ne=!0}}),window.addEventListener("test",Ve,Ve),window.removeEventListener("test",Ve,Ve)}catch(pe){Ne=!1}function ze(e,r,t,n,a,o,i,l,s){var u=Array.prototype.slice.call(arguments,3);try{r.apply(t,u)}catch(e){this.onError(e)}}var Ke=!1,Ue=null,je=!1,_e=null,qe={onError:function(e){Ke=!0,Ue=e}};function Ze(e,r,t,n,a,o,i,l,s){Ke=!1,Ue=null,ze.apply(qe,arguments)}function Je(e){var r=e,t=e;if(e.alternate)for(;r.return;)r=r.return;else{e=r;do{0!=(1026&(r=e).flags)&&(t=r.return),e=r.return}while(e)}return 3===r.tag?t:null}function Ye(e){if(13===e.tag){var r=e.memoizedState;if(null===r&&null!==(e=e.alternate)&&(r=e.memoizedState),null!==r)return r.dehydrated}return null}function Qe(e){if(Je(e)!==e)throw Error(i(188))}function $e(e,r){for(var t=e.alternate;null!==r;){if(r===e||r===t)return!0;r=r.return}return!1}var Xe,er,rr,tr,nr=!1,ar=[],or=null,ir=null,lr=null,sr=new Map,ur=new Map,cr=[],dr="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function hr(e,r,t,n,a){return{blockedOn:e,domEventName:r,eventSystemFlags:16|t,nativeEvent:a,targetContainers:[n]}}function fr(e,r){switch(e){case"focusin":case"focusout":or=null;break;case"dragenter":case"dragleave":ir=null;break;case"mouseover":case"mouseout":lr=null;break;case"pointerover":case"pointerout":sr.delete(r.pointerId);break;case"gotpointercapture":case"lostpointercapture":ur.delete(r.pointerId)}}function gr(e,r,t,n,a,o){return null===e||e.nativeEvent!==o?(e=hr(r,t,n,a,o),null!==r&&null!==(r=$n(r))&&er(r),e):(e.eventSystemFlags|=n,r=e.targetContainers,null!==a&&-1===r.indexOf(a)&&r.push(a),e)}function pr(e){var r=Qn(e.target);if(null!==r){var t=Je(r);if(null!==t)if(13===(r=t.tag)){if(null!==(r=Ye(t)))return e.blockedOn=r,void tr(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){rr(t)}))}))}else if(3===r&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function mr(e){if(null!==e.blockedOn)return!1;for(var r=e.targetContainers;0<r.length;){var t=Qr(e.domEventName,e.eventSystemFlags,r[0],e.nativeEvent);if(null!==t)return null!==(r=$n(t))&&er(r),e.blockedOn=t,!1;r.shift()}return!0}function yr(e,r,t){mr(e)&&t.delete(r)}function Sr(){for(nr=!1;0<ar.length;){var e=ar[0];if(null!==e.blockedOn){null!==(e=$n(e.blockedOn))&&Xe(e);break}for(var r=e.targetContainers;0<r.length;){var t=Qr(e.domEventName,e.eventSystemFlags,r[0],e.nativeEvent);if(null!==t){e.blockedOn=t;break}r.shift()}null===e.blockedOn&&ar.shift()}null!==or&&mr(or)&&(or=null),null!==ir&&mr(ir)&&(ir=null),null!==lr&&mr(lr)&&(lr=null),sr.forEach(yr),ur.forEach(yr)}function vr(e,r){e.blockedOn===r&&(e.blockedOn=null,nr||(nr=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Sr)))}function Cr(e){function r(r){return vr(r,e)}if(0<ar.length){vr(ar[0],e);for(var t=1;t<ar.length;t++){var n=ar[t];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==or&&vr(or,e),null!==ir&&vr(ir,e),null!==lr&&vr(lr,e),sr.forEach(r),ur.forEach(r),t=0;t<cr.length;t++)(n=cr[t]).blockedOn===e&&(n.blockedOn=null);for(;0<cr.length&&null===(t=cr[0]).blockedOn;)pr(t),null===t.blockedOn&&cr.shift()}function Ar(e,r){var t={};return t[e.toLowerCase()]=r.toLowerCase(),t["Webkit"+e]="webkit"+r,t["Moz"+e]="moz"+r,t}var br={animationend:Ar("Animation","AnimationEnd"),animationiteration:Ar("Animation","AnimationIteration"),animationstart:Ar("Animation","AnimationStart"),transitionend:Ar("Transition","TransitionEnd")},kr={},wr={};function Br(e){if(kr[e])return kr[e];if(!br[e])return e;var r,t=br[e];for(r in t)if(t.hasOwnProperty(r)&&r in wr)return kr[e]=t[r];return e}d&&(wr=document.createElement("div").style,"AnimationEvent"in window||(delete br.animationend.animation,delete br.animationiteration.animation,delete br.animationstart.animation),"TransitionEvent"in window||delete br.transitionend.transition);var Dr=Br("animationend"),Tr=Br("animationiteration"),Mr=Br("animationstart"),Er=Br("transitionend"),Pr=new Map,xr=new Map,Rr=["abort","abort",Dr,"animationEnd",Tr,"animationIteration",Mr,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Er,"transitionEnd","waiting","waiting"];function Gr(e,r){for(var t=0;t<e.length;t+=2){var n=e[t],a=e[t+1];a="on"+(a[0].toUpperCase()+a.slice(1)),xr.set(n,r),Pr.set(n,a),u(a,[n])}}(0,o.unstable_now)();var Fr=8;function Wr(e){if(0!=(1&e))return Fr=15,1;if(0!=(2&e))return Fr=14,2;if(0!=(4&e))return Fr=13,4;var r=24&e;return 0!==r?(Fr=12,r):0!=(32&e)?(Fr=11,32):0!=(r=192&e)?(Fr=10,r):0!=(256&e)?(Fr=9,256):0!=(r=3584&e)?(Fr=8,r):0!=(4096&e)?(Fr=7,4096):0!=(r=4186112&e)?(Fr=6,r):0!=(r=62914560&e)?(Fr=5,r):67108864&e?(Fr=4,67108864):0!=(134217728&e)?(Fr=3,134217728):0!=(r=805306368&e)?(Fr=2,r):0!=(1073741824&e)?(Fr=1,1073741824):(Fr=8,e)}function Or(e,r){var t=e.pendingLanes;if(0===t)return Fr=0;var n=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)n=o,a=Fr=15;else if(0!=(o=134217727&t)){var s=o&~i;0!==s?(n=Wr(s),a=Fr):0!=(l&=o)&&(n=Wr(l),a=Fr)}else 0!=(o=t&~i)?(n=Wr(o),a=Fr):0!==l&&(n=Wr(l),a=Fr);if(0===n)return 0;if(n=t&((0>(n=31-zr(n))?0:1<<n)<<1)-1,0!==r&&r!==n&&0==(r&i)){if(Wr(r),a<=Fr)return r;Fr=a}if(0!==(r=e.entangledLanes))for(e=e.entanglements,r&=n;0<r;)a=1<<(t=31-zr(r)),n|=e[t],r&=~a;return n}function Hr(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Lr(e,r){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ir(24&~r))?Lr(10,r):e;case 10:return 0===(e=Ir(192&~r))?Lr(8,r):e;case 8:return 0===(e=Ir(3584&~r))&&0===(e=Ir(4186112&~r))&&(e=512),e;case 2:return 0===(r=Ir(805306368&~r))&&(r=268435456),r}throw Error(i(358,e))}function Ir(e){return e&-e}function Nr(e){for(var r=[],t=0;31>t;t++)r.push(e);return r}function Vr(e,r,t){e.pendingLanes|=r;var n=r-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[r=31-zr(r)]=t}var zr=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Kr(e)/Ur|0)|0},Kr=Math.log,Ur=Math.LN2,jr=o.unstable_UserBlockingPriority,_r=o.unstable_runWithPriority,qr=!0;function Zr(e,r,t,n){Oe||Fe();var a=Yr,o=Oe;Oe=!0;try{Ge(a,e,r,t,n)}finally{(Oe=o)||Le()}}function Jr(e,r,t,n){_r(jr,Yr.bind(null,e,r,t,n))}function Yr(e,r,t,n){var a;if(qr)if((a=0==(4&r))&&0<ar.length&&-1<dr.indexOf(e))e=hr(null,e,r,t,n),ar.push(e);else{var o=Qr(e,r,t,n);if(null===o)a&&fr(e,n);else{if(a){if(-1<dr.indexOf(e))return e=hr(o,e,r,t,n),void ar.push(e);if(function(e,r,t,n,a){switch(r){case"focusin":return or=gr(or,e,r,t,n,a),!0;case"dragenter":return ir=gr(ir,e,r,t,n,a),!0;case"mouseover":return lr=gr(lr,e,r,t,n,a),!0;case"pointerover":var o=a.pointerId;return sr.set(o,gr(sr.get(o)||null,e,r,t,n,a)),!0;case"gotpointercapture":return o=a.pointerId,ur.set(o,gr(ur.get(o)||null,e,r,t,n,a)),!0}return!1}(o,e,r,t,n))return;fr(e,n)}Pn(e,r,n,null,t)}}}function Qr(e,r,t,n){var a=Be(n);if(null!==(a=Qn(a))){var o=Je(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ye(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Pn(e,r,n,a,t),null}var $r=null,Xr=null,et=null;function rt(){if(et)return et;var e,r,t=Xr,n=t.length,a="value"in $r?$r.value:$r.textContent,o=a.length;for(e=0;e<n&&t[e]===a[e];e++);var i=n-e;for(r=1;r<=i&&t[n-r]===a[o-r];r++);return et=a.slice(e,1<r?1-r:void 0)}function tt(e){var r=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===r&&(e=13):e=r,10===e&&(e=13),32<=e||13===e?e:0}function nt(){return!0}function at(){return!1}function ot(e){function r(r,t,n,a,o){for(var i in this._reactName=r,this._targetInst=n,this.type=t,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(r=e[i],this[i]=r?r(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nt:at,this.isPropagationStopped=at,this}return a(r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nt)},persist:function(){},isPersistent:nt}),r}var it,lt,st,ut={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ct=ot(ut),dt=a({},ut,{view:0,detail:0}),ht=ot(dt),ft=a({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:wt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==st&&(st&&"mousemove"===e.type?(it=e.screenX-st.screenX,lt=e.screenY-st.screenY):lt=it=0,st=e),it)},movementY:function(e){return"movementY"in e?e.movementY:lt}}),gt=ot(ft),pt=ot(a({},ft,{dataTransfer:0})),mt=ot(a({},dt,{relatedTarget:0})),yt=ot(a({},ut,{animationName:0,elapsedTime:0,pseudoElement:0})),St=ot(a({},ut,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),vt=ot(a({},ut,{data:0})),Ct={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},At={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function kt(e){var r=this.nativeEvent;return r.getModifierState?r.getModifierState(e):!!(e=bt[e])&&!!r[e]}function wt(){return kt}var Bt=ot(a({},dt,{key:function(e){if(e.key){var r=Ct[e.key]||e.key;if("Unidentified"!==r)return r}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?At[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:wt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Dt=ot(a({},ft,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tt=ot(a({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:wt})),Mt=ot(a({},ut,{propertyName:0,elapsedTime:0,pseudoElement:0})),Et=ot(a({},ft,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Pt=[9,13,27,32],xt=d&&"CompositionEvent"in window,Rt=null;d&&"documentMode"in document&&(Rt=document.documentMode);var Gt=d&&"TextEvent"in window&&!Rt,Ft=d&&(!xt||Rt&&8<Rt&&11>=Rt),Wt=String.fromCharCode(32),Ot=!1;function Ht(e,r){switch(e){case"keyup":return-1!==Pt.indexOf(r.keyCode);case"keydown":return 229!==r.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Lt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var It=!1,Nt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vt(e){var r=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===r?!!Nt[e.type]:"textarea"===r}function zt(e,r,t,n){Pe(n),0<(r=Rn(r,"onChange")).length&&(t=new ct("onChange","change",null,t,n),e.push({event:t,listeners:r}))}var Kt=null,Ut=null;function jt(e){wn(e,0)}function _t(e){if(Q(Xn(e)))return e}function qt(e,r){if("change"===e)return r}var Zt=!1;if(d){var Jt;if(d){var Yt="oninput"in document;if(!Yt){var Qt=document.createElement("div");Qt.setAttribute("oninput","return;"),Yt="function"==typeof Qt.oninput}Jt=Yt}else Jt=!1;Zt=Jt&&(!document.documentMode||9<document.documentMode)}function $t(){Kt&&(Kt.detachEvent("onpropertychange",Xt),Ut=Kt=null)}function Xt(e){if("value"===e.propertyName&&_t(Ut)){var r=[];if(zt(r,Ut,e,Be(e)),e=jt,Oe)e(r);else{Oe=!0;try{Re(e,r)}finally{Oe=!1,Le()}}}}function en(e,r,t){"focusin"===e?($t(),Ut=t,(Kt=r).attachEvent("onpropertychange",Xt)):"focusout"===e&&$t()}function rn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return _t(Ut)}function tn(e,r){if("click"===e)return _t(r)}function nn(e,r){if("input"===e||"change"===e)return _t(r)}var an="function"==typeof Object.is?Object.is:function(e,r){return e===r&&(0!==e||1/e==1/r)||e!=e&&r!=r},on=Object.prototype.hasOwnProperty;function ln(e,r){if(an(e,r))return!0;if("object"!=typeof e||null===e||"object"!=typeof r||null===r)return!1;var t=Object.keys(e),n=Object.keys(r);if(t.length!==n.length)return!1;for(n=0;n<t.length;n++)if(!on.call(r,t[n])||!an(e[t[n]],r[t[n]]))return!1;return!0}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function un(e,r){var t,n=sn(e);for(e=0;n;){if(3===n.nodeType){if(t=e+n.textContent.length,e<=r&&t>=r)return{node:n,offset:r-e};e=t}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=sn(n)}}function cn(e,r){return!(!e||!r)&&(e===r||(!e||3!==e.nodeType)&&(r&&3===r.nodeType?cn(e,r.parentNode):"contains"in e?e.contains(r):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(r))))}function dn(){for(var e=window,r=$();r instanceof e.HTMLIFrameElement;){try{var t="string"==typeof r.contentWindow.location.href}catch(e){t=!1}if(!t)break;r=$((e=r.contentWindow).document)}return r}function hn(e){var r=e&&e.nodeName&&e.nodeName.toLowerCase();return r&&("input"===r&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===r||"true"===e.contentEditable)}var fn=d&&"documentMode"in document&&11>=document.documentMode,gn=null,pn=null,mn=null,yn=!1;function Sn(e,r,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;yn||null==gn||gn!==$(n)||(n="selectionStart"in(n=gn)&&hn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},mn&&ln(mn,n)||(mn=n,0<(n=Rn(pn,"onSelect")).length&&(r=new ct("onSelect","select",null,r,t),e.push({event:r,listeners:n}),r.target=gn)))}Gr("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Gr("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Gr(Rr,2);for(var vn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Cn=0;Cn<vn.length;Cn++)xr.set(vn[Cn],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var An="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bn=new Set("cancel close invalid load scroll toggle".split(" ").concat(An));function kn(e,r,t){var n=e.type||"unknown-event";e.currentTarget=t,function(e,r,t,n,a,o,l,s,u){if(Ze.apply(this,arguments),Ke){if(!Ke)throw Error(i(198));var c=Ue;Ke=!1,Ue=null,je||(je=!0,_e=c)}}(n,r,void 0,e),e.currentTarget=null}function wn(e,r){r=0!=(4&r);for(var t=0;t<e.length;t++){var n=e[t],a=n.event;n=n.listeners;e:{var o=void 0;if(r)for(var i=n.length-1;0<=i;i--){var l=n[i],s=l.instance,u=l.currentTarget;if(l=l.listener,s!==o&&a.isPropagationStopped())break e;kn(a,l,u),o=s}else for(i=0;i<n.length;i++){if(s=(l=n[i]).instance,u=l.currentTarget,l=l.listener,s!==o&&a.isPropagationStopped())break e;kn(a,l,u),o=s}}}if(je)throw e=_e,je=!1,_e=null,e}function Bn(e,r){var t=ra(r),n=e+"__bubble";t.has(n)||(En(r,e,2,!1),t.add(n))}var Dn="_reactListening"+Math.random().toString(36).slice(2);function Tn(e){e[Dn]||(e[Dn]=!0,l.forEach((function(r){bn.has(r)||Mn(r,!1,e,null),Mn(r,!0,e,null)})))}function Mn(e,r,t,n){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=t;if("selectionchange"===e&&9!==t.nodeType&&(o=t.ownerDocument),null!==n&&!r&&bn.has(e)){if("scroll"!==e)return;a|=2,o=n}var i=ra(o),l=e+"__"+(r?"capture":"bubble");i.has(l)||(r&&(a|=4),En(o,e,a,r),i.add(l))}function En(e,r,t,n){var a=xr.get(r);switch(void 0===a?2:a){case 0:a=Zr;break;case 1:a=Jr;break;default:a=Yr}t=a.bind(null,r,t,e),a=void 0,!Ne||"touchstart"!==r&&"touchmove"!==r&&"wheel"!==r||(a=!0),n?void 0!==a?e.addEventListener(r,t,{capture:!0,passive:a}):e.addEventListener(r,t,!0):void 0!==a?e.addEventListener(r,t,{passive:a}):e.addEventListener(r,t,!1)}function Pn(e,r,t,n,a){var o=n;if(0==(1&r)&&0==(2&r)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var l=n.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=n.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===a||8===s.nodeType&&s.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=Qn(l)))return;if(5===(s=i.tag)||6===s){n=o=i;continue e}l=l.parentNode}}n=n.return}!function(e,r,t){if(He)return e();He=!0;try{We(e,r,t)}finally{He=!1,Le()}}((function(){var n=o,a=Be(t),i=[];e:{var l=Pr.get(e);if(void 0!==l){var s=ct,u=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":s=Bt;break;case"focusin":u="focus",s=mt;break;case"focusout":u="blur",s=mt;break;case"beforeblur":case"afterblur":s=mt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=gt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=pt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Tt;break;case Dr:case Tr:case Mr:s=yt;break;case Er:s=Mt;break;case"scroll":s=ht;break;case"wheel":s=Et;break;case"copy":case"cut":case"paste":s=St;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Dt}var c=0!=(4&r),d=!c&&"scroll"===e,h=c?null!==l?l+"Capture":null:l;c=[];for(var f,g=n;null!==g;){var p=(f=g).stateNode;if(5===f.tag&&null!==p&&(f=p,null!==h&&null!=(p=Ie(g,h))&&c.push(xn(g,p,f))),d)break;g=g.return}0<c.length&&(l=new s(l,u,null,t,a),i.push({event:l,listeners:c}))}}if(0==(7&r)){if(s="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&r)||!(u=t.relatedTarget||t.fromElement)||!Qn(u)&&!u[Jn])&&(s||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,s?(s=n,null!==(u=(u=t.relatedTarget||t.toElement)?Qn(u):null)&&(u!==(d=Je(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(s=null,u=n),s!==u)){if(c=gt,p="onMouseLeave",h="onMouseEnter",g="mouse","pointerout"!==e&&"pointerover"!==e||(c=Dt,p="onPointerLeave",h="onPointerEnter",g="pointer"),d=null==s?l:Xn(s),f=null==u?l:Xn(u),(l=new c(p,g+"leave",s,t,a)).target=d,l.relatedTarget=f,p=null,Qn(a)===n&&((c=new c(h,g+"enter",u,t,a)).target=f,c.relatedTarget=d,p=c),d=p,s&&u)e:{for(h=u,g=0,f=c=s;f;f=Gn(f))g++;for(f=0,p=h;p;p=Gn(p))f++;for(;0<g-f;)c=Gn(c),g--;for(;0<f-g;)h=Gn(h),f--;for(;g--;){if(c===h||null!==h&&c===h.alternate)break e;c=Gn(c),h=Gn(h)}c=null}else c=null;null!==s&&Fn(i,l,s,c,!1),null!==u&&null!==d&&Fn(i,d,u,c,!0)}if("select"===(s=(l=n?Xn(n):window).nodeName&&l.nodeName.toLowerCase())||"input"===s&&"file"===l.type)var m=qt;else if(Vt(l))if(Zt)m=nn;else{m=rn;var y=en}else(s=l.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(m=tn);switch(m&&(m=m(e,n))?zt(i,m,t,a):(y&&y(e,l,n),"focusout"===e&&(y=l._wrapperState)&&y.controlled&&"number"===l.type&&ae(l,"number",l.value)),y=n?Xn(n):window,e){case"focusin":(Vt(y)||"true"===y.contentEditable)&&(gn=y,pn=n,mn=null);break;case"focusout":mn=pn=gn=null;break;case"mousedown":yn=!0;break;case"contextmenu":case"mouseup":case"dragend":yn=!1,Sn(i,t,a);break;case"selectionchange":if(fn)break;case"keydown":case"keyup":Sn(i,t,a)}var S;if(xt)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else It?Ht(e,t)&&(v="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(v="onCompositionStart");v&&(Ft&&"ko"!==t.locale&&(It||"onCompositionStart"!==v?"onCompositionEnd"===v&&It&&(S=rt()):(Xr="value"in($r=a)?$r.value:$r.textContent,It=!0)),0<(y=Rn(n,v)).length&&(v=new vt(v,e,null,t,a),i.push({event:v,listeners:y}),(S||null!==(S=Lt(t)))&&(v.data=S))),(S=Gt?function(e,r){switch(e){case"compositionend":return Lt(r);case"keypress":return 32!==r.which?null:(Ot=!0,Wt);case"textInput":return(e=r.data)===Wt&&Ot?null:e;default:return null}}(e,t):function(e,r){if(It)return"compositionend"===e||!xt&&Ht(e,r)?(e=rt(),et=Xr=$r=null,It=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(r.ctrlKey||r.altKey||r.metaKey)||r.ctrlKey&&r.altKey){if(r.char&&1<r.char.length)return r.char;if(r.which)return String.fromCharCode(r.which)}return null;case"compositionend":return Ft&&"ko"!==r.locale?null:r.data;default:return null}}(e,t))&&0<(n=Rn(n,"onBeforeInput")).length&&(a=new vt("onBeforeInput","beforeinput",null,t,a),i.push({event:a,listeners:n}),a.data=S)}wn(i,r)}))}function xn(e,r,t){return{instance:e,listener:r,currentTarget:t}}function Rn(e,r){for(var t=r+"Capture",n=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Ie(e,t))&&n.unshift(xn(e,o,a)),null!=(o=Ie(e,r))&&n.push(xn(e,o,a))),e=e.return}return n}function Gn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Fn(e,r,t,n,a){for(var o=r._reactName,i=[];null!==t&&t!==n;){var l=t,s=l.alternate,u=l.stateNode;if(null!==s&&s===n)break;5===l.tag&&null!==u&&(l=u,a?null!=(s=Ie(t,o))&&i.unshift(xn(t,s,l)):a||null!=(s=Ie(t,o))&&i.push(xn(t,s,l))),t=t.return}0!==i.length&&e.push({event:r,listeners:i})}function Wn(){}var On=null,Hn=null;function Ln(e,r){switch(e){case"button":case"input":case"select":case"textarea":return!!r.autoFocus}return!1}function In(e,r){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof r.children||"number"==typeof r.children||"object"==typeof r.dangerouslySetInnerHTML&&null!==r.dangerouslySetInnerHTML&&null!=r.dangerouslySetInnerHTML.__html}var Nn="function"==typeof setTimeout?setTimeout:void 0,Vn="function"==typeof clearTimeout?clearTimeout:void 0;function zn(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Kn(e){for(;null!=e;e=e.nextSibling){var r=e.nodeType;if(1===r||3===r)break}return e}function Un(e){e=e.previousSibling;for(var r=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===r)return e;r--}else"/$"===t&&r++}e=e.previousSibling}return null}var jn=0,_n=Math.random().toString(36).slice(2),qn="__reactFiber$"+_n,Zn="__reactProps$"+_n,Jn="__reactContainer$"+_n,Yn="__reactEvents$"+_n;function Qn(e){var r=e[qn];if(r)return r;for(var t=e.parentNode;t;){if(r=t[Jn]||t[qn]){if(t=r.alternate,null!==r.child||null!==t&&null!==t.child)for(e=Un(e);null!==e;){if(t=e[qn])return t;e=Un(e)}return r}t=(e=t).parentNode}return null}function $n(e){return!(e=e[qn]||e[Jn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Xn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ea(e){return e[Zn]||null}function ra(e){var r=e[Yn];return void 0===r&&(r=e[Yn]=new Set),r}var ta=[],na=-1;function aa(e){return{current:e}}function oa(e){0>na||(e.current=ta[na],ta[na]=null,na--)}function ia(e,r){na++,ta[na]=e.current,e.current=r}var la={},sa=aa(la),ua=aa(!1),ca=la;function da(e,r){var t=e.type.contextTypes;if(!t)return la;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===r)return n.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in t)o[a]=r[a];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=o),o}function ha(e){return null!=e.childContextTypes}function fa(){oa(ua),oa(sa)}function ga(e,r,t){if(sa.current!==la)throw Error(i(168));ia(sa,r),ia(ua,t)}function pa(e,r,t){var n=e.stateNode;if(e=r.childContextTypes,"function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())if(!(o in e))throw Error(i(108,q(r)||"Unknown",o));return a({},t,n)}function ma(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||la,ca=sa.current,ia(sa,e),ia(ua,ua.current),!0}function ya(e,r,t){var n=e.stateNode;if(!n)throw Error(i(169));t?(e=pa(e,r,ca),n.__reactInternalMemoizedMergedChildContext=e,oa(ua),oa(sa),ia(sa,e)):oa(ua),ia(ua,t)}var Sa=null,va=null,Ca=o.unstable_runWithPriority,Aa=o.unstable_scheduleCallback,ba=o.unstable_cancelCallback,ka=o.unstable_shouldYield,wa=o.unstable_requestPaint,Ba=o.unstable_now,Da=o.unstable_getCurrentPriorityLevel,Ta=o.unstable_ImmediatePriority,Ma=o.unstable_UserBlockingPriority,Ea=o.unstable_NormalPriority,Pa=o.unstable_LowPriority,xa=o.unstable_IdlePriority,Ra={},Ga=void 0!==wa?wa:function(){},Fa=null,Wa=null,Oa=!1,Ha=Ba(),La=1e4>Ha?Ba:function(){return Ba()-Ha};function Ia(){switch(Da()){case Ta:return 99;case Ma:return 98;case Ea:return 97;case Pa:return 96;case xa:return 95;default:throw Error(i(332))}}function Na(e){switch(e){case 99:return Ta;case 98:return Ma;case 97:return Ea;case 96:return Pa;case 95:return xa;default:throw Error(i(332))}}function Va(e,r){return e=Na(e),Ca(e,r)}function za(e,r,t){return e=Na(e),Aa(e,r,t)}function Ka(){if(null!==Wa){var e=Wa;Wa=null,ba(e)}Ua()}function Ua(){if(!Oa&&null!==Fa){Oa=!0;var e=0;try{var r=Fa;Va(99,(function(){for(;e<r.length;e++){var t=r[e];do{t=t(!0)}while(null!==t)}})),Fa=null}catch(r){throw null!==Fa&&(Fa=Fa.slice(e+1)),Aa(Ta,Ka),r}finally{Oa=!1}}}var ja=A.ReactCurrentBatchConfig;function _a(e,r){if(e&&e.defaultProps){for(var t in r=a({},r),e=e.defaultProps)void 0===r[t]&&(r[t]=e[t]);return r}return r}var qa=aa(null),Za=null,Ja=null,Ya=null;function Qa(){Ya=Ja=Za=null}function $a(e){var r=qa.current;oa(qa),e.type._context._currentValue=r}function Xa(e,r){for(;null!==e;){var t=e.alternate;if((e.childLanes&r)===r){if(null===t||(t.childLanes&r)===r)break;t.childLanes|=r}else e.childLanes|=r,null!==t&&(t.childLanes|=r);e=e.return}}function eo(e,r){Za=e,Ya=Ja=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&r)&&(Ri=!0),e.firstContext=null)}function ro(e,r){if(Ya!==e&&!1!==r&&0!==r)if("number"==typeof r&&1073741823!==r||(Ya=e,r=1073741823),r={context:e,observedBits:r,next:null},null===Ja){if(null===Za)throw Error(i(308));Ja=r,Za.dependencies={lanes:0,firstContext:r,responders:null}}else Ja=Ja.next=r;return e._currentValue}var to=!1;function no(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(e,r){e=e.updateQueue,r.updateQueue===e&&(r.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oo(e,r){return{eventTime:e,lane:r,tag:0,payload:null,callback:null,next:null}}function io(e,r){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?r.next=r:(r.next=t.next,t.next=r),e.pending=r}}function lo(e,r){var t=e.updateQueue,n=e.alternate;if(null!==n&&t===(n=n.updateQueue)){var a=null,o=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===o?a=o=i:o=o.next=i,t=t.next}while(null!==t);null===o?a=o=r:o=o.next=r}else a=o=r;return t={baseState:n.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:n.shared,effects:n.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=r:e.next=r,t.lastBaseUpdate=r}function so(e,r,t,n){var o=e.updateQueue;to=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,s=o.shared.pending;if(null!==s){o.shared.pending=null;var u=s,c=u.next;u.next=null,null===l?i=c:l.next=c,l=u;var d=e.alternate;if(null!==d){var h=(d=d.updateQueue).lastBaseUpdate;h!==l&&(null===h?d.firstBaseUpdate=c:h.next=c,d.lastBaseUpdate=u)}}if(null!==i){for(h=o.baseState,l=0,d=c=u=null;;){s=i.lane;var f=i.eventTime;if((n&s)===s){null!==d&&(d=d.next={eventTime:f,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var g=e,p=i;switch(s=r,f=t,p.tag){case 1:if("function"==typeof(g=p.payload)){h=g.call(f,h,s);break e}h=g;break e;case 3:g.flags=-4097&g.flags|64;case 0:if(null==(s="function"==typeof(g=p.payload)?g.call(f,h,s):g))break e;h=a({},h,s);break e;case 2:to=!0}}null!==i.callback&&(e.flags|=32,null===(s=o.effects)?o.effects=[i]:s.push(i))}else f={eventTime:f,lane:s,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===d?(c=d=f,u=h):d=d.next=f,l|=s;if(null===(i=i.next)){if(null===(s=o.shared.pending))break;i=s.next,s.next=null,o.lastBaseUpdate=s,o.shared.pending=null}}null===d&&(u=h),o.baseState=u,o.firstBaseUpdate=c,o.lastBaseUpdate=d,Fl|=l,e.lanes=l,e.memoizedState=h}}function uo(e,r,t){if(e=r.effects,r.effects=null,null!==e)for(r=0;r<e.length;r++){var n=e[r],a=n.callback;if(null!==a){if(n.callback=null,n=t,"function"!=typeof a)throw Error(i(191,a));a.call(n)}}}var co=(new n.Component).refs;function ho(e,r,t,n){t=null==(t=t(n,r=e.memoizedState))?r:a({},r,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var fo={isMounted:function(e){return!!(e=e._reactInternals)&&Je(e)===e},enqueueSetState:function(e,r,t){e=e._reactInternals;var n=os(),a=is(e),o=oo(n,a);o.payload=r,null!=t&&(o.callback=t),io(e,o),ls(e,a,n)},enqueueReplaceState:function(e,r,t){e=e._reactInternals;var n=os(),a=is(e),o=oo(n,a);o.tag=1,o.payload=r,null!=t&&(o.callback=t),io(e,o),ls(e,a,n)},enqueueForceUpdate:function(e,r){e=e._reactInternals;var t=os(),n=is(e),a=oo(t,n);a.tag=2,null!=r&&(a.callback=r),io(e,a),ls(e,n,t)}};function go(e,r,t,n,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,o,i):!(r.prototype&&r.prototype.isPureReactComponent&&ln(t,n)&&ln(a,o))}function po(e,r,t){var n=!1,a=la,o=r.contextType;return"object"==typeof o&&null!==o?o=ro(o):(a=ha(r)?ca:sa.current,o=(n=null!=(n=r.contextTypes))?da(e,a):la),r=new r(t,o),e.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,r.updater=fo,e.stateNode=r,r._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),r}function mo(e,r,t,n){e=r.state,"function"==typeof r.componentWillReceiveProps&&r.componentWillReceiveProps(t,n),"function"==typeof r.UNSAFE_componentWillReceiveProps&&r.UNSAFE_componentWillReceiveProps(t,n),r.state!==e&&fo.enqueueReplaceState(r,r.state,null)}function yo(e,r,t,n){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs=co,no(e);var o=r.contextType;"object"==typeof o&&null!==o?a.context=ro(o):(o=ha(r)?ca:sa.current,a.context=da(e,o)),so(e,t,a,n),a.state=e.memoizedState,"function"==typeof(o=r.getDerivedStateFromProps)&&(ho(e,r,o,t),a.state=e.memoizedState),"function"==typeof r.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(r=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),r!==a.state&&fo.enqueueReplaceState(a,a.state,null),so(e,t,a,n),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var So=Array.isArray;function vo(e,r,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var n=t.stateNode}if(!n)throw Error(i(147,e));var a=""+e;return null!==r&&null!==r.ref&&"function"==typeof r.ref&&r.ref._stringRef===a?r.ref:((r=function(e){var r=n.refs;r===co&&(r=n.refs={}),null===e?delete r[a]:r[a]=e})._stringRef=a,r)}if("string"!=typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function Co(e,r){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(r)?"object with keys {"+Object.keys(r).join(", ")+"}":r))}function Ao(e){function r(r,t){if(e){var n=r.lastEffect;null!==n?(n.nextEffect=t,r.lastEffect=t):r.firstEffect=r.lastEffect=t,t.nextEffect=null,t.flags=8}}function t(t,n){if(!e)return null;for(;null!==n;)r(t,n),n=n.sibling;return null}function n(e,r){for(e=new Map;null!==r;)null!==r.key?e.set(r.key,r):e.set(r.index,r),r=r.sibling;return e}function a(e,r){return(e=Ls(e,r)).index=0,e.sibling=null,e}function o(r,t,n){return r.index=n,e?null!==(n=r.alternate)?(n=n.index)<t?(r.flags=2,t):n:(r.flags=2,t):t}function l(r){return e&&null===r.alternate&&(r.flags=2),r}function s(e,r,t,n){return null===r||6!==r.tag?((r=zs(t,e.mode,n)).return=e,r):((r=a(r,t)).return=e,r)}function u(e,r,t,n){return null!==r&&r.elementType===t.type?((n=a(r,t.props)).ref=vo(e,r,t),n.return=e,n):((n=Is(t.type,t.key,t.props,null,e.mode,n)).ref=vo(e,r,t),n.return=e,n)}function c(e,r,t,n){return null===r||4!==r.tag||r.stateNode.containerInfo!==t.containerInfo||r.stateNode.implementation!==t.implementation?((r=Ks(t,e.mode,n)).return=e,r):((r=a(r,t.children||[])).return=e,r)}function d(e,r,t,n,o){return null===r||7!==r.tag?((r=Ns(t,e.mode,n,o)).return=e,r):((r=a(r,t)).return=e,r)}function h(e,r,t){if("string"==typeof r||"number"==typeof r)return(r=zs(""+r,e.mode,t)).return=e,r;if("object"==typeof r&&null!==r){switch(r.$$typeof){case b:return(t=Is(r.type,r.key,r.props,null,e.mode,t)).ref=vo(e,null,r),t.return=e,t;case k:return(r=Ks(r,e.mode,t)).return=e,r}if(So(r)||z(r))return(r=Ns(r,e.mode,t,null)).return=e,r;Co(e,r)}return null}function f(e,r,t,n){var a=null!==r?r.key:null;if("string"==typeof t||"number"==typeof t)return null!==a?null:s(e,r,""+t,n);if("object"==typeof t&&null!==t){switch(t.$$typeof){case b:return t.key===a?t.type===w?d(e,r,t.props.children,n,a):u(e,r,t,n):null;case k:return t.key===a?c(e,r,t,n):null}if(So(t)||z(t))return null!==a?null:d(e,r,t,n,null);Co(e,t)}return null}function g(e,r,t,n,a){if("string"==typeof n||"number"==typeof n)return s(r,e=e.get(t)||null,""+n,a);if("object"==typeof n&&null!==n){switch(n.$$typeof){case b:return e=e.get(null===n.key?t:n.key)||null,n.type===w?d(r,e,n.props.children,a,n.key):u(r,e,n,a);case k:return c(r,e=e.get(null===n.key?t:n.key)||null,n,a)}if(So(n)||z(n))return d(r,e=e.get(t)||null,n,a,null);Co(r,n)}return null}function p(a,i,l,s){for(var u=null,c=null,d=i,p=i=0,m=null;null!==d&&p<l.length;p++){d.index>p?(m=d,d=null):m=d.sibling;var y=f(a,d,l[p],s);if(null===y){null===d&&(d=m);break}e&&d&&null===y.alternate&&r(a,d),i=o(y,i,p),null===c?u=y:c.sibling=y,c=y,d=m}if(p===l.length)return t(a,d),u;if(null===d){for(;p<l.length;p++)null!==(d=h(a,l[p],s))&&(i=o(d,i,p),null===c?u=d:c.sibling=d,c=d);return u}for(d=n(a,d);p<l.length;p++)null!==(m=g(d,a,p,l[p],s))&&(e&&null!==m.alternate&&d.delete(null===m.key?p:m.key),i=o(m,i,p),null===c?u=m:c.sibling=m,c=m);return e&&d.forEach((function(e){return r(a,e)})),u}function m(a,l,s,u){var c=z(s);if("function"!=typeof c)throw Error(i(150));if(null==(s=c.call(s)))throw Error(i(151));for(var d=c=null,p=l,m=l=0,y=null,S=s.next();null!==p&&!S.done;m++,S=s.next()){p.index>m?(y=p,p=null):y=p.sibling;var v=f(a,p,S.value,u);if(null===v){null===p&&(p=y);break}e&&p&&null===v.alternate&&r(a,p),l=o(v,l,m),null===d?c=v:d.sibling=v,d=v,p=y}if(S.done)return t(a,p),c;if(null===p){for(;!S.done;m++,S=s.next())null!==(S=h(a,S.value,u))&&(l=o(S,l,m),null===d?c=S:d.sibling=S,d=S);return c}for(p=n(a,p);!S.done;m++,S=s.next())null!==(S=g(p,a,m,S.value,u))&&(e&&null!==S.alternate&&p.delete(null===S.key?m:S.key),l=o(S,l,m),null===d?c=S:d.sibling=S,d=S);return e&&p.forEach((function(e){return r(a,e)})),c}return function(e,n,o,s){var u="object"==typeof o&&null!==o&&o.type===w&&null===o.key;u&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case b:e:{for(c=o.key,u=n;null!==u;){if(u.key===c){switch(u.tag){case 7:if(o.type===w){t(e,u.sibling),(n=a(u,o.props.children)).return=e,e=n;break e}break;default:if(u.elementType===o.type){t(e,u.sibling),(n=a(u,o.props)).ref=vo(e,u,o),n.return=e,e=n;break e}}t(e,u);break}r(e,u),u=u.sibling}o.type===w?((n=Ns(o.props.children,e.mode,s,o.key)).return=e,e=n):((s=Is(o.type,o.key,o.props,null,e.mode,s)).ref=vo(e,n,o),s.return=e,e=s)}return l(e);case k:e:{for(u=o.key;null!==n;){if(n.key===u){if(4===n.tag&&n.stateNode.containerInfo===o.containerInfo&&n.stateNode.implementation===o.implementation){t(e,n.sibling),(n=a(n,o.children||[])).return=e,e=n;break e}t(e,n);break}r(e,n),n=n.sibling}(n=Ks(o,e.mode,s)).return=e,e=n}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==n&&6===n.tag?(t(e,n.sibling),(n=a(n,o)).return=e,e=n):(t(e,n),(n=zs(o,e.mode,s)).return=e,e=n),l(e);if(So(o))return p(e,n,o,s);if(z(o))return m(e,n,o,s);if(c&&Co(e,o),void 0===o&&!u)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,q(e.type)||"Component"))}return t(e,n)}}var bo=Ao(!0),ko=Ao(!1),wo={},Bo=aa(wo),Do=aa(wo),To=aa(wo);function Mo(e){if(e===wo)throw Error(i(174));return e}function Eo(e,r){switch(ia(To,r),ia(Do,e),ia(Bo,wo),e=r.nodeType){case 9:case 11:r=(r=r.documentElement)?r.namespaceURI:fe(null,"");break;default:r=fe(r=(e=8===e?r.parentNode:r).namespaceURI||null,e=e.tagName)}oa(Bo),ia(Bo,r)}function Po(){oa(Bo),oa(Do),oa(To)}function xo(e){Mo(To.current);var r=Mo(Bo.current),t=fe(r,e.type);r!==t&&(ia(Do,e),ia(Bo,t))}function Ro(e){Do.current===e&&(oa(Bo),oa(Do))}var Go=aa(0);function Fo(e){for(var r=e;null!==r;){if(13===r.tag){var t=r.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return r}else if(19===r.tag&&void 0!==r.memoizedProps.revealOrder){if(0!=(64&r.flags))return r}else if(null!==r.child){r.child.return=r,r=r.child;continue}if(r===e)break;for(;null===r.sibling;){if(null===r.return||r.return===e)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}var Wo=null,Oo=null,Ho=!1;function Lo(e,r){var t=Os(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=r,t.return=e,t.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function Io(e,r){switch(e.tag){case 5:var t=e.type;return null!==(r=1!==r.nodeType||t.toLowerCase()!==r.nodeName.toLowerCase()?null:r)&&(e.stateNode=r,!0);case 6:return null!==(r=""===e.pendingProps||3!==r.nodeType?null:r)&&(e.stateNode=r,!0);case 13:default:return!1}}function No(e){if(Ho){var r=Oo;if(r){var t=r;if(!Io(e,r)){if(!(r=Kn(t.nextSibling))||!Io(e,r))return e.flags=-1025&e.flags|2,Ho=!1,void(Wo=e);Lo(Wo,t)}Wo=e,Oo=Kn(r.firstChild)}else e.flags=-1025&e.flags|2,Ho=!1,Wo=e}}function Vo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Wo=e}function zo(e){if(e!==Wo)return!1;if(!Ho)return Vo(e),Ho=!0,!1;var r=e.type;if(5!==e.tag||"head"!==r&&"body"!==r&&!In(r,e.memoizedProps))for(r=Oo;r;)Lo(e,r),r=Kn(r.nextSibling);if(Vo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,r=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===r){Oo=Kn(e.nextSibling);break e}r--}else"$"!==t&&"$!"!==t&&"$?"!==t||r++}e=e.nextSibling}Oo=null}}else Oo=Wo?Kn(e.stateNode.nextSibling):null;return!0}function Ko(){Oo=Wo=null,Ho=!1}var Uo=[];function jo(){for(var e=0;e<Uo.length;e++)Uo[e]._workInProgressVersionPrimary=null;Uo.length=0}var _o=A.ReactCurrentDispatcher,qo=A.ReactCurrentBatchConfig,Zo=0,Jo=null,Yo=null,Qo=null,$o=!1,Xo=!1;function ei(){throw Error(i(321))}function ri(e,r){if(null===r)return!1;for(var t=0;t<r.length&&t<e.length;t++)if(!an(e[t],r[t]))return!1;return!0}function ti(e,r,t,n,a,o){if(Zo=o,Jo=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,_o.current=null===e||null===e.memoizedState?Mi:Ei,e=t(n,a),Xo){o=0;do{if(Xo=!1,!(25>o))throw Error(i(301));o+=1,Qo=Yo=null,r.updateQueue=null,_o.current=Pi,e=t(n,a)}while(Xo)}if(_o.current=Ti,r=null!==Yo&&null!==Yo.next,Zo=0,Qo=Yo=Jo=null,$o=!1,r)throw Error(i(300));return e}function ni(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Qo?Jo.memoizedState=Qo=e:Qo=Qo.next=e,Qo}function ai(){if(null===Yo){var e=Jo.alternate;e=null!==e?e.memoizedState:null}else e=Yo.next;var r=null===Qo?Jo.memoizedState:Qo.next;if(null!==r)Qo=r,Yo=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Yo=e).memoizedState,baseState:Yo.baseState,baseQueue:Yo.baseQueue,queue:Yo.queue,next:null},null===Qo?Jo.memoizedState=Qo=e:Qo=Qo.next=e}return Qo}function oi(e,r){return"function"==typeof r?r(e):r}function ii(e){var r=ai(),t=r.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var n=Yo,a=n.baseQueue,o=t.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}n.baseQueue=a=o,t.pending=null}if(null!==a){a=a.next,n=n.baseState;var s=l=o=null,u=a;do{var c=u.lane;if((Zo&c)===c)null!==s&&(s=s.next={lane:0,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),n=u.eagerReducer===e?u.eagerState:e(n,u.action);else{var d={lane:c,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===s?(l=s=d,o=n):s=s.next=d,Jo.lanes|=c,Fl|=c}u=u.next}while(null!==u&&u!==a);null===s?o=n:s.next=l,an(n,r.memoizedState)||(Ri=!0),r.memoizedState=n,r.baseState=o,r.baseQueue=s,t.lastRenderedState=n}return[r.memoizedState,t.dispatch]}function li(e){var r=ai(),t=r.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var n=t.dispatch,a=t.pending,o=r.memoizedState;if(null!==a){t.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);an(o,r.memoizedState)||(Ri=!0),r.memoizedState=o,null===r.baseQueue&&(r.baseState=o),t.lastRenderedState=o}return[o,n]}function si(e,r,t){var n=r._getVersion;n=n(r._source);var a=r._workInProgressVersionPrimary;if(null!==a?e=a===n:(e=e.mutableReadLanes,(e=(Zo&e)===e)&&(r._workInProgressVersionPrimary=n,Uo.push(r))),e)return t(r._source);throw Uo.push(r),Error(i(350))}function ui(e,r,t,n){var a=Dl;if(null===a)throw Error(i(349));var o=r._getVersion,l=o(r._source),s=_o.current,u=s.useState((function(){return si(a,r,t)})),c=u[1],d=u[0];u=Qo;var h=e.memoizedState,f=h.refs,g=f.getSnapshot,p=h.source;h=h.subscribe;var m=Jo;return e.memoizedState={refs:f,source:r,subscribe:n},s.useEffect((function(){f.getSnapshot=t,f.setSnapshot=c;var e=o(r._source);if(!an(l,e)){e=t(r._source),an(d,e)||(c(e),e=is(m),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var n=a.entanglements,i=e;0<i;){var s=31-zr(i),u=1<<s;n[s]|=e,i&=~u}}}),[t,r,n]),s.useEffect((function(){return n(r._source,(function(){var e=f.getSnapshot,t=f.setSnapshot;try{t(e(r._source));var n=is(m);a.mutableReadLanes|=n&a.pendingLanes}catch(e){t((function(){throw e}))}}))}),[r,n]),an(g,t)&&an(p,r)&&an(h,n)||((e={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:d}).dispatch=c=Di.bind(null,Jo,e),u.queue=e,u.baseQueue=null,d=si(a,r,t),u.memoizedState=u.baseState=d),d}function ci(e,r,t){return ui(ai(),e,r,t)}function di(e){var r=ni();return"function"==typeof e&&(e=e()),r.memoizedState=r.baseState=e,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:e}).dispatch=Di.bind(null,Jo,e),[r.memoizedState,e]}function hi(e,r,t,n){return e={tag:e,create:r,destroy:t,deps:n,next:null},null===(r=Jo.updateQueue)?(r={lastEffect:null},Jo.updateQueue=r,r.lastEffect=e.next=e):null===(t=r.lastEffect)?r.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,r.lastEffect=e),e}function fi(e){return e={current:e},ni().memoizedState=e}function gi(){return ai().memoizedState}function pi(e,r,t,n){var a=ni();Jo.flags|=e,a.memoizedState=hi(1|r,t,void 0,void 0===n?null:n)}function mi(e,r,t,n){var a=ai();n=void 0===n?null:n;var o=void 0;if(null!==Yo){var i=Yo.memoizedState;if(o=i.destroy,null!==n&&ri(n,i.deps))return void hi(r,t,o,n)}Jo.flags|=e,a.memoizedState=hi(1|r,t,o,n)}function yi(e,r){return pi(516,4,e,r)}function Si(e,r){return mi(516,4,e,r)}function vi(e,r){return mi(4,2,e,r)}function Ci(e,r){return"function"==typeof r?(e=e(),r(e),function(){r(null)}):null!=r?(e=e(),r.current=e,function(){r.current=null}):void 0}function Ai(e,r,t){return t=null!=t?t.concat([e]):null,mi(4,2,Ci.bind(null,r,e),t)}function bi(){}function ki(e,r){var t=ai();r=void 0===r?null:r;var n=t.memoizedState;return null!==n&&null!==r&&ri(r,n[1])?n[0]:(t.memoizedState=[e,r],e)}function wi(e,r){var t=ai();r=void 0===r?null:r;var n=t.memoizedState;return null!==n&&null!==r&&ri(r,n[1])?n[0]:(e=e(),t.memoizedState=[e,r],e)}function Bi(e,r){var t=Ia();Va(98>t?98:t,(function(){e(!0)})),Va(97<t?97:t,(function(){var t=qo.transition;qo.transition=1;try{e(!1),r()}finally{qo.transition=t}}))}function Di(e,r,t){var n=os(),a=is(e),o={lane:a,action:t,eagerReducer:null,eagerState:null,next:null},i=r.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),r.pending=o,i=e.alternate,e===Jo||null!==i&&i===Jo)Xo=$o=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=r.lastRenderedReducer))try{var l=r.lastRenderedState,s=i(l,t);if(o.eagerReducer=i,o.eagerState=s,an(s,l))return}catch(e){}ls(e,a,n)}}var Ti={readContext:ro,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},Mi={readContext:ro,useCallback:function(e,r){return ni().memoizedState=[e,void 0===r?null:r],e},useContext:ro,useEffect:yi,useImperativeHandle:function(e,r,t){return t=null!=t?t.concat([e]):null,pi(4,2,Ci.bind(null,r,e),t)},useLayoutEffect:function(e,r){return pi(4,2,e,r)},useMemo:function(e,r){var t=ni();return r=void 0===r?null:r,e=e(),t.memoizedState=[e,r],e},useReducer:function(e,r,t){var n=ni();return r=void 0!==t?t(r):r,n.memoizedState=n.baseState=r,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:r}).dispatch=Di.bind(null,Jo,e),[n.memoizedState,e]},useRef:fi,useState:di,useDebugValue:bi,useDeferredValue:function(e){var r=di(e),t=r[0],n=r[1];return yi((function(){var r=qo.transition;qo.transition=1;try{n(e)}finally{qo.transition=r}}),[e]),t},useTransition:function(){var e=di(!1),r=e[0];return fi(e=Bi.bind(null,e[1])),[e,r]},useMutableSource:function(e,r,t){var n=ni();return n.memoizedState={refs:{getSnapshot:r,setSnapshot:null},source:e,subscribe:t},ui(n,e,r,t)},useOpaqueIdentifier:function(){if(Ho){var e=!1,r=function(e){return{$$typeof:W,toString:e,valueOf:e}}((function(){throw e||(e=!0,t("r:"+(jn++).toString(36))),Error(i(355))})),t=di(r)[1];return 0==(2&Jo.mode)&&(Jo.flags|=516,hi(5,(function(){t("r:"+(jn++).toString(36))}),void 0,null)),r}return di(r="r:"+(jn++).toString(36)),r},unstable_isNewReconciler:!1},Ei={readContext:ro,useCallback:ki,useContext:ro,useEffect:Si,useImperativeHandle:Ai,useLayoutEffect:vi,useMemo:wi,useReducer:ii,useRef:gi,useState:function(){return ii(oi)},useDebugValue:bi,useDeferredValue:function(e){var r=ii(oi),t=r[0],n=r[1];return Si((function(){var r=qo.transition;qo.transition=1;try{n(e)}finally{qo.transition=r}}),[e]),t},useTransition:function(){var e=ii(oi)[0];return[gi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return ii(oi)[0]},unstable_isNewReconciler:!1},Pi={readContext:ro,useCallback:ki,useContext:ro,useEffect:Si,useImperativeHandle:Ai,useLayoutEffect:vi,useMemo:wi,useReducer:li,useRef:gi,useState:function(){return li(oi)},useDebugValue:bi,useDeferredValue:function(e){var r=li(oi),t=r[0],n=r[1];return Si((function(){var r=qo.transition;qo.transition=1;try{n(e)}finally{qo.transition=r}}),[e]),t},useTransition:function(){var e=li(oi)[0];return[gi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return li(oi)[0]},unstable_isNewReconciler:!1},xi=A.ReactCurrentOwner,Ri=!1;function Gi(e,r,t,n){r.child=null===e?ko(r,null,t,n):bo(r,e.child,t,n)}function Fi(e,r,t,n,a){t=t.render;var o=r.ref;return eo(r,a),n=ti(e,r,t,n,o,a),null===e||Ri?(r.flags|=1,Gi(e,r,n,a),r.child):(r.updateQueue=e.updateQueue,r.flags&=-517,e.lanes&=~a,$i(e,r,a))}function Wi(e,r,t,n,a,o){if(null===e){var i=t.type;return"function"!=typeof i||Hs(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Is(t.type,null,n,r,r.mode,o)).ref=r.ref,e.return=r,r.child=e):(r.tag=15,r.type=i,Oi(e,r,i,n,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(t=null!==(t=t.compare)?t:ln)(a,n)&&e.ref===r.ref)?$i(e,r,o):(r.flags|=1,(e=Ls(i,n)).ref=r.ref,e.return=r,r.child=e)}function Oi(e,r,t,n,a,o){if(null!==e&&ln(e.memoizedProps,n)&&e.ref===r.ref){if(Ri=!1,0==(o&a))return r.lanes=e.lanes,$i(e,r,o);0!=(16384&e.flags)&&(Ri=!0)}return Ii(e,r,t,n,o)}function Hi(e,r,t){var n=r.pendingProps,a=n.children,o=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0==(4&r.mode))r.memoizedState={baseLanes:0},gs(0,t);else{if(0==(1073741824&t))return e=null!==o?o.baseLanes|t:t,r.lanes=r.childLanes=1073741824,r.memoizedState={baseLanes:e},gs(0,e),null;r.memoizedState={baseLanes:0},gs(0,null!==o?o.baseLanes:t)}else null!==o?(n=o.baseLanes|t,r.memoizedState=null):n=t,gs(0,n);return Gi(e,r,a,t),r.child}function Li(e,r){var t=r.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(r.flags|=128)}function Ii(e,r,t,n,a){var o=ha(t)?ca:sa.current;return o=da(r,o),eo(r,a),t=ti(e,r,t,n,o,a),null===e||Ri?(r.flags|=1,Gi(e,r,t,a),r.child):(r.updateQueue=e.updateQueue,r.flags&=-517,e.lanes&=~a,$i(e,r,a))}function Ni(e,r,t,n,a){if(ha(t)){var o=!0;ma(r)}else o=!1;if(eo(r,a),null===r.stateNode)null!==e&&(e.alternate=null,r.alternate=null,r.flags|=2),po(r,t,n),yo(r,t,n,a),n=!0;else if(null===e){var i=r.stateNode,l=r.memoizedProps;i.props=l;var s=i.context,u=t.contextType;u="object"==typeof u&&null!==u?ro(u):da(r,u=ha(t)?ca:sa.current);var c=t.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==n||s!==u)&&mo(r,i,n,u),to=!1;var h=r.memoizedState;i.state=h,so(r,n,i,a),s=r.memoizedState,l!==n||h!==s||ua.current||to?("function"==typeof c&&(ho(r,t,c,n),s=r.memoizedState),(l=to||go(r,t,l,n,h,s,u))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(r.flags|=4)):("function"==typeof i.componentDidMount&&(r.flags|=4),r.memoizedProps=n,r.memoizedState=s),i.props=n,i.state=s,i.context=u,n=l):("function"==typeof i.componentDidMount&&(r.flags|=4),n=!1)}else{i=r.stateNode,ao(e,r),l=r.memoizedProps,u=r.type===r.elementType?l:_a(r.type,l),i.props=u,d=r.pendingProps,h=i.context,s="object"==typeof(s=t.contextType)&&null!==s?ro(s):da(r,s=ha(t)?ca:sa.current);var f=t.getDerivedStateFromProps;(c="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==d||h!==s)&&mo(r,i,n,s),to=!1,h=r.memoizedState,i.state=h,so(r,n,i,a);var g=r.memoizedState;l!==d||h!==g||ua.current||to?("function"==typeof f&&(ho(r,t,f,n),g=r.memoizedState),(u=to||go(r,t,u,n,h,g,s))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(n,g,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,g,s)),"function"==typeof i.componentDidUpdate&&(r.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(r.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&h===e.memoizedState||(r.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&h===e.memoizedState||(r.flags|=256),r.memoizedProps=n,r.memoizedState=g),i.props=n,i.state=g,i.context=s,n=u):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&h===e.memoizedState||(r.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&h===e.memoizedState||(r.flags|=256),n=!1)}return Vi(e,r,t,n,o,a)}function Vi(e,r,t,n,a,o){Li(e,r);var i=0!=(64&r.flags);if(!n&&!i)return a&&ya(r,t,!1),$i(e,r,o);n=r.stateNode,xi.current=r;var l=i&&"function"!=typeof t.getDerivedStateFromError?null:n.render();return r.flags|=1,null!==e&&i?(r.child=bo(r,e.child,null,o),r.child=bo(r,null,l,o)):Gi(e,r,l,o),r.memoizedState=n.state,a&&ya(r,t,!0),r.child}function zi(e){var r=e.stateNode;r.pendingContext?ga(0,r.pendingContext,r.pendingContext!==r.context):r.context&&ga(0,r.context,!1),Eo(e,r.containerInfo)}var Ki,Ui,ji,_i={dehydrated:null,retryLane:0};function qi(e,r,t){var n,a=r.pendingProps,o=Go.current,i=!1;return(n=0!=(64&r.flags))||(n=(null===e||null!==e.memoizedState)&&0!=(2&o)),n?(i=!0,r.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(Go,1&o),null===e?(void 0!==a.fallback&&No(r),e=a.children,o=a.fallback,i?(e=Zi(r,e,o,t),r.child.memoizedState={baseLanes:t},r.memoizedState=_i,e):"number"==typeof a.unstable_expectedLoadTime?(e=Zi(r,e,o,t),r.child.memoizedState={baseLanes:t},r.memoizedState=_i,r.lanes=33554432,e):((t=Vs({mode:"visible",children:e},r.mode,t,null)).return=r,r.child=t)):(e.memoizedState,i?(a=function(e,r,t,n,a){var o=r.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:t};return 0==(2&o)&&r.child!==i?((t=r.child).childLanes=0,t.pendingProps=l,null!==(i=t.lastEffect)?(r.firstEffect=t.firstEffect,r.lastEffect=i,i.nextEffect=null):r.firstEffect=r.lastEffect=null):t=Ls(i,l),null!==e?n=Ls(e,n):(n=Ns(n,o,a,null)).flags|=2,n.return=r,t.return=r,t.sibling=n,r.child=t,n}(e,r,a.children,a.fallback,t),i=r.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:t}:{baseLanes:o.baseLanes|t},i.childLanes=e.childLanes&~t,r.memoizedState=_i,a):(t=function(e,r,t,n){var a=e.child;return e=a.sibling,t=Ls(a,{mode:"visible",children:t}),0==(2&r.mode)&&(t.lanes=n),t.return=r,t.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,r.firstEffect=r.lastEffect=e),r.child=t}(e,r,a.children,t),r.memoizedState=null,t))}function Zi(e,r,t,n){var a=e.mode,o=e.child;return r={mode:"hidden",children:r},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=r):o=Vs(r,a,0,null),t=Ns(t,a,n,null),o.return=e,t.return=e,o.sibling=t,e.child=o,t}function Ji(e,r){e.lanes|=r;var t=e.alternate;null!==t&&(t.lanes|=r),Xa(e.return,r)}function Yi(e,r,t,n,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:n,tail:t,tailMode:a,lastEffect:o}:(i.isBackwards=r,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=t,i.tailMode=a,i.lastEffect=o)}function Qi(e,r,t){var n=r.pendingProps,a=n.revealOrder,o=n.tail;if(Gi(e,r,n.children,t),0!=(2&(n=Go.current)))n=1&n|2,r.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=r.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ji(e,t);else if(19===e.tag)Ji(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===r)break e;for(;null===e.sibling;){if(null===e.return||e.return===r)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(ia(Go,n),0==(2&r.mode))r.memoizedState=null;else switch(a){case"forwards":for(t=r.child,a=null;null!==t;)null!==(e=t.alternate)&&null===Fo(e)&&(a=t),t=t.sibling;null===(t=a)?(a=r.child,r.child=null):(a=t.sibling,t.sibling=null),Yi(r,!1,a,t,o,r.lastEffect);break;case"backwards":for(t=null,a=r.child,r.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Fo(e)){r.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Yi(r,!0,t,null,o,r.lastEffect);break;case"together":Yi(r,!1,null,null,void 0,r.lastEffect);break;default:r.memoizedState=null}return r.child}function $i(e,r,t){if(null!==e&&(r.dependencies=e.dependencies),Fl|=r.lanes,0!=(t&r.childLanes)){if(null!==e&&r.child!==e.child)throw Error(i(153));if(null!==r.child){for(t=Ls(e=r.child,e.pendingProps),r.child=t,t.return=r;null!==e.sibling;)e=e.sibling,(t=t.sibling=Ls(e,e.pendingProps)).return=r;t.sibling=null}return r.child}return null}function Xi(e,r){if(!Ho)switch(e.tailMode){case"hidden":r=e.tail;for(var t=null;null!==r;)null!==r.alternate&&(t=r),r=r.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?r||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function el(e,r,t){var n=r.pendingProps;switch(r.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ha(r.type)&&fa(),null;case 3:return Po(),oa(ua),oa(sa),jo(),(n=r.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(zo(r)?r.flags|=4:n.hydrate||(r.flags|=256)),null;case 5:Ro(r);var o=Mo(To.current);if(t=r.type,null!==e&&null!=r.stateNode)Ui(e,r,t,n),e.ref!==r.ref&&(r.flags|=128);else{if(!n){if(null===r.stateNode)throw Error(i(166));return null}if(e=Mo(Bo.current),zo(r)){n=r.stateNode,t=r.type;var l=r.memoizedProps;switch(n[qn]=r,n[Zn]=l,t){case"dialog":Bn("cancel",n),Bn("close",n);break;case"iframe":case"object":case"embed":Bn("load",n);break;case"video":case"audio":for(e=0;e<An.length;e++)Bn(An[e],n);break;case"source":Bn("error",n);break;case"img":case"image":case"link":Bn("error",n),Bn("load",n);break;case"details":Bn("toggle",n);break;case"input":ee(n,l),Bn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Bn("invalid",n);break;case"textarea":se(n,l),Bn("invalid",n)}for(var u in ke(t,l),e=null,l)l.hasOwnProperty(u)&&(o=l[u],"children"===u?"string"==typeof o?n.textContent!==o&&(e=["children",o]):"number"==typeof o&&n.textContent!==""+o&&(e=["children",""+o]):s.hasOwnProperty(u)&&null!=o&&"onScroll"===u&&Bn("scroll",n));switch(t){case"input":Y(n),ne(n,l,!0);break;case"textarea":Y(n),ce(n);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(n.onclick=Wn)}n=e,r.updateQueue=n,null!==n&&(r.flags|=4)}else{switch(u=9===o.nodeType?o:o.ownerDocument,e===de&&(e=he(t)),e===de?"script"===t?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof n.is?e=u.createElement(t,{is:n.is}):(e=u.createElement(t),"select"===t&&(u=e,n.multiple?u.multiple=!0:n.size&&(u.size=n.size))):e=u.createElementNS(e,t),e[qn]=r,e[Zn]=n,Ki(e,r),r.stateNode=e,u=we(t,n),t){case"dialog":Bn("cancel",e),Bn("close",e),o=n;break;case"iframe":case"object":case"embed":Bn("load",e),o=n;break;case"video":case"audio":for(o=0;o<An.length;o++)Bn(An[o],e);o=n;break;case"source":Bn("error",e),o=n;break;case"img":case"image":case"link":Bn("error",e),Bn("load",e),o=n;break;case"details":Bn("toggle",e),o=n;break;case"input":ee(e,n),o=X(e,n),Bn("invalid",e);break;case"option":o=oe(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},o=a({},n,{value:void 0}),Bn("invalid",e);break;case"textarea":se(e,n),o=le(e,n),Bn("invalid",e);break;default:o=n}ke(t,o);var c=o;for(l in c)if(c.hasOwnProperty(l)){var d=c[l];"style"===l?Ae(e,d):"dangerouslySetInnerHTML"===l?null!=(d=d?d.__html:void 0)&&me(e,d):"children"===l?"string"==typeof d?("textarea"!==t||""!==d)&&ye(e,d):"number"==typeof d&&ye(e,""+d):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(s.hasOwnProperty(l)?null!=d&&"onScroll"===l&&Bn("scroll",e):null!=d&&C(e,l,d,u))}switch(t){case"input":Y(e),ne(e,n,!1);break;case"textarea":Y(e),ce(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Z(n.value));break;case"select":e.multiple=!!n.multiple,null!=(l=n.value)?ie(e,!!n.multiple,l,!1):null!=n.defaultValue&&ie(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Wn)}Ln(t,n)&&(r.flags|=4)}null!==r.ref&&(r.flags|=128)}return null;case 6:if(e&&null!=r.stateNode)ji(0,r,e.memoizedProps,n);else{if("string"!=typeof n&&null===r.stateNode)throw Error(i(166));t=Mo(To.current),Mo(Bo.current),zo(r)?(n=r.stateNode,t=r.memoizedProps,n[qn]=r,n.nodeValue!==t&&(r.flags|=4)):((n=(9===t.nodeType?t:t.ownerDocument).createTextNode(n))[qn]=r,r.stateNode=n)}return null;case 13:return oa(Go),n=r.memoizedState,0!=(64&r.flags)?(r.lanes=t,r):(n=null!==n,t=!1,null===e?void 0!==r.memoizedProps.fallback&&zo(r):t=null!==e.memoizedState,n&&!t&&0!=(2&r.mode)&&(null===e&&!0!==r.memoizedProps.unstable_avoidThisFallback||0!=(1&Go.current)?0===xl&&(xl=3):(0!==xl&&3!==xl||(xl=4),null===Dl||0==(134217727&Fl)&&0==(134217727&Wl)||ds(Dl,Ml))),(n||t)&&(r.flags|=4),null);case 4:return Po(),null===e&&Tn(r.stateNode.containerInfo),null;case 10:return $a(r),null;case 17:return ha(r.type)&&fa(),null;case 19:if(oa(Go),null===(n=r.memoizedState))return null;if(l=0!=(64&r.flags),null===(u=n.rendering))if(l)Xi(n,!1);else{if(0!==xl||null!==e&&0!=(64&e.flags))for(e=r.child;null!==e;){if(null!==(u=Fo(e))){for(r.flags|=64,Xi(n,!1),null!==(l=u.updateQueue)&&(r.updateQueue=l,r.flags|=4),null===n.lastEffect&&(r.firstEffect=null),r.lastEffect=n.lastEffect,n=t,t=r.child;null!==t;)e=n,(l=t).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(u=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=u.childLanes,l.lanes=u.lanes,l.child=u.child,l.memoizedProps=u.memoizedProps,l.memoizedState=u.memoizedState,l.updateQueue=u.updateQueue,l.type=u.type,e=u.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return ia(Go,1&Go.current|2),r.child}e=e.sibling}null!==n.tail&&La()>Il&&(r.flags|=64,l=!0,Xi(n,!1),r.lanes=33554432)}else{if(!l)if(null!==(e=Fo(u))){if(r.flags|=64,l=!0,null!==(t=e.updateQueue)&&(r.updateQueue=t,r.flags|=4),Xi(n,!0),null===n.tail&&"hidden"===n.tailMode&&!u.alternate&&!Ho)return null!==(r=r.lastEffect=n.lastEffect)&&(r.nextEffect=null),null}else 2*La()-n.renderingStartTime>Il&&1073741824!==t&&(r.flags|=64,l=!0,Xi(n,!1),r.lanes=33554432);n.isBackwards?(u.sibling=r.child,r.child=u):(null!==(t=n.last)?t.sibling=u:r.child=u,n.last=u)}return null!==n.tail?(t=n.tail,n.rendering=t,n.tail=t.sibling,n.lastEffect=r.lastEffect,n.renderingStartTime=La(),t.sibling=null,r=Go.current,ia(Go,l?1&r|2:1&r),t):null;case 23:case 24:return ps(),null!==e&&null!==e.memoizedState!=(null!==r.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(r.flags|=4),null}throw Error(i(156,r.tag))}function rl(e){switch(e.tag){case 1:ha(e.type)&&fa();var r=e.flags;return 4096&r?(e.flags=-4097&r|64,e):null;case 3:if(Po(),oa(ua),oa(sa),jo(),0!=(64&(r=e.flags)))throw Error(i(285));return e.flags=-4097&r|64,e;case 5:return Ro(e),null;case 13:return oa(Go),4096&(r=e.flags)?(e.flags=-4097&r|64,e):null;case 19:return oa(Go),null;case 4:return Po(),null;case 10:return $a(e),null;case 23:case 24:return ps(),null;default:return null}}function tl(e,r){try{var t="",n=r;do{t+=_(n),n=n.return}while(n);var a=t}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:r,stack:a}}function nl(e,r){try{console.error(r.value)}catch(e){setTimeout((function(){throw e}))}}Ki=function(e,r){for(var t=r.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===r)break;for(;null===t.sibling;){if(null===t.return||t.return===r)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Ui=function(e,r,t,n){var o=e.memoizedProps;if(o!==n){e=r.stateNode,Mo(Bo.current);var i,l=null;switch(t){case"input":o=X(e,o),n=X(e,n),l=[];break;case"option":o=oe(e,o),n=oe(e,n),l=[];break;case"select":o=a({},o,{value:void 0}),n=a({},n,{value:void 0}),l=[];break;case"textarea":o=le(e,o),n=le(e,n),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof n.onClick&&(e.onclick=Wn)}for(d in ke(t,n),t=null,o)if(!n.hasOwnProperty(d)&&o.hasOwnProperty(d)&&null!=o[d])if("style"===d){var u=o[d];for(i in u)u.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(s.hasOwnProperty(d)?l||(l=[]):(l=l||[]).push(d,null));for(d in n){var c=n[d];if(u=null!=o?o[d]:void 0,n.hasOwnProperty(d)&&c!==u&&(null!=c||null!=u))if("style"===d)if(u){for(i in u)!u.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in c)c.hasOwnProperty(i)&&u[i]!==c[i]&&(t||(t={}),t[i]=c[i])}else t||(l||(l=[]),l.push(d,t)),t=c;else"dangerouslySetInnerHTML"===d?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(l=l||[]).push(d,c)):"children"===d?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(d,""+c):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(s.hasOwnProperty(d)?(null!=c&&"onScroll"===d&&Bn("scroll",e),l||u===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===W?c.toString():(l=l||[]).push(d,c))}t&&(l=l||[]).push("style",t);var d=l;(r.updateQueue=d)&&(r.flags|=4)}},ji=function(e,r,t,n){t!==n&&(r.flags|=4)};var al="function"==typeof WeakMap?WeakMap:Map;function ol(e,r,t){(t=oo(-1,t)).tag=3,t.payload={element:null};var n=r.value;return t.callback=function(){Kl||(Kl=!0,Ul=n),nl(0,r)},t}function il(e,r,t){(t=oo(-1,t)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var a=r.value;t.payload=function(){return nl(0,r),n(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(t.callback=function(){"function"!=typeof n&&(null===jl?jl=new Set([this]):jl.add(this),nl(0,r));var e=r.stack;this.componentDidCatch(r.value,{componentStack:null!==e?e:""})}),t}var ll="function"==typeof WeakSet?WeakSet:Set;function sl(e){var r=e.ref;if(null!==r)if("function"==typeof r)try{r(null)}catch(r){Rs(e,r)}else r.current=null}function ul(e,r){switch(r.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&r.flags&&null!==e){var t=e.memoizedProps,n=e.memoizedState;r=(e=r.stateNode).getSnapshotBeforeUpdate(r.elementType===r.type?t:_a(r.type,t),n),e.__reactInternalSnapshotBeforeUpdate=r}return;case 3:return void(256&r.flags&&zn(r.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function cl(e,r,t){switch(t.tag){case 0:case 11:case 15:case 22:if(null!==(r=null!==(r=t.updateQueue)?r.lastEffect:null)){e=r=r.next;do{if(3==(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==r)}if(null!==(r=null!==(r=t.updateQueue)?r.lastEffect:null)){e=r=r.next;do{var a=e;n=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Es(t,e),Ms(t,e)),e=n}while(e!==r)}return;case 1:return e=t.stateNode,4&t.flags&&(null===r?e.componentDidMount():(n=t.elementType===t.type?r.memoizedProps:_a(t.type,r.memoizedProps),e.componentDidUpdate(n,r.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(r=t.updateQueue)&&uo(t,r,e));case 3:if(null!==(r=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:e=t.child.stateNode;break;case 1:e=t.child.stateNode}uo(t,r,e)}return;case 5:return e=t.stateNode,void(null===r&&4&t.flags&&Ln(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&Cr(t)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function dl(e,r){for(var t=e;;){if(5===t.tag){var n=t.stateNode;if(r)"function"==typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=t.stateNode;var a=t.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,n.style.display=Ce("display",a)}}else if(6===t.tag)t.stateNode.nodeValue=r?"":t.memoizedProps;else if((23!==t.tag&&24!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function hl(e,r){if(va&&"function"==typeof va.onCommitFiberUnmount)try{va.onCommitFiberUnmount(Sa,r)}catch(e){}switch(r.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=r.updateQueue)&&null!==(e=e.lastEffect)){var t=e=e.next;do{var n=t,a=n.destroy;if(n=n.tag,void 0!==a)if(0!=(4&n))Es(r,t);else{n=r;try{a()}catch(e){Rs(n,e)}}t=t.next}while(t!==e)}break;case 1:if(sl(r),"function"==typeof(e=r.stateNode).componentWillUnmount)try{e.props=r.memoizedProps,e.state=r.memoizedState,e.componentWillUnmount()}catch(e){Rs(r,e)}break;case 5:sl(r);break;case 4:Sl(e,r)}}function fl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function gl(e){return 5===e.tag||3===e.tag||4===e.tag}function pl(e){e:{for(var r=e.return;null!==r;){if(gl(r))break e;r=r.return}throw Error(i(160))}var t=r;switch(r=t.stateNode,t.tag){case 5:var n=!1;break;case 3:case 4:r=r.containerInfo,n=!0;break;default:throw Error(i(161))}16&t.flags&&(ye(r,""),t.flags&=-17);e:r:for(t=e;;){for(;null===t.sibling;){if(null===t.return||gl(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue r;if(null===t.child||4===t.tag)continue r;t.child.return=t,t=t.child}if(!(2&t.flags)){t=t.stateNode;break e}}n?ml(e,t,r):yl(e,t,r)}function ml(e,r,t){var n=e.tag,a=5===n||6===n;if(a)e=a?e.stateNode:e.stateNode.instance,r?8===t.nodeType?t.parentNode.insertBefore(e,r):t.insertBefore(e,r):(8===t.nodeType?(r=t.parentNode).insertBefore(e,t):(r=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==r.onclick||(r.onclick=Wn));else if(4!==n&&null!==(e=e.child))for(ml(e,r,t),e=e.sibling;null!==e;)ml(e,r,t),e=e.sibling}function yl(e,r,t){var n=e.tag,a=5===n||6===n;if(a)e=a?e.stateNode:e.stateNode.instance,r?t.insertBefore(e,r):t.appendChild(e);else if(4!==n&&null!==(e=e.child))for(yl(e,r,t),e=e.sibling;null!==e;)yl(e,r,t),e=e.sibling}function Sl(e,r){for(var t,n,a=r,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(t=o.stateNode,o.tag){case 5:n=!1;break e;case 3:case 4:t=t.containerInfo,n=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,s=a,u=s;;)if(hl(l,u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===s)break e;for(;null===u.sibling;){if(null===u.return||u.return===s)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}n?(l=t,s=a.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):t.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){t=a.stateNode.containerInfo,n=!0,a.child.return=a,a=a.child;continue}}else if(hl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===r)break;for(;null===a.sibling;){if(null===a.return||a.return===r)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function vl(e,r){switch(r.tag){case 0:case 11:case 14:case 15:case 22:var t=r.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var n=t=t.next;do{3==(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==t)}return;case 1:return;case 5:if(null!=(t=r.stateNode)){n=r.memoizedProps;var a=null!==e?e.memoizedProps:n;e=r.type;var o=r.updateQueue;if(r.updateQueue=null,null!==o){for(t[Zn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&re(t,n),we(e,a),r=we(e,n),a=0;a<o.length;a+=2){var l=o[a],s=o[a+1];"style"===l?Ae(t,s):"dangerouslySetInnerHTML"===l?me(t,s):"children"===l?ye(t,s):C(t,l,s,r)}switch(e){case"input":te(t,n);break;case"textarea":ue(t,n);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!n.multiple,null!=(o=n.value)?ie(t,!!n.multiple,o,!1):e!==!!n.multiple&&(null!=n.defaultValue?ie(t,!!n.multiple,n.defaultValue,!0):ie(t,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===r.stateNode)throw Error(i(162));return void(r.stateNode.nodeValue=r.memoizedProps);case 3:return void((t=r.stateNode).hydrate&&(t.hydrate=!1,Cr(t.containerInfo)));case 12:return;case 13:return null!==r.memoizedState&&(Ll=La(),dl(r.child,!0)),void Cl(r);case 19:return void Cl(r);case 17:return;case 23:case 24:return void dl(r,null!==r.memoizedState)}throw Error(i(163))}function Cl(e){var r=e.updateQueue;if(null!==r){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new ll),r.forEach((function(r){var n=Fs.bind(null,e,r);t.has(r)||(t.add(r),r.then(n,n))}))}}function Al(e,r){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(r=r.memoizedState)&&null===r.dehydrated}var bl=Math.ceil,kl=A.ReactCurrentDispatcher,wl=A.ReactCurrentOwner,Bl=0,Dl=null,Tl=null,Ml=0,El=0,Pl=aa(0),xl=0,Rl=null,Gl=0,Fl=0,Wl=0,Ol=0,Hl=null,Ll=0,Il=1/0;function Nl(){Il=La()+500}var Vl,zl=null,Kl=!1,Ul=null,jl=null,_l=!1,ql=null,Zl=90,Jl=[],Yl=[],Ql=null,$l=0,Xl=null,es=-1,rs=0,ts=0,ns=null,as=!1;function os(){return 0!=(48&Bl)?La():-1!==es?es:es=La()}function is(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ia()?1:2;if(0===rs&&(rs=Gl),0!==ja.transition){0!==ts&&(ts=null!==Hl?Hl.pendingLanes:0),e=rs;var r=4186112&~ts;return 0==(r&=-r)&&0==(r=(e=4186112&~e)&-e)&&(r=8192),r}return e=Ia(),e=Lr(0!=(4&Bl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),rs)}function ls(e,r,t){if(50<$l)throw $l=0,Xl=null,Error(i(185));if(null===(e=ss(e,r)))return null;Vr(e,r,t),e===Dl&&(Wl|=r,4===xl&&ds(e,Ml));var n=Ia();1===r?0!=(8&Bl)&&0==(48&Bl)?hs(e):(us(e,t),0===Bl&&(Nl(),Ka())):(0==(4&Bl)||98!==n&&99!==n||(null===Ql?Ql=new Set([e]):Ql.add(e)),us(e,t)),Hl=e}function ss(e,r){e.lanes|=r;var t=e.alternate;for(null!==t&&(t.lanes|=r),t=e,e=e.return;null!==e;)e.childLanes|=r,null!==(t=e.alternate)&&(t.childLanes|=r),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function us(e,r){for(var t=e.callbackNode,n=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var s=31-zr(l),u=1<<s,c=o[s];if(-1===c){if(0==(u&n)||0!=(u&a)){c=r,Wr(u);var d=Fr;o[s]=10<=d?c+250:6<=d?c+5e3:-1}}else c<=r&&(e.expiredLanes|=u);l&=~u}if(n=Or(e,e===Dl?Ml:0),r=Fr,0===n)null!==t&&(t!==Ra&&ba(t),e.callbackNode=null,e.callbackPriority=0);else{if(null!==t){if(e.callbackPriority===r)return;t!==Ra&&ba(t)}15===r?(t=hs.bind(null,e),null===Fa?(Fa=[t],Wa=Aa(Ta,Ua)):Fa.push(t),t=Ra):t=14===r?za(99,hs.bind(null,e)):za(t=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(r),cs.bind(null,e)),e.callbackPriority=r,e.callbackNode=t}}function cs(e){if(es=-1,ts=rs=0,0!=(48&Bl))throw Error(i(327));var r=e.callbackNode;if(Ts()&&e.callbackNode!==r)return null;var t=Or(e,e===Dl?Ml:0);if(0===t)return null;var n=t,a=Bl;Bl|=16;var o=Ss();for(Dl===e&&Ml===n||(Nl(),ms(e,n));;)try{As();break}catch(r){ys(e,r)}if(Qa(),kl.current=o,Bl=a,null!==Tl?n=0:(Dl=null,Ml=0,n=xl),0!=(Gl&Wl))ms(e,0);else if(0!==n){if(2===n&&(Bl|=64,e.hydrate&&(e.hydrate=!1,zn(e.containerInfo)),0!==(t=Hr(e))&&(n=vs(e,t))),1===n)throw r=Rl,ms(e,0),ds(e,t),us(e,La()),r;switch(e.finishedWork=e.current.alternate,e.finishedLanes=t,n){case 0:case 1:throw Error(i(345));case 2:ws(e);break;case 3:if(ds(e,t),(62914560&t)===t&&10<(n=Ll+500-La())){if(0!==Or(e,0))break;if(((a=e.suspendedLanes)&t)!==t){os(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Nn(ws.bind(null,e),n);break}ws(e);break;case 4:if(ds(e,t),(4186112&t)===t)break;for(n=e.eventTimes,a=-1;0<t;){var l=31-zr(t);o=1<<l,(l=n[l])>a&&(a=l),t&=~o}if(t=a,10<(t=(120>(t=La()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*bl(t/1960))-t)){e.timeoutHandle=Nn(ws.bind(null,e),t);break}ws(e);break;case 5:ws(e);break;default:throw Error(i(329))}}return us(e,La()),e.callbackNode===r?cs.bind(null,e):null}function ds(e,r){for(r&=~Ol,r&=~Wl,e.suspendedLanes|=r,e.pingedLanes&=~r,e=e.expirationTimes;0<r;){var t=31-zr(r),n=1<<t;e[t]=-1,r&=~n}}function hs(e){if(0!=(48&Bl))throw Error(i(327));if(Ts(),e===Dl&&0!=(e.expiredLanes&Ml)){var r=Ml,t=vs(e,r);0!=(Gl&Wl)&&(t=vs(e,r=Or(e,r)))}else t=vs(e,r=Or(e,0));if(0!==e.tag&&2===t&&(Bl|=64,e.hydrate&&(e.hydrate=!1,zn(e.containerInfo)),0!==(r=Hr(e))&&(t=vs(e,r))),1===t)throw t=Rl,ms(e,0),ds(e,r),us(e,La()),t;return e.finishedWork=e.current.alternate,e.finishedLanes=r,ws(e),us(e,La()),null}function fs(e,r){var t=Bl;Bl|=1;try{return e(r)}finally{0===(Bl=t)&&(Nl(),Ka())}}function gs(e,r){ia(Pl,El),El|=r,Gl|=r}function ps(){El=Pl.current,oa(Pl)}function ms(e,r){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,Vn(t)),null!==Tl)for(t=Tl.return;null!==t;){var n=t;switch(n.tag){case 1:null!=(n=n.type.childContextTypes)&&fa();break;case 3:Po(),oa(ua),oa(sa),jo();break;case 5:Ro(n);break;case 4:Po();break;case 13:case 19:oa(Go);break;case 10:$a(n);break;case 23:case 24:ps()}t=t.return}Dl=e,Tl=Ls(e.current,null),Ml=El=Gl=r,xl=0,Rl=null,Ol=Wl=Fl=0}function ys(e,r){for(;;){var t=Tl;try{if(Qa(),_o.current=Ti,$o){for(var n=Jo.memoizedState;null!==n;){var a=n.queue;null!==a&&(a.pending=null),n=n.next}$o=!1}if(Zo=0,Qo=Yo=Jo=null,Xo=!1,wl.current=null,null===t||null===t.return){xl=1,Rl=r,Tl=null;break}e:{var o=e,i=t.return,l=t,s=r;if(r=Ml,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var u=s;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var d=0!=(1&Go.current),h=i;do{var f;if(f=13===h.tag){var g=h.memoizedState;if(null!==g)f=null!==g.dehydrated;else{var p=h.memoizedProps;f=void 0!==p.fallback&&(!0!==p.unstable_avoidThisFallback||!d)}}if(f){var m=h.updateQueue;if(null===m){var y=new Set;y.add(u),h.updateQueue=y}else m.add(u);if(0==(2&h.mode)){if(h.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var S=oo(-1,1);S.tag=2,io(l,S)}l.lanes|=1;break e}s=void 0,l=r;var v=o.pingCache;if(null===v?(v=o.pingCache=new al,s=new Set,v.set(u,s)):void 0===(s=v.get(u))&&(s=new Set,v.set(u,s)),!s.has(l)){s.add(l);var C=Gs.bind(null,o,u,l);u.then(C,C)}h.flags|=4096,h.lanes=r;break e}h=h.return}while(null!==h);s=Error((q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==xl&&(xl=2),s=tl(s,l),h=i;do{switch(h.tag){case 3:o=s,h.flags|=4096,r&=-r,h.lanes|=r,lo(h,ol(0,o,r));break e;case 1:o=s;var A=h.type,b=h.stateNode;if(0==(64&h.flags)&&("function"==typeof A.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===jl||!jl.has(b)))){h.flags|=4096,r&=-r,h.lanes|=r,lo(h,il(h,o,r));break e}}h=h.return}while(null!==h)}ks(t)}catch(e){r=e,Tl===t&&null!==t&&(Tl=t=t.return);continue}break}}function Ss(){var e=kl.current;return kl.current=Ti,null===e?Ti:e}function vs(e,r){var t=Bl;Bl|=16;var n=Ss();for(Dl===e&&Ml===r||ms(e,r);;)try{Cs();break}catch(r){ys(e,r)}if(Qa(),Bl=t,kl.current=n,null!==Tl)throw Error(i(261));return Dl=null,Ml=0,xl}function Cs(){for(;null!==Tl;)bs(Tl)}function As(){for(;null!==Tl&&!ka();)bs(Tl)}function bs(e){var r=Vl(e.alternate,e,El);e.memoizedProps=e.pendingProps,null===r?ks(e):Tl=r,wl.current=null}function ks(e){var r=e;do{var t=r.alternate;if(e=r.return,0==(2048&r.flags)){if(null!==(t=el(t,r,El)))return void(Tl=t);if(24!==(t=r).tag&&23!==t.tag||null===t.memoizedState||0!=(1073741824&El)||0==(4&t.mode)){for(var n=0,a=t.child;null!==a;)n|=a.lanes|a.childLanes,a=a.sibling;t.childLanes=n}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=r.firstEffect),null!==r.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=r.firstEffect),e.lastEffect=r.lastEffect),1<r.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=r:e.firstEffect=r,e.lastEffect=r))}else{if(null!==(t=rl(r)))return t.flags&=2047,void(Tl=t);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(r=r.sibling))return void(Tl=r);Tl=r=e}while(null!==r);0===xl&&(xl=5)}function ws(e){var r=Ia();return Va(99,Bs.bind(null,e,r)),null}function Bs(e,r){do{Ts()}while(null!==ql);if(0!=(48&Bl))throw Error(i(327));var t=e.finishedWork;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(i(177));e.callbackNode=null;var n=t.lanes|t.childLanes,a=n,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,s=e.expirationTimes;0<o;){var u=31-zr(o),c=1<<u;a[u]=0,l[u]=-1,s[u]=-1,o&=~c}if(null!==Ql&&0==(24&n)&&Ql.has(e)&&Ql.delete(e),e===Dl&&(Tl=Dl=null,Ml=0),1<t.flags?null!==t.lastEffect?(t.lastEffect.nextEffect=t,n=t.firstEffect):n=t:n=t.firstEffect,null!==n){if(a=Bl,Bl|=32,wl.current=null,On=qr,hn(l=dn())){if("selectionStart"in l)s={start:l.selectionStart,end:l.selectionEnd};else e:if(s=(s=l.ownerDocument)&&s.defaultView||window,(c=s.getSelection&&s.getSelection())&&0!==c.rangeCount){s=c.anchorNode,o=c.anchorOffset,u=c.focusNode,c=c.focusOffset;try{s.nodeType,u.nodeType}catch(e){s=null;break e}var d=0,h=-1,f=-1,g=0,p=0,m=l,y=null;r:for(;;){for(var S;m!==s||0!==o&&3!==m.nodeType||(h=d+o),m!==u||0!==c&&3!==m.nodeType||(f=d+c),3===m.nodeType&&(d+=m.nodeValue.length),null!==(S=m.firstChild);)y=m,m=S;for(;;){if(m===l)break r;if(y===s&&++g===o&&(h=d),y===u&&++p===c&&(f=d),null!==(S=m.nextSibling))break;y=(m=y).parentNode}m=S}s=-1===h||-1===f?null:{start:h,end:f}}else s=null;s=s||{start:0,end:0}}else s=null;Hn={focusedElem:l,selectionRange:s},qr=!1,ns=null,as=!1,zl=n;do{try{Ds()}catch(e){if(null===zl)throw Error(i(330));Rs(zl,e),zl=zl.nextEffect}}while(null!==zl);ns=null,zl=n;do{try{for(l=e;null!==zl;){var v=zl.flags;if(16&v&&ye(zl.stateNode,""),128&v){var C=zl.alternate;if(null!==C){var A=C.ref;null!==A&&("function"==typeof A?A(null):A.current=null)}}switch(1038&v){case 2:pl(zl),zl.flags&=-3;break;case 6:pl(zl),zl.flags&=-3,vl(zl.alternate,zl);break;case 1024:zl.flags&=-1025;break;case 1028:zl.flags&=-1025,vl(zl.alternate,zl);break;case 4:vl(zl.alternate,zl);break;case 8:Sl(l,s=zl);var b=s.alternate;fl(s),null!==b&&fl(b)}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(i(330));Rs(zl,e),zl=zl.nextEffect}}while(null!==zl);if(A=Hn,C=dn(),v=A.focusedElem,l=A.selectionRange,C!==v&&v&&v.ownerDocument&&cn(v.ownerDocument.documentElement,v)){null!==l&&hn(v)&&(C=l.start,void 0===(A=l.end)&&(A=C),"selectionStart"in v?(v.selectionStart=C,v.selectionEnd=Math.min(A,v.value.length)):(A=(C=v.ownerDocument||document)&&C.defaultView||window).getSelection&&(A=A.getSelection(),s=v.textContent.length,b=Math.min(l.start,s),l=void 0===l.end?b:Math.min(l.end,s),!A.extend&&b>l&&(s=l,l=b,b=s),s=un(v,b),o=un(v,l),s&&o&&(1!==A.rangeCount||A.anchorNode!==s.node||A.anchorOffset!==s.offset||A.focusNode!==o.node||A.focusOffset!==o.offset)&&((C=C.createRange()).setStart(s.node,s.offset),A.removeAllRanges(),b>l?(A.addRange(C),A.extend(o.node,o.offset)):(C.setEnd(o.node,o.offset),A.addRange(C))))),C=[];for(A=v;A=A.parentNode;)1===A.nodeType&&C.push({element:A,left:A.scrollLeft,top:A.scrollTop});for("function"==typeof v.focus&&v.focus(),v=0;v<C.length;v++)(A=C[v]).element.scrollLeft=A.left,A.element.scrollTop=A.top}qr=!!On,Hn=On=null,e.current=t,zl=n;do{try{for(v=e;null!==zl;){var k=zl.flags;if(36&k&&cl(v,zl.alternate,zl),128&k){C=void 0;var w=zl.ref;if(null!==w){var B=zl.stateNode;switch(zl.tag){case 5:C=B;break;default:C=B}"function"==typeof w?w(C):w.current=C}}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(i(330));Rs(zl,e),zl=zl.nextEffect}}while(null!==zl);zl=null,Ga(),Bl=a}else e.current=t;if(_l)_l=!1,ql=e,Zl=r;else for(zl=n;null!==zl;)r=zl.nextEffect,zl.nextEffect=null,8&zl.flags&&((k=zl).sibling=null,k.stateNode=null),zl=r;if(0===(n=e.pendingLanes)&&(jl=null),1===n?e===Xl?$l++:($l=0,Xl=e):$l=0,t=t.stateNode,va&&"function"==typeof va.onCommitFiberRoot)try{va.onCommitFiberRoot(Sa,t,void 0,64==(64&t.current.flags))}catch(e){}if(us(e,La()),Kl)throw Kl=!1,e=Ul,Ul=null,e;return 0!=(8&Bl)||Ka(),null}function Ds(){for(;null!==zl;){var e=zl.alternate;as||null===ns||(0!=(8&zl.flags)?$e(zl,ns)&&(as=!0):13===zl.tag&&Al(e,zl)&&$e(zl,ns)&&(as=!0));var r=zl.flags;0!=(256&r)&&ul(e,zl),0==(512&r)||_l||(_l=!0,za(97,(function(){return Ts(),null}))),zl=zl.nextEffect}}function Ts(){if(90!==Zl){var e=97<Zl?97:Zl;return Zl=90,Va(e,Ps)}return!1}function Ms(e,r){Jl.push(r,e),_l||(_l=!0,za(97,(function(){return Ts(),null})))}function Es(e,r){Yl.push(r,e),_l||(_l=!0,za(97,(function(){return Ts(),null})))}function Ps(){if(null===ql)return!1;var e=ql;if(ql=null,0!=(48&Bl))throw Error(i(331));var r=Bl;Bl|=32;var t=Yl;Yl=[];for(var n=0;n<t.length;n+=2){var a=t[n],o=t[n+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));Rs(o,e)}}for(t=Jl,Jl=[],n=0;n<t.length;n+=2){a=t[n],o=t[n+1];try{var s=a.create;a.destroy=s()}catch(e){if(null===o)throw Error(i(330));Rs(o,e)}}for(s=e.current.firstEffect;null!==s;)e=s.nextEffect,s.nextEffect=null,8&s.flags&&(s.sibling=null,s.stateNode=null),s=e;return Bl=r,Ka(),!0}function xs(e,r,t){io(e,r=ol(0,r=tl(t,r),1)),r=os(),null!==(e=ss(e,1))&&(Vr(e,1,r),us(e,r))}function Rs(e,r){if(3===e.tag)xs(e,e,r);else for(var t=e.return;null!==t;){if(3===t.tag){xs(t,e,r);break}if(1===t.tag){var n=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===jl||!jl.has(n))){var a=il(t,e=tl(r,e),1);if(io(t,a),a=os(),null!==(t=ss(t,1)))Vr(t,1,a),us(t,a);else if("function"==typeof n.componentDidCatch&&(null===jl||!jl.has(n)))try{n.componentDidCatch(r,e)}catch(e){}break}}t=t.return}}function Gs(e,r,t){var n=e.pingCache;null!==n&&n.delete(r),r=os(),e.pingedLanes|=e.suspendedLanes&t,Dl===e&&(Ml&t)===t&&(4===xl||3===xl&&(62914560&Ml)===Ml&&500>La()-Ll?ms(e,0):Ol|=t),us(e,r)}function Fs(e,r){var t=e.stateNode;null!==t&&t.delete(r),0==(r=0)&&(0==(2&(r=e.mode))?r=1:0==(4&r)?r=99===Ia()?1:2:(0===rs&&(rs=Gl),0===(r=Ir(62914560&~rs))&&(r=4194304))),t=os(),null!==(e=ss(e,r))&&(Vr(e,r,t),us(e,t))}function Ws(e,r,t,n){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Os(e,r,t,n){return new Ws(e,r,t,n)}function Hs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ls(e,r){var t=e.alternate;return null===t?((t=Os(e.tag,r,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=r,t.type=e.type,t.flags=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,r=e.dependencies,t.dependencies=null===r?null:{lanes:r.lanes,firstContext:r.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Is(e,r,t,n,a,o){var l=2;if(n=e,"function"==typeof e)Hs(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case w:return Ns(t.children,a,o,r);case O:l=8,a|=16;break;case B:l=8,a|=1;break;case D:return(e=Os(12,t,r,8|a)).elementType=D,e.type=D,e.lanes=o,e;case P:return(e=Os(13,t,r,a)).type=P,e.elementType=P,e.lanes=o,e;case x:return(e=Os(19,t,r,a)).elementType=x,e.lanes=o,e;case H:return Vs(t,a,o,r);case L:return(e=Os(24,t,r,a)).elementType=L,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case T:l=10;break e;case M:l=9;break e;case E:l=11;break e;case R:l=14;break e;case G:l=16,n=null;break e;case F:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(r=Os(l,t,r,a)).elementType=e,r.type=n,r.lanes=o,r}function Ns(e,r,t,n){return(e=Os(7,e,n,r)).lanes=t,e}function Vs(e,r,t,n){return(e=Os(23,e,n,r)).elementType=H,e.lanes=t,e}function zs(e,r,t){return(e=Os(6,e,null,r)).lanes=t,e}function Ks(e,r,t){return(r=Os(4,null!==e.children?e.children:[],e.key,r)).lanes=t,r.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},r}function Us(e,r,t){this.tag=r,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Nr(0),this.expirationTimes=Nr(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Nr(0),this.mutableSourceEagerHydrationData=null}function js(e,r,t){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==n?null:""+n,children:e,containerInfo:r,implementation:t}}function _s(e,r,t,n){var a=r.current,o=os(),l=is(a);e:if(t){r:{if(Je(t=t._reactInternals)!==t||1!==t.tag)throw Error(i(170));var s=t;do{switch(s.tag){case 3:s=s.stateNode.context;break r;case 1:if(ha(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break r}}s=s.return}while(null!==s);throw Error(i(171))}if(1===t.tag){var u=t.type;if(ha(u)){t=pa(t,u,s);break e}}t=s}else t=la;return null===r.context?r.context=t:r.pendingContext=t,(r=oo(o,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(r.callback=n),io(a,r),ls(a,l,o),l}function qs(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Zs(e,r){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<r?t:r}}function Js(e,r){Zs(e,r),(e=e.alternate)&&Zs(e,r)}function Ys(e,r,t){var n=null!=t&&null!=t.hydrationOptions&&t.hydrationOptions.mutableSources||null;if(t=new Us(e,r,null!=t&&!0===t.hydrate),r=Os(3,null,null,2===r?7:1===r?3:0),t.current=r,r.stateNode=t,no(r),e[Jn]=t.current,Tn(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var a=(r=n[e])._getVersion;a=a(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,a]:t.mutableSourceEagerHydrationData.push(r,a)}this._internalRoot=t}function Qs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $s(e,r,t,n,a){var o=t._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=qs(i);l.call(e)}}_s(r,i,e,a)}else{if(o=t._reactRootContainer=function(e,r){if(r||(r=!(!(r=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==r.nodeType||!r.hasAttribute("data-reactroot"))),!r)for(var t;t=e.lastChild;)e.removeChild(t);return new Ys(e,0,r?{hydrate:!0}:void 0)}(t,n),i=o._internalRoot,"function"==typeof a){var s=a;a=function(){var e=qs(i);s.call(e)}}!function(e,r){var t=Bl;Bl&=-2,Bl|=8;try{e(r)}finally{0===(Bl=t)&&(Nl(),Ka())}}((function(){_s(r,i,e,a)}))}return qs(i)}Vl=function(e,r,t){var n=r.lanes;if(null!==e)if(e.memoizedProps!==r.pendingProps||ua.current)Ri=!0;else{if(0==(t&n)){switch(Ri=!1,r.tag){case 3:zi(r),Ko();break;case 5:xo(r);break;case 1:ha(r.type)&&ma(r);break;case 4:Eo(r,r.stateNode.containerInfo);break;case 10:n=r.memoizedProps.value;var a=r.type._context;ia(qa,a._currentValue),a._currentValue=n;break;case 13:if(null!==r.memoizedState)return 0!=(t&r.child.childLanes)?qi(e,r,t):(ia(Go,1&Go.current),null!==(r=$i(e,r,t))?r.sibling:null);ia(Go,1&Go.current);break;case 19:if(n=0!=(t&r.childLanes),0!=(64&e.flags)){if(n)return Qi(e,r,t);r.flags|=64}if(null!==(a=r.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(Go,Go.current),n)break;return null;case 23:case 24:return r.lanes=0,Hi(e,r,t)}return $i(e,r,t)}Ri=0!=(16384&e.flags)}else Ri=!1;switch(r.lanes=0,r.tag){case 2:if(n=r.type,null!==e&&(e.alternate=null,r.alternate=null,r.flags|=2),e=r.pendingProps,a=da(r,sa.current),eo(r,t),a=ti(null,r,n,e,a,t),r.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(r.tag=1,r.memoizedState=null,r.updateQueue=null,ha(n)){var o=!0;ma(r)}else o=!1;r.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,no(r);var l=n.getDerivedStateFromProps;"function"==typeof l&&ho(r,n,l,e),a.updater=fo,r.stateNode=a,a._reactInternals=r,yo(r,n,e,t),r=Vi(null,r,n,!0,o,t)}else r.tag=0,Gi(null,r,a,t),r=r.child;return r;case 16:a=r.elementType;e:{switch(null!==e&&(e.alternate=null,r.alternate=null,r.flags|=2),e=r.pendingProps,a=(o=a._init)(a._payload),r.type=a,o=r.tag=function(e){if("function"==typeof e)return Hs(e)?1:0;if(null!=e){if((e=e.$$typeof)===E)return 11;if(e===R)return 14}return 2}(a),e=_a(a,e),o){case 0:r=Ii(null,r,a,e,t);break e;case 1:r=Ni(null,r,a,e,t);break e;case 11:r=Fi(null,r,a,e,t);break e;case 14:r=Wi(null,r,a,_a(a.type,e),n,t);break e}throw Error(i(306,a,""))}return r;case 0:return n=r.type,a=r.pendingProps,Ii(e,r,n,a=r.elementType===n?a:_a(n,a),t);case 1:return n=r.type,a=r.pendingProps,Ni(e,r,n,a=r.elementType===n?a:_a(n,a),t);case 3:if(zi(r),n=r.updateQueue,null===e||null===n)throw Error(i(282));if(n=r.pendingProps,a=null!==(a=r.memoizedState)?a.element:null,ao(e,r),so(r,n,null,t),(n=r.memoizedState.element)===a)Ko(),r=$i(e,r,t);else{if((o=(a=r.stateNode).hydrate)&&(Oo=Kn(r.stateNode.containerInfo.firstChild),Wo=r,o=Ho=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Uo.push(o);for(t=ko(r,null,n,t),r.child=t;t;)t.flags=-3&t.flags|1024,t=t.sibling}else Gi(e,r,n,t),Ko();r=r.child}return r;case 5:return xo(r),null===e&&No(r),n=r.type,a=r.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,In(n,a)?l=null:null!==o&&In(n,o)&&(r.flags|=16),Li(e,r),Gi(e,r,l,t),r.child;case 6:return null===e&&No(r),null;case 13:return qi(e,r,t);case 4:return Eo(r,r.stateNode.containerInfo),n=r.pendingProps,null===e?r.child=bo(r,null,n,t):Gi(e,r,n,t),r.child;case 11:return n=r.type,a=r.pendingProps,Fi(e,r,n,a=r.elementType===n?a:_a(n,a),t);case 7:return Gi(e,r,r.pendingProps,t),r.child;case 8:case 12:return Gi(e,r,r.pendingProps.children,t),r.child;case 10:e:{n=r.type._context,a=r.pendingProps,l=r.memoizedProps,o=a.value;var s=r.type._context;if(ia(qa,s._currentValue),s._currentValue=o,null!==l)if(s=l.value,0==(o=an(s,o)?0:0|("function"==typeof n._calculateChangedBits?n._calculateChangedBits(s,o):1073741823))){if(l.children===a.children&&!ua.current){r=$i(e,r,t);break e}}else for(null!==(s=r.child)&&(s.return=r);null!==s;){var u=s.dependencies;if(null!==u){l=s.child;for(var c=u.firstContext;null!==c;){if(c.context===n&&0!=(c.observedBits&o)){1===s.tag&&((c=oo(-1,t&-t)).tag=2,io(s,c)),s.lanes|=t,null!==(c=s.alternate)&&(c.lanes|=t),Xa(s.return,t),u.lanes|=t;break}c=c.next}}else l=10===s.tag&&s.type===r.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===r){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}Gi(e,r,a.children,t),r=r.child}return r;case 9:return a=r.type,n=(o=r.pendingProps).children,eo(r,t),n=n(a=ro(a,o.unstable_observedBits)),r.flags|=1,Gi(e,r,n,t),r.child;case 14:return o=_a(a=r.type,r.pendingProps),Wi(e,r,a,o=_a(a.type,o),n,t);case 15:return Oi(e,r,r.type,r.pendingProps,n,t);case 17:return n=r.type,a=r.pendingProps,a=r.elementType===n?a:_a(n,a),null!==e&&(e.alternate=null,r.alternate=null,r.flags|=2),r.tag=1,ha(n)?(e=!0,ma(r)):e=!1,eo(r,t),po(r,n,a),yo(r,n,a,t),Vi(null,r,n,!0,e,t);case 19:return Qi(e,r,t);case 23:case 24:return Hi(e,r,t)}throw Error(i(156,r.tag))},Ys.prototype.render=function(e){_s(e,this._internalRoot,null,null)},Ys.prototype.unmount=function(){var e=this._internalRoot,r=e.containerInfo;_s(null,e,null,(function(){r[Jn]=null}))},Xe=function(e){13===e.tag&&(ls(e,4,os()),Js(e,4))},er=function(e){13===e.tag&&(ls(e,67108864,os()),Js(e,67108864))},rr=function(e){if(13===e.tag){var r=os(),t=is(e);ls(e,t,r),Js(e,t)}},tr=function(e,r){return r()},De=function(e,r,t){switch(r){case"input":if(te(e,t),r=t.name,"radio"===t.type&&null!=r){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+r)+'][type="radio"]'),r=0;r<t.length;r++){var n=t[r];if(n!==e&&n.form===e.form){var a=ea(n);if(!a)throw Error(i(90));Q(n),te(n,a)}}}break;case"textarea":ue(e,t);break;case"select":null!=(r=t.value)&&ie(e,!!t.multiple,r,!1)}},Re=fs,Ge=function(e,r,t,n,a){var o=Bl;Bl|=4;try{return Va(98,e.bind(null,r,t,n,a))}finally{0===(Bl=o)&&(Nl(),Ka())}},Fe=function(){0==(49&Bl)&&(function(){if(null!==Ql){var e=Ql;Ql=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,us(e,La())}))}Ka()}(),Ts())},We=function(e,r){var t=Bl;Bl|=2;try{return e(r)}finally{0===(Bl=t)&&(Nl(),Ka())}};var Xs={findFiberByHostInstance:Qn,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},eu={bundleType:Xs.bundleType,version:Xs.version,rendererPackageName:Xs.rendererPackageName,rendererConfig:Xs.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:A.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var r=e.alternate;if(!r){if(null===(r=Je(e)))throw Error(i(188));return r!==e?null:e}for(var t=e,n=r;;){var a=t.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(n=a.return)){t=n;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===t)return Qe(a),e;if(o===n)return Qe(a),r;o=o.sibling}throw Error(i(188))}if(t.return!==n.return)t=a,n=o;else{for(var l=!1,s=a.child;s;){if(s===t){l=!0,t=a,n=o;break}if(s===n){l=!0,n=a,t=o;break}s=s.sibling}if(!l){for(s=o.child;s;){if(s===t){l=!0,t=o,n=a;break}if(s===n){l=!0,n=o,t=a;break}s=s.sibling}if(!l)throw Error(i(189))}}if(t.alternate!==n)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:r}(e)))return null;for(var r=e;;){if(5===r.tag||6===r.tag)return r;if(r.child)r.child.return=r,r=r.child;else{if(r===e)break;for(;!r.sibling;){if(!r.return||r.return===e)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Xs.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{Sa=ru.inject(eu),va=ru}catch(pe){}}r.createPortal=function(e,r){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qs(r))throw Error(i(200));return js(e,r,null,t)},r.render=function(e,r,t){if(!Qs(r))throw Error(i(200));return $s(null,e,r,!1,t)},r.unstable_batchedUpdates=fs},3935:(e,r,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(4448)},9921:(e,r)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,n=t?Symbol.for("react.element"):60103,a=t?Symbol.for("react.portal"):60106,o=t?Symbol.for("react.fragment"):60107,i=t?Symbol.for("react.strict_mode"):60108,l=t?Symbol.for("react.profiler"):60114,s=t?Symbol.for("react.provider"):60109,u=t?Symbol.for("react.context"):60110,c=t?Symbol.for("react.async_mode"):60111,d=t?Symbol.for("react.concurrent_mode"):60111,h=t?Symbol.for("react.forward_ref"):60112,f=t?Symbol.for("react.suspense"):60113,g=t?Symbol.for("react.suspense_list"):60120,p=t?Symbol.for("react.memo"):60115,m=t?Symbol.for("react.lazy"):60116,y=t?Symbol.for("react.block"):60121,S=t?Symbol.for("react.fundamental"):60117,v=t?Symbol.for("react.responder"):60118,C=t?Symbol.for("react.scope"):60119;function A(e){if("object"==typeof e&&null!==e){var r=e.$$typeof;switch(r){case n:switch(e=e.type){case c:case d:case o:case l:case i:case f:return e;default:switch(e=e&&e.$$typeof){case u:case h:case m:case p:case s:return e;default:return r}}case a:return r}}}function b(e){return A(e)===d}r.AsyncMode=c,r.ConcurrentMode=d,r.ContextConsumer=u,r.ContextProvider=s,r.Element=n,r.ForwardRef=h,r.Fragment=o,r.Lazy=m,r.Memo=p,r.Portal=a,r.Profiler=l,r.StrictMode=i,r.Suspense=f,r.isAsyncMode=function(e){return b(e)||A(e)===c},r.isConcurrentMode=b,r.isContextConsumer=function(e){return A(e)===u},r.isContextProvider=function(e){return A(e)===s},r.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===n},r.isForwardRef=function(e){return A(e)===h},r.isFragment=function(e){return A(e)===o},r.isLazy=function(e){return A(e)===m},r.isMemo=function(e){return A(e)===p},r.isPortal=function(e){return A(e)===a},r.isProfiler=function(e){return A(e)===l},r.isStrictMode=function(e){return A(e)===i},r.isSuspense=function(e){return A(e)===f},r.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===d||e===l||e===i||e===f||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===p||e.$$typeof===s||e.$$typeof===u||e.$$typeof===h||e.$$typeof===S||e.$$typeof===v||e.$$typeof===C||e.$$typeof===y)},r.typeOf=A},9864:(e,r,t)=>{"use strict";e.exports=t(9921)},213:(e,r,t)=>{"use strict";var n,a=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=function(){function e(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(r,t,n){return t&&e(r.prototype,t),n&&e(r,n),r}}(),l=(n=t(7294))&&n.__esModule?n:{default:n},s=function(e){function r(e){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,r);var t=function(e,r){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!r||"object"!=typeof r&&"function"!=typeof r?e:r}(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));t.reCalculateColumnCount=t.reCalculateColumnCount.bind(t),t.reCalculateColumnCountDebounce=t.reCalculateColumnCountDebounce.bind(t);var n;return n=t.props.breakpointCols&&t.props.breakpointCols.default?t.props.breakpointCols.default:parseInt(t.props.breakpointCols)||2,t.state={columnCount:n},t}return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function, not "+typeof r);e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),r&&(Object.setPrototypeOf?Object.setPrototypeOf(e,r):e.__proto__=r)}(r,e),i(r,[{key:"componentDidMount",value:function(){this.reCalculateColumnCount(),window&&window.addEventListener("resize",this.reCalculateColumnCountDebounce)}},{key:"componentDidUpdate",value:function(){this.reCalculateColumnCount()}},{key:"componentWillUnmount",value:function(){window&&window.removeEventListener("resize",this.reCalculateColumnCountDebounce)}},{key:"reCalculateColumnCountDebounce",value:function(){var e=this;window&&window.requestAnimationFrame?(window.cancelAnimationFrame&&window.cancelAnimationFrame(this._lastRecalculateAnimationFrame),this._lastRecalculateAnimationFrame=window.requestAnimationFrame((function(){e.reCalculateColumnCount()}))):this.reCalculateColumnCount()}},{key:"reCalculateColumnCount",value:function(){var e=window&&window.innerWidth||1/0,r=this.props.breakpointCols;"object"!==(void 0===r?"undefined":o(r))&&(r={default:parseInt(r)||2});var t=1/0,n=r.default||2;for(var a in r){var i=parseInt(a);i>0&&e<=i&&i<t&&(t=i,n=r[a])}n=Math.max(1,parseInt(n)||1),this.state.columnCount!==n&&this.setState({columnCount:n})}},{key:"itemsInColumns",value:function(){for(var e=this.state.columnCount,r=new Array(e),t=[].concat(this.props.children||[]),n=0;n<t.length;n++){var a=n%e;r[a]||(r[a]=[]),r[a].push(t[n])}return r}},{key:"renderColumns",value:function(){var e=this.props,r=e.column,t=e.columnAttrs,n=void 0===t?{}:t,o=e.columnClassName,i=this.itemsInColumns(),s=100/i.length+"%",u=o;"string"!=typeof u&&(this.logDeprecated('The property "columnClassName" requires a string'),void 0===u&&(u="my-masonry-grid_column"));var c=a({},r,n,{style:a({},n.style,{width:s}),className:u});return i.map((function(e,r){return l.default.createElement("div",a({},c,{key:r}),e)}))}},{key:"logDeprecated",value:function(e){console.error("[Masonry]",e)}},{key:"render",value:function(){var e=this.props,r=(e.children,e.breakpointCols,e.columnClassName,e.columnAttrs,e.column,e.className),t=function(e,r){var t={};for(var n in e)r.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}(e,["children","breakpointCols","columnClassName","columnAttrs","column","className"]),n=r;return"string"!=typeof r&&(this.logDeprecated('The property "className" requires a string'),void 0===r&&(n="my-masonry-grid")),l.default.createElement("div",a({},t,{className:n}),this.renderColumns())}}]),r}(l.default.Component);s.defaultProps={breakpointCols:void 0,className:void 0,columnClassName:void 0,children:void 0,columnAttrs:void 0,column:void 0},r.Z=s},6585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},9658:(e,r,t)=>{var n=t(6585);e.exports=function e(r,t,a){return n(t)||(a=t||a,t=[]),a=a||{},r instanceof RegExp?function(e,r){var t=e.source.match(/\((?!\?)/g);if(t)for(var n=0;n<t.length;n++)r.push({name:n,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,r)}(r,t):n(r)?function(r,t,n){for(var a=[],o=0;o<r.length;o++)a.push(e(r[o],t,n).source);return c(new RegExp("(?:"+a.join("|")+")",d(n)),t)}(r,t,a):function(e,r,t){return h(o(e,t),r,t)}(r,t,a)},e.exports.parse=o,e.exports.compile=function(e,r){return l(o(e,r),r)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=h;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,r){for(var t,n=[],o=0,i=0,l="",c=r&&r.delimiter||"/";null!=(t=a.exec(e));){var d=t[0],h=t[1],f=t.index;if(l+=e.slice(i,f),i=f+d.length,h)l+=h[1];else{var g=e[i],p=t[2],m=t[3],y=t[4],S=t[5],v=t[6],C=t[7];l&&(n.push(l),l="");var A=null!=p&&null!=g&&g!==p,b="+"===v||"*"===v,k="?"===v||"*"===v,w=t[2]||c,B=y||S;n.push({name:m||o++,prefix:p||"",delimiter:w,optional:k,repeat:b,partial:A,asterisk:!!C,pattern:B?u(B):C?".*":"[^"+s(w)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&n.push(l),n}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,r){for(var t=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(t[a]=new RegExp("^(?:"+e[a].pattern+")$",d(r)));return function(r,a){for(var o="",l=r||{},s=(a||{}).pretty?i:encodeURIComponent,u=0;u<e.length;u++){var c=e[u];if("string"!=typeof c){var d,h=l[c.name];if(null==h){if(c.optional){c.partial&&(o+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(n(h)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(h)+"`");if(0===h.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var f=0;f<h.length;f++){if(d=s(h[f]),!t[u].test(d))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(d)+"`");o+=(0===f?c.prefix:c.delimiter)+d}}else{if(d=c.asterisk?encodeURI(h).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(h),!t[u].test(d))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+d+'"');o+=c.prefix+d}}else o+=c}return o}}function s(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,r){return e.keys=r,e}function d(e){return e&&e.sensitive?"":"i"}function h(e,r,t){n(r)||(t=r||t,r=[]);for(var a=(t=t||{}).strict,o=!1!==t.end,i="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)i+=s(u);else{var h=s(u.prefix),f="(?:"+u.pattern+")";r.push(u),u.repeat&&(f+="(?:"+h+f+")*"),i+=f=u.optional?u.partial?h+"("+f+")?":"(?:"+h+"("+f+"))?":h+"("+f+")"}}var g=s(t.delimiter||"/"),p=i.slice(-g.length)===g;return a||(i=(p?i.slice(0,-g.length):i)+"(?:"+g+"(?=$))?"),i+=o?"$":a&&p?"":"(?="+g+"|$)",c(new RegExp("^"+i,d(t)),r)}},2408:(e,r,t)=>{"use strict";var n=t(7418),a=60103,o=60106;r.Fragment=60107,r.StrictMode=60108,r.Profiler=60114;var i=60109,l=60110,s=60112;r.Suspense=60113;var u=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;a=d("react.element"),o=d("react.portal"),r.Fragment=d("react.fragment"),r.StrictMode=d("react.strict_mode"),r.Profiler=d("react.profiler"),i=d("react.provider"),l=d("react.context"),s=d("react.forward_ref"),r.Suspense=d("react.suspense"),u=d("react.memo"),c=d("react.lazy")}var h="function"==typeof Symbol&&Symbol.iterator;function f(e){for(var r="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)r+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},p={};function m(e,r,t){this.props=e,this.context=r,this.refs=p,this.updater=t||g}function y(){}function S(e,r,t){this.props=e,this.context=r,this.refs=p,this.updater=t||g}m.prototype.isReactComponent={},m.prototype.setState=function(e,r){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(f(85));this.updater.enqueueSetState(this,e,r,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=m.prototype;var v=S.prototype=new y;v.constructor=S,n(v,m.prototype),v.isPureReactComponent=!0;var C={current:null},A=Object.prototype.hasOwnProperty,b={key:!0,ref:!0,__self:!0,__source:!0};function k(e,r,t){var n,o={},i=null,l=null;if(null!=r)for(n in void 0!==r.ref&&(l=r.ref),void 0!==r.key&&(i=""+r.key),r)A.call(r,n)&&!b.hasOwnProperty(n)&&(o[n]=r[n]);var s=arguments.length-2;if(1===s)o.children=t;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(n in s=e.defaultProps)void 0===o[n]&&(o[n]=s[n]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:C.current}}function w(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var B=/\/+/g;function D(e,r){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var r={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return r[e]}))}(""+e.key):r.toString(36)}function T(e,r,t,n,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case a:case o:s=!0}}if(s)return i=i(s=e),e=""===n?"."+D(s,0):n,Array.isArray(i)?(t="",null!=e&&(t=e.replace(B,"$&/")+"/"),T(i,r,t,"",(function(e){return e}))):null!=i&&(w(i)&&(i=function(e,r){return{$$typeof:a,type:e.type,key:r,ref:e.ref,props:e.props,_owner:e._owner}}(i,t+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(B,"$&/")+"/")+e)),r.push(i)),1;if(s=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=n+D(l=e[u],u);s+=T(l,r,t,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),u=0;!(l=e.next()).done;)s+=T(l=l.value,r,t,c=n+D(l,u++),i);else if("object"===l)throw r=""+e,Error(f(31,"[object Object]"===r?"object with keys {"+Object.keys(e).join(", ")+"}":r));return s}function M(e,r,t){if(null==e)return e;var n=[],a=0;return T(e,n,"","",(function(e){return r.call(t,e,a++)})),n}function E(e){if(-1===e._status){var r=e._result;r=r(),e._status=0,e._result=r,r.then((function(r){0===e._status&&(r=r.default,e._status=1,e._result=r)}),(function(r){0===e._status&&(e._status=2,e._result=r)}))}if(1===e._status)return e._result;throw e._result}var P={current:null};function x(){var e=P.current;if(null===e)throw Error(f(321));return e}var R={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:C,IsSomeRendererActing:{current:!1},assign:n};r.Children={map:M,forEach:function(e,r,t){M(e,(function(){r.apply(this,arguments)}),t)},count:function(e){var r=0;return M(e,(function(){r++})),r},toArray:function(e){return M(e,(function(e){return e}))||[]},only:function(e){if(!w(e))throw Error(f(143));return e}},r.Component=m,r.PureComponent=S,r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,r.cloneElement=function(e,r,t){if(null==e)throw Error(f(267,e));var o=n({},e.props),i=e.key,l=e.ref,s=e._owner;if(null!=r){if(void 0!==r.ref&&(l=r.ref,s=C.current),void 0!==r.key&&(i=""+r.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in r)A.call(r,c)&&!b.hasOwnProperty(c)&&(o[c]=void 0===r[c]&&void 0!==u?u[c]:r[c])}var c=arguments.length-2;if(1===c)o.children=t;else if(1<c){u=Array(c);for(var d=0;d<c;d++)u[d]=arguments[d+2];o.children=u}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:s}},r.createContext=function(e,r){return void 0===r&&(r=null),(e={$$typeof:l,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},r.createElement=k,r.createFactory=function(e){var r=k.bind(null,e);return r.type=e,r},r.createRef=function(){return{current:null}},r.forwardRef=function(e){return{$$typeof:s,render:e}},r.isValidElement=w,r.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:E}},r.memo=function(e,r){return{$$typeof:u,type:e,compare:void 0===r?null:r}},r.useCallback=function(e,r){return x().useCallback(e,r)},r.useContext=function(e,r){return x().useContext(e,r)},r.useDebugValue=function(){},r.useEffect=function(e,r){return x().useEffect(e,r)},r.useImperativeHandle=function(e,r,t){return x().useImperativeHandle(e,r,t)},r.useLayoutEffect=function(e,r){return x().useLayoutEffect(e,r)},r.useMemo=function(e,r){return x().useMemo(e,r)},r.useReducer=function(e,r,t){return x().useReducer(e,r,t)},r.useRef=function(e){return x().useRef(e)},r.useState=function(e){return x().useState(e)},r.version="17.0.1"},7294:(e,r,t)=>{"use strict";e.exports=t(2408)},8500:(e,r,t)=>{"use strict";var n=t(4890).qC;r.Uo="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(0!==arguments.length)return"object"==typeof arguments[0]?n:n.apply(null,arguments)},"undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__},4890:(e,r,t)=>{"use strict";t.d(r,{md:()=>m,DE:()=>d,UY:()=>u,qC:()=>p,MT:()=>l});var n=t(7121),a=function(){return Math.random().toString(36).substring(7).split("").join(".")},o={INIT:"@@redux/INIT"+a(),REPLACE:"@@redux/REPLACE"+a(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+a()}};function i(e){if("object"!=typeof e||null===e)return!1;for(var r=e;null!==Object.getPrototypeOf(r);)r=Object.getPrototypeOf(r);return Object.getPrototypeOf(e)===r}function l(e,r,t){var a;if("function"==typeof r&&"function"==typeof t||"function"==typeof t&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof r&&void 0===t&&(t=r,r=void 0),void 0!==t){if("function"!=typeof t)throw new Error("Expected the enhancer to be a function.");return t(l)(e,r)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var s=e,u=r,c=[],d=c,h=!1;function f(){d===c&&(d=c.slice())}function g(){if(h)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return u}function p(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(h)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var r=!0;return f(),d.push(e),function(){if(r){if(h)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");r=!1,f();var t=d.indexOf(e);d.splice(t,1),c=null}}}function m(e){if(!i(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(h)throw new Error("Reducers may not dispatch actions.");try{h=!0,u=s(u,e)}finally{h=!1}for(var r=c=d,t=0;t<r.length;t++)(0,r[t])();return e}function y(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");s=e,m({type:o.REPLACE})}function S(){var e,r=p;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function t(){e.next&&e.next(g())}return t(),{unsubscribe:r(t)}}})[n.Z]=function(){return this},e}return m({type:o.INIT}),(a={dispatch:m,subscribe:p,getState:g,replaceReducer:y})[n.Z]=S,a}function s(e,r){var t=r&&r.type;return"Given "+(t&&'action "'+String(t)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function u(e){for(var r=Object.keys(e),t={},n=0;n<r.length;n++){var a=r[n];"function"==typeof e[a]&&(t[a]=e[a])}var i,l=Object.keys(t);try{!function(e){Object.keys(e).forEach((function(r){var t=e[r];if(void 0===t(void 0,{type:o.INIT}))throw new Error('Reducer "'+r+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===t(void 0,{type:o.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+r+"\" returned undefined when probed with a random type. Don't try to handle "+o.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(t)}catch(e){i=e}return function(e,r){if(void 0===e&&(e={}),i)throw i;for(var n=!1,a={},o=0;o<l.length;o++){var u=l[o],c=t[u],d=e[u],h=c(d,r);if(void 0===h){var f=s(u,r);throw new Error(f)}a[u]=h,n=n||h!==d}return(n=n||l.length!==Object.keys(e).length)?a:e}}function c(e,r){return function(){return r(e.apply(this,arguments))}}function d(e,r){if("function"==typeof e)return c(e,r);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var t={};for(var n in e){var a=e[n];"function"==typeof a&&(t[n]=c(a,r))}return t}function h(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function f(e,r){var t=Object.keys(e);return Object.getOwnPropertySymbols&&t.push.apply(t,Object.getOwnPropertySymbols(e)),r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t}function g(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?f(t,!0).forEach((function(r){h(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):f(t).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return 0===r.length?function(e){return e}:1===r.length?r[0]:r.reduce((function(e,r){return function(){return e(r.apply(void 0,arguments))}}))}function m(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return function(e){return function(){var t=e.apply(void 0,arguments),n=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},a={getState:t.getState,dispatch:function(){return n.apply(void 0,arguments)}},o=r.map((function(e){return e(a)}));return g({},t,{dispatch:n=p.apply(void 0,o)(t.dispatch)})}}}},5666:e=>{var r=function(e){"use strict";var r,t=Object.prototype,n=t.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function s(e,r,t){return Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[r]}try{s({},"")}catch(e){s=function(e,r,t){return e[r]=t}}function u(e,r,t,n){var a=r&&r.prototype instanceof m?r:m,o=Object.create(a.prototype),i=new M(n||[]);return o._invoke=function(e,r,t){var n=d;return function(a,o){if(n===f)throw new Error("Generator is already running");if(n===g){if("throw"===a)throw o;return P()}for(t.method=a,t.arg=o;;){var i=t.delegate;if(i){var l=B(i,t);if(l){if(l===p)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(n===d)throw n=g,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);n=f;var s=c(e,r,t);if("normal"===s.type){if(n=t.done?g:h,s.arg===p)continue;return{value:s.arg,done:t.done}}"throw"===s.type&&(n=g,t.method="throw",t.arg=s.arg)}}}(e,t,i),o}function c(e,r,t){try{return{type:"normal",arg:e.call(r,t)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var d="suspendedStart",h="suspendedYield",f="executing",g="completed",p={};function m(){}function y(){}function S(){}var v={};v[o]=function(){return this};var C=Object.getPrototypeOf,A=C&&C(C(E([])));A&&A!==t&&n.call(A,o)&&(v=A);var b=S.prototype=m.prototype=Object.create(v);function k(e){["next","throw","return"].forEach((function(r){s(e,r,(function(e){return this._invoke(r,e)}))}))}function w(e,r){function t(a,o,i,l){var s=c(e[a],e,o);if("throw"!==s.type){var u=s.arg,d=u.value;return d&&"object"==typeof d&&n.call(d,"__await")?r.resolve(d.__await).then((function(e){t("next",e,i,l)}),(function(e){t("throw",e,i,l)})):r.resolve(d).then((function(e){u.value=e,i(u)}),(function(e){return t("throw",e,i,l)}))}l(s.arg)}var a;this._invoke=function(e,n){function o(){return new r((function(r,a){t(e,n,r,a)}))}return a=a?a.then(o,o):o()}}function B(e,t){var n=e.iterator[t.method];if(n===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=r,B(e,t),"throw"===t.method))return p;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var a=c(n,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,p;var o=a.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=r),t.delegate=null,p):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,p)}function D(e){var r={tryLoc:e[0]};1 in e&&(r.catchLoc=e[1]),2 in e&&(r.finallyLoc=e[2],r.afterLoc=e[3]),this.tryEntries.push(r)}function T(e){var r=e.completion||{};r.type="normal",delete r.arg,e.completion=r}function M(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(D,this),this.reset(!0)}function E(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=r,t.done=!0,t};return i.next=i}}return{next:P}}function P(){return{value:r,done:!0}}return y.prototype=b.constructor=S,S.constructor=y,y.displayName=s(S,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var r="function"==typeof e&&e.constructor;return!!r&&(r===y||"GeneratorFunction"===(r.displayName||r.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,s(e,l,"GeneratorFunction")),e.prototype=Object.create(b),e},e.awrap=function(e){return{__await:e}},k(w.prototype),w.prototype[i]=function(){return this},e.AsyncIterator=w,e.async=function(r,t,n,a,o){void 0===o&&(o=Promise);var i=new w(u(r,t,n,a),o);return e.isGeneratorFunction(t)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},k(b),s(b,l,"Generator"),b[o]=function(){return this},b.toString=function(){return"[object Generator]"},e.keys=function(e){var r=[];for(var t in e)r.push(t);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=E,M.prototype={constructor:M,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=r,this.done=!1,this.delegate=null,this.method="next",this.arg=r,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=r)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return l.type="throw",l.arg=e,t.next=n,a&&(t.method="next",t.arg=r),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],l=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var s=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(s&&u){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(e,r){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=r&&r<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=e,i.arg=r,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(i)},complete:function(e,r){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&r&&(this.next=r),p},finish:function(e){for(var r=this.tryEntries.length-1;r>=0;--r){var t=this.tryEntries[r];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),T(t),p}},catch:function(e){for(var r=this.tryEntries.length-1;r>=0;--r){var t=this.tryEntries[r];if(t.tryLoc===e){var n=t.completion;if("throw"===n.type){var a=n.arg;T(t)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:E(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=r),p}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},53:(e,r)=>{"use strict";var t,n,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;r.unstable_now=function(){return i.now()}}else{var l=Date,s=l.now();r.unstable_now=function(){return l.now()-s}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,d=function(){if(null!==u)try{var e=r.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(d,0),e}};t=function(e){null!==u?setTimeout(t,0,e):(u=e,setTimeout(d,0))},n=function(e,r){c=setTimeout(e,r)},a=function(){clearTimeout(c)},r.unstable_shouldYield=function(){return!1},o=r.unstable_forceFrameRate=function(){}}else{var h=window.setTimeout,f=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var p=!1,m=null,y=-1,S=5,v=0;r.unstable_shouldYield=function(){return r.unstable_now()>=v},o=function(){},r.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):S=0<e?Math.floor(1e3/e):5};var C=new MessageChannel,A=C.port2;C.port1.onmessage=function(){if(null!==m){var e=r.unstable_now();v=e+S;try{m(!0,e)?A.postMessage(null):(p=!1,m=null)}catch(e){throw A.postMessage(null),e}}else p=!1},t=function(e){m=e,p||(p=!0,A.postMessage(null))},n=function(e,t){y=h((function(){e(r.unstable_now())}),t)},a=function(){f(y),y=-1}}function b(e,r){var t=e.length;e.push(r);e:for(;;){var n=t-1>>>1,a=e[n];if(!(void 0!==a&&0<B(a,r)))break e;e[n]=r,e[t]=a,t=n}}function k(e){return void 0===(e=e[0])?null:e}function w(e){var r=e[0];if(void 0!==r){var t=e.pop();if(t!==r){e[0]=t;e:for(var n=0,a=e.length;n<a;){var o=2*(n+1)-1,i=e[o],l=o+1,s=e[l];if(void 0!==i&&0>B(i,t))void 0!==s&&0>B(s,i)?(e[n]=s,e[l]=t,n=l):(e[n]=i,e[o]=t,n=o);else{if(!(void 0!==s&&0>B(s,t)))break e;e[n]=s,e[l]=t,n=l}}}return r}return null}function B(e,r){var t=e.sortIndex-r.sortIndex;return 0!==t?t:e.id-r.id}var D=[],T=[],M=1,E=null,P=3,x=!1,R=!1,G=!1;function F(e){for(var r=k(T);null!==r;){if(null===r.callback)w(T);else{if(!(r.startTime<=e))break;w(T),r.sortIndex=r.expirationTime,b(D,r)}r=k(T)}}function W(e){if(G=!1,F(e),!R)if(null!==k(D))R=!0,t(O);else{var r=k(T);null!==r&&n(W,r.startTime-e)}}function O(e,t){R=!1,G&&(G=!1,a()),x=!0;var o=P;try{for(F(t),E=k(D);null!==E&&(!(E.expirationTime>t)||e&&!r.unstable_shouldYield());){var i=E.callback;if("function"==typeof i){E.callback=null,P=E.priorityLevel;var l=i(E.expirationTime<=t);t=r.unstable_now(),"function"==typeof l?E.callback=l:E===k(D)&&w(D),F(t)}else w(D);E=k(D)}if(null!==E)var s=!0;else{var u=k(T);null!==u&&n(W,u.startTime-t),s=!1}return s}finally{E=null,P=o,x=!1}}var H=o;r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(e){e.callback=null},r.unstable_continueExecution=function(){R||x||(R=!0,t(O))},r.unstable_getCurrentPriorityLevel=function(){return P},r.unstable_getFirstCallbackNode=function(){return k(D)},r.unstable_next=function(e){switch(P){case 1:case 2:case 3:var r=3;break;default:r=P}var t=P;P=r;try{return e()}finally{P=t}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=H,r.unstable_runWithPriority=function(e,r){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=P;P=e;try{return r()}finally{P=t}},r.unstable_scheduleCallback=function(e,o,i){var l=r.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:M++,callback:o,priorityLevel:e,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>l?(e.sortIndex=i,b(T,e),null===k(D)&&e===k(T)&&(G?a():G=!0,n(W,i-l))):(e.sortIndex=s,b(D,e),R||x||(R=!0,t(O))),e},r.unstable_wrapCallback=function(e){var r=P;return function(){var t=P;P=r;try{return e.apply(this,arguments)}finally{P=t}}}},3840:(e,r,t)=>{"use strict";e.exports=t(53)},3379:(e,r,t)=>{"use strict";var n,a=function(){var e={};return function(r){if(void 0===e[r]){var t=document.querySelector(r);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[r]=t}return e[r]}}(),o=[];function i(e){for(var r=-1,t=0;t<o.length;t++)if(o[t].identifier===e){r=t;break}return r}function l(e,r){for(var t={},n=[],a=0;a<e.length;a++){var l=e[a],s=r.base?l[0]+r.base:l[0],u=t[s]||0,c="".concat(s," ").concat(u);t[s]=u+1;var d=i(c),h={css:l[1],media:l[2],sourceMap:l[3]};-1!==d?(o[d].references++,o[d].updater(h)):o.push({identifier:c,updater:p(h,r),references:1}),n.push(c)}return n}function s(e){var r=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var o=t.nc;o&&(n.nonce=o)}if(Object.keys(n).forEach((function(e){r.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(r);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(r)}return r}var u,c=(u=[],function(e,r){return u[e]=r,u.filter(Boolean).join("\n")});function d(e,r,t,n){var a=t?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=c(r,a);else{var o=document.createTextNode(a),i=e.childNodes;i[r]&&e.removeChild(i[r]),i.length?e.insertBefore(o,i[r]):e.appendChild(o)}}function h(e,r,t){var n=t.css,a=t.media,o=t.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var f=null,g=0;function p(e,r){var t,n,a;if(r.singleton){var o=g++;t=f||(f=s(r)),n=d.bind(null,t,o,!1),a=d.bind(null,t,o,!0)}else t=s(r),n=h.bind(null,t,r),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return n(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap)return;n(e=r)}else a()}}e.exports=function(e,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n));var t=l(e=e||[],r);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<t.length;n++){var a=i(t[n]);o[a].references--}for(var s=l(e,r),u=0;u<t.length;u++){var c=i(t[u]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}t=s}}}},7121:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n}),e=t.hmd(e);const n=function(e){var r,t=e.Symbol;return"function"==typeof t?t.observable?r=t.observable:(r=t("observable"),t.observable=r):r="@@observable",r}("undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==t.g?t.g:e)}},r={};function t(n){if(r[n])return r[n].exports;var a=r[n]={id:n,loaded:!1,exports:{}};return e[n](a,a.exports,t),a.loaded=!0,a.exports}t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.p="/",(()=>{"use strict";var e={};t.r(e),t.d(e,{FILE:()=>Ss,TEXT:()=>Cs,URL:()=>vs});var r=t(7294),n=t(3935);function a(e,r){e.prototype=Object.create(r.prototype),e.prototype.constructor=e,e.__proto__=r}var o=t(5697),i=t.n(o);function l(){return(l=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function s(e){return"/"===e.charAt(0)}function u(e,r){for(var t=r,n=t+1,a=e.length;n<a;t+=1,n+=1)e[t]=e[n];e.pop()}const c=function(e,r){if(!e)throw new Error("Invariant failed")};function d(e){return"/"===e.charAt(0)?e:"/"+e}function h(e,r){return function(e,r){return 0===e.toLowerCase().indexOf(r.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(r.length))}(e,r)?e.substr(r.length):e}function f(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function g(e){var r=e.pathname,t=e.search,n=e.hash,a=r||"/";return t&&"?"!==t&&(a+="?"===t.charAt(0)?t:"?"+t),n&&"#"!==n&&(a+="#"===n.charAt(0)?n:"#"+n),a}function p(e,r,t,n){var a;"string"==typeof e?(a=function(e){var r=e||"/",t="",n="",a=r.indexOf("#");-1!==a&&(n=r.substr(a),r=r.substr(0,a));var o=r.indexOf("?");return-1!==o&&(t=r.substr(o),r=r.substr(0,o)),{pathname:r,search:"?"===t?"":t,hash:"#"===n?"":n}}(e)).state=r:(void 0===(a=l({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==r&&void 0===a.state&&(a.state=r));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(a.key=t),n?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,r){void 0===r&&(r="");var t,n=e&&e.split("/")||[],a=r&&r.split("/")||[],o=e&&s(e),i=r&&s(r),l=o||i;if(e&&s(e)?a=n:n.length&&(a.pop(),a=a.concat(n)),!a.length)return"/";if(a.length){var c=a[a.length-1];t="."===c||".."===c||""===c}else t=!1;for(var d=0,h=a.length;h>=0;h--){var f=a[h];"."===f?u(a,h):".."===f?(u(a,h),d++):d&&(u(a,h),d--)}if(!l)for(;d--;d)a.unshift("..");!l||""===a[0]||a[0]&&s(a[0])||a.unshift("");var g=a.join("/");return t&&"/"!==g.substr(-1)&&(g+="/"),g}(a.pathname,n.pathname)):a.pathname=n.pathname:a.pathname||(a.pathname="/"),a}function m(){var e=null,r=[];return{setPrompt:function(r){return e=r,function(){e===r&&(e=null)}},confirmTransitionTo:function(r,t,n,a){if(null!=e){var o="function"==typeof e?e(r,t):e;"string"==typeof o?"function"==typeof n?n(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var t=!0;function n(){t&&e.apply(void 0,arguments)}return r.push(n),function(){t=!1,r=r.filter((function(e){return e!==n}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];r.forEach((function(e){return e.apply(void 0,t)}))}}}var y=!("undefined"==typeof window||!window.document||!window.document.createElement);function S(e,r){r(window.confirm(e))}var v="popstate",C="hashchange";function A(){try{return window.history.state||{}}catch(e){return{}}}function b(e){void 0===e&&(e={}),y||c(!1);var r,t=window.history,n=(-1===(r=window.navigator.userAgent).indexOf("Android 2.")&&-1===r.indexOf("Android 4.0")||-1===r.indexOf("Mobile Safari")||-1!==r.indexOf("Chrome")||-1!==r.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,i=o.forceRefresh,s=void 0!==i&&i,u=o.getUserConfirmation,b=void 0===u?S:u,k=o.keyLength,w=void 0===k?6:k,B=e.basename?f(d(e.basename)):"";function D(e){var r=e||{},t=r.key,n=r.state,a=window.location,o=a.pathname+a.search+a.hash;return B&&(o=h(o,B)),p(o,n,t)}function T(){return Math.random().toString(36).substr(2,w)}var M=m();function E(e){l(V,e),V.length=t.length,M.notifyListeners(V.location,V.action)}function P(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||G(D(e.state))}function x(){G(D(A()))}var R=!1;function G(e){R?(R=!1,E()):M.confirmTransitionTo(e,"POP",b,(function(r){r?E({action:"POP",location:e}):function(e){var r=V.location,t=W.indexOf(r.key);-1===t&&(t=0);var n=W.indexOf(e.key);-1===n&&(n=0);var a=t-n;a&&(R=!0,H(a))}(e)}))}var F=D(A()),W=[F.key];function O(e){return B+g(e)}function H(e){t.go(e)}var L=0;function I(e){1===(L+=e)&&1===e?(window.addEventListener(v,P),a&&window.addEventListener(C,x)):0===L&&(window.removeEventListener(v,P),a&&window.removeEventListener(C,x))}var N=!1,V={length:t.length,action:"POP",location:F,createHref:O,push:function(e,r){var a="PUSH",o=p(e,r,T(),V.location);M.confirmTransitionTo(o,a,b,(function(e){if(e){var r=O(o),i=o.key,l=o.state;if(n)if(t.pushState({key:i,state:l},null,r),s)window.location.href=r;else{var u=W.indexOf(V.location.key),c=W.slice(0,u+1);c.push(o.key),W=c,E({action:a,location:o})}else window.location.href=r}}))},replace:function(e,r){var a="REPLACE",o=p(e,r,T(),V.location);M.confirmTransitionTo(o,a,b,(function(e){if(e){var r=O(o),i=o.key,l=o.state;if(n)if(t.replaceState({key:i,state:l},null,r),s)window.location.replace(r);else{var u=W.indexOf(V.location.key);-1!==u&&(W[u]=o.key),E({action:a,location:o})}else window.location.replace(r)}}))},go:H,goBack:function(){H(-1)},goForward:function(){H(1)},block:function(e){void 0===e&&(e=!1);var r=M.setPrompt(e);return N||(I(1),N=!0),function(){return N&&(N=!1,I(-1)),r()}},listen:function(e){var r=M.appendListener(e);return I(1),function(){I(-1),r()}}};return V}var k=1073741823,w="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:{};function B(e){var r=[];return{on:function(e){r.push(e)},off:function(e){r=r.filter((function(r){return r!==e}))},get:function(){return e},set:function(t,n){e=t,r.forEach((function(r){return r(e,n)}))}}}const D=r.createContext||function(e,t){var n,o,l,s="__create-react-context-"+((w[l="__global_unique_id__"]=(w[l]||0)+1)+"__"),u=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).emitter=B(r.props.value),r}a(r,e);var n=r.prototype;return n.getChildContext=function(){var e;return(e={})[s]=this.emitter,e},n.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var r,n=this.props.value,a=e.value;!function(e,r){return e===r?0!==e||1/e==1/r:e!=e&&r!=r}(n,a)?(r="function"==typeof t?t(n,a):k,0!=(r|=0)&&this.emitter.set(e.value,r)):r=0}},n.render=function(){return this.props.children},r}(r.Component);u.childContextTypes=((n={})[s]=i().object.isRequired,n);var c=function(r){function t(){var e;return(e=r.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(r,t){0!=((0|e.observedBits)&t)&&e.setState({value:e.getValue()})},e}a(t,r);var n=t.prototype;return n.componentWillReceiveProps=function(e){var r=e.observedBits;this.observedBits=null==r?k:r},n.componentDidMount=function(){this.context[s]&&this.context[s].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?k:e},n.componentWillUnmount=function(){this.context[s]&&this.context[s].off(this.onUpdate)},n.getValue=function(){return this.context[s]?this.context[s].get():e},n.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(r.Component);return c.contextTypes=((o={})[s]=i().object,o),{Provider:u,Consumer:c}};var T=t(9658),M=t.n(T),E=t(9864);function P(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}var x=t(8679),R=t.n(x),G=function(e){var r=D();return r.displayName="Router-History",r}(),F=function(e){var r=D();return r.displayName="Router",r}(),W=function(e){function t(r){var t;return(t=e.call(this,r)||this).state={location:r.history.location},t._isMounted=!1,t._pendingLocation=null,r.staticContext||(t.unlisten=r.history.listen((function(e){t._isMounted?t.setState({location:e}):t._pendingLocation=e}))),t}a(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return r.createElement(F.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},r.createElement(G.Provider,{children:this.props.children||null,value:this.props.history}))},t}(r.Component);r.Component,r.Component;var O={},H=0;function L(e,r){void 0===r&&(r={}),("string"==typeof r||Array.isArray(r))&&(r={path:r});var t=r,n=t.path,a=t.exact,o=void 0!==a&&a,i=t.strict,l=void 0!==i&&i,s=t.sensitive,u=void 0!==s&&s;return[].concat(n).reduce((function(r,t){if(!t&&""!==t)return null;if(r)return r;var n=function(e,r){var t=""+r.end+r.strict+r.sensitive,n=O[t]||(O[t]={});if(n[e])return n[e];var a=[],o={regexp:M()(e,a,r),keys:a};return H<1e4&&(n[e]=o,H++),o}(t,{end:o,strict:l,sensitive:u}),a=n.regexp,i=n.keys,s=a.exec(e);if(!s)return null;var c=s[0],d=s.slice(1),h=e===c;return o&&!h?null:{path:t,url:"/"===t&&""===c?"/":c,isExact:h,params:i.reduce((function(e,r,t){return e[r.name]=d[t],e}),{})}}),null)}var I=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return r.createElement(F.Consumer,null,(function(t){t||c(!1);var n=e.props.location||t.location,a=l({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?L(n.pathname,e.props):t.match}),o=e.props,i=o.children,s=o.component,u=o.render;return Array.isArray(i)&&0===i.length&&(i=null),r.createElement(F.Provider,{value:a},a.match?i?"function"==typeof i?i(a):i:s?r.createElement(s,a):u?u(a):null:"function"==typeof i?i(a):null)}))},t}(r.Component);r.Component;var N=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return r.createElement(F.Consumer,null,(function(t){t||c(!1);var n,a,o=e.props.location||t.location;return r.Children.forEach(e.props.children,(function(e){if(null==a&&r.isValidElement(e)){n=e;var i=e.props.path||e.props.from;a=i?L(o.pathname,l({},e.props,{path:i})):t.match}})),a?r.cloneElement(n,{location:o,computedMatch:a}):null}))},t}(r.Component),V=r.useContext;var z=r.createContext(null),K=function(e){e()},U=function(){return K},j={notify:function(){}},_=function(){function e(e,r){this.store=e,this.parentSub=r,this.unsubscribe=null,this.listeners=j,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var r=e.prototype;return r.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},r.notifyNestedSubs=function(){this.listeners.notify()},r.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},r.isSubscribed=function(){return Boolean(this.unsubscribe)},r.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=function(){var e=U(),r=null,t=null;return{clear:function(){r=null,t=null},notify:function(){e((function(){for(var e=r;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],t=r;t;)e.push(t),t=t.next;return e},subscribe:function(e){var n=!0,a=t={callback:e,next:null,prev:t};return a.prev?a.prev.next=a:r=a,function(){n&&null!==r&&(n=!1,a.next?a.next.prev=a.prev:t=a.prev,a.prev?a.prev.next=a.next:r=a.next)}}}}())},r.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=j)},e}();const q=function(e){var t=e.store,n=e.context,a=e.children,o=(0,r.useMemo)((function(){var e=new _(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),i=(0,r.useMemo)((function(){return t.getState()}),[t]);(0,r.useEffect)((function(){var e=o.subscription;return e.trySubscribe(),i!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[o,i]);var l=n||z;return r.createElement(l.Provider,{value:o},a)};var Z="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect,J=[],Y=[null,null];function Q(e,r){var t=e[1];return[r.payload,t+1]}function $(e,r,t){Z((function(){return e.apply(void 0,r)}),t)}function X(e,r,t,n,a,o,i){e.current=n,r.current=a,t.current=!1,o.current&&(o.current=null,i())}function ee(e,r,t,n,a,o,i,l,s,u){if(e){var c=!1,d=null,h=function(){if(!c){var e,t,h=r.getState();try{e=n(h,a.current)}catch(e){t=e,d=e}t||(d=null),e===o.current?i.current||s():(o.current=e,l.current=e,i.current=!0,u({type:"STORE_UPDATED",payload:{error:t}}))}};return t.onStateChange=h,t.trySubscribe(),h(),function(){if(c=!0,t.tryUnsubscribe(),t.onStateChange=null,d)throw d}}}var re=function(){return[null,0]};function te(e,t){void 0===t&&(t={});var n=t,a=n.getDisplayName,o=void 0===a?function(e){return"ConnectAdvanced("+e+")"}:a,i=n.methodName,s=void 0===i?"connectAdvanced":i,u=n.renderCountProp,c=void 0===u?void 0:u,d=n.shouldHandleStateChanges,h=void 0===d||d,f=n.storeKey,g=void 0===f?"store":f,p=(n.withRef,n.forwardRef),m=void 0!==p&&p,y=n.context,S=void 0===y?z:y,v=P(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]),C=S;return function(t){var n=t.displayName||t.name||"Component",a=o(n),i=l({},v,{getDisplayName:o,methodName:s,renderCountProp:c,shouldHandleStateChanges:h,storeKey:g,displayName:a,wrappedComponentName:n,WrappedComponent:t}),u=v.pure,d=u?r.useMemo:function(e){return e()};function f(n){var a=(0,r.useMemo)((function(){var e=n.reactReduxForwardedRef,r=P(n,["reactReduxForwardedRef"]);return[n.context,e,r]}),[n]),o=a[0],s=a[1],u=a[2],c=(0,r.useMemo)((function(){return o&&o.Consumer&&(0,E.isContextConsumer)(r.createElement(o.Consumer,null))?o:C}),[o,C]),f=(0,r.useContext)(c),g=Boolean(n.store)&&Boolean(n.store.getState)&&Boolean(n.store.dispatch);Boolean(f)&&Boolean(f.store);var p=g?n.store:f.store,m=(0,r.useMemo)((function(){return function(r){return e(r.dispatch,i)}(p)}),[p]),y=(0,r.useMemo)((function(){if(!h)return Y;var e=new _(p,g?null:f.subscription),r=e.notifyNestedSubs.bind(e);return[e,r]}),[p,g,f]),S=y[0],v=y[1],A=(0,r.useMemo)((function(){return g?f:l({},f,{subscription:S})}),[g,f,S]),b=(0,r.useReducer)(Q,J,re),k=b[0][0],w=b[1];if(k&&k.error)throw k.error;var B=(0,r.useRef)(),D=(0,r.useRef)(u),T=(0,r.useRef)(),M=(0,r.useRef)(!1),x=d((function(){return T.current&&u===D.current?T.current:m(p.getState(),u)}),[p,k,u]);$(X,[D,B,M,u,x,T,v]),$(ee,[h,p,S,m,D,B,M,T,v,w],[p,S,m]);var R=(0,r.useMemo)((function(){return r.createElement(t,l({},x,{ref:s}))}),[s,t,x]);return(0,r.useMemo)((function(){return h?r.createElement(c.Provider,{value:A},R):R}),[c,R,A])}var p=u?r.memo(f):f;if(p.WrappedComponent=t,p.displayName=a,m){var y=r.forwardRef((function(e,t){return r.createElement(p,l({},e,{reactReduxForwardedRef:t}))}));return y.displayName=a,y.WrappedComponent=t,R()(y,t)}return R()(p,t)}}function ne(e,r){return e===r?0!==e||0!==r||1/e==1/r:e!=e&&r!=r}function ae(e,r){if(ne(e,r))return!0;if("object"!=typeof e||null===e||"object"!=typeof r||null===r)return!1;var t=Object.keys(e),n=Object.keys(r);if(t.length!==n.length)return!1;for(var a=0;a<t.length;a++)if(!Object.prototype.hasOwnProperty.call(r,t[a])||!ne(e[t[a]],r[t[a]]))return!1;return!0}var oe=t(4890);function ie(e){return function(r,t){var n=e(r,t);function a(){return n}return a.dependsOnOwnProps=!1,a}}function le(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function se(e,r){return function(r,t){t.displayName;var n=function(e,r){return n.dependsOnOwnProps?n.mapToProps(e,r):n.mapToProps(e)};return n.dependsOnOwnProps=!0,n.mapToProps=function(r,t){n.mapToProps=e,n.dependsOnOwnProps=le(e);var a=n(r,t);return"function"==typeof a&&(n.mapToProps=a,n.dependsOnOwnProps=le(a),a=n(r,t)),a},n}}const ue=[function(e){return"function"==typeof e?se(e):void 0},function(e){return e?void 0:ie((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?ie((function(r){return(0,oe.DE)(e,r)})):void 0}],ce=[function(e){return"function"==typeof e?se(e):void 0},function(e){return e?void 0:ie((function(){return{}}))}];function de(e,r,t){return l({},t,e,r)}const he=[function(e){return"function"==typeof e?function(e){return function(r,t){t.displayName;var n,a=t.pure,o=t.areMergedPropsEqual,i=!1;return function(r,t,l){var s=e(r,t,l);return i?a&&o(s,n)||(n=s):(i=!0,n=s),n}}}(e):void 0},function(e){return e?void 0:function(){return de}}];function fe(e,r,t,n){return function(a,o){return t(e(a,o),r(n,o),o)}}function ge(e,r,t,n,a){var o,i,l,s,u,c=a.areStatesEqual,d=a.areOwnPropsEqual,h=a.areStatePropsEqual,f=!1;return function(a,g){return f?function(a,f){var g,p,m=!d(f,i),y=!c(a,o);return o=a,i=f,m&&y?(l=e(o,i),r.dependsOnOwnProps&&(s=r(n,i)),u=t(l,s,i)):m?(e.dependsOnOwnProps&&(l=e(o,i)),r.dependsOnOwnProps&&(s=r(n,i)),u=t(l,s,i)):y?(g=e(o,i),p=!h(g,l),l=g,p&&(u=t(l,s,i)),u):u}(a,g):(l=e(o=a,i=g),s=r(n,i),u=t(l,s,i),f=!0,u)}}function pe(e,r){var t=r.initMapStateToProps,n=r.initMapDispatchToProps,a=r.initMergeProps,o=P(r,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),i=t(e,o),l=n(e,o),s=a(e,o);return(o.pure?ge:fe)(i,l,s,e,o)}function me(e,r,t){for(var n=r.length-1;n>=0;n--){var a=r[n](e);if(a)return a}return function(r,n){throw new Error("Invalid value of type "+typeof e+" for "+t+" argument when connecting component "+n.wrappedComponentName+".")}}function ye(e,r){return e===r}function Se(e){var r=void 0===e?{}:e,t=r.connectHOC,n=void 0===t?te:t,a=r.mapStateToPropsFactories,o=void 0===a?ce:a,i=r.mapDispatchToPropsFactories,s=void 0===i?ue:i,u=r.mergePropsFactories,c=void 0===u?he:u,d=r.selectorFactory,h=void 0===d?pe:d;return function(e,r,t,a){void 0===a&&(a={});var i=a,u=i.pure,d=void 0===u||u,f=i.areStatesEqual,g=void 0===f?ye:f,p=i.areOwnPropsEqual,m=void 0===p?ae:p,y=i.areStatePropsEqual,S=void 0===y?ae:y,v=i.areMergedPropsEqual,C=void 0===v?ae:v,A=P(i,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),b=me(e,o,"mapStateToProps"),k=me(r,s,"mapDispatchToProps"),w=me(t,c,"mergeProps");return n(h,l({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:b,initMapDispatchToProps:k,initMergeProps:w,pure:d,areStatesEqual:g,areOwnPropsEqual:m,areStatePropsEqual:S,areMergedPropsEqual:C},A))}}const ve=Se();var Ce;Ce=n.unstable_batchedUpdates,K=Ce;var Ae=t(8500);function be(e){return function(r){var t=r.dispatch,n=r.getState;return function(r){return function(a){return"function"==typeof a?a(t,n,e):r(a)}}}}var ke=be();ke.withExtraArgument=be;const we=ke;var Be=t(9713),De=t.n(Be),Te="UPLOAD_PACKET",Me="CHANGE_DECK_ART",Ee="DECK_ERROR";function Pe(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function xe(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Pe(Object(t),!0).forEach((function(r){De()(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Pe(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var Re={uploadCards:[],deckArt:"https://images.pexels.com/photos/1376766/nature-milky-way-galaxy-space-1376766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"};const Ge=(0,oe.UY)({deck:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Re,r=arguments.length>1?arguments[1]:void 0,t=r.type,n=r.payload;switch(t){case Te:return console.log("payload: ",n),xe(xe({},e),{},{uploadCards:n});case Me:return xe(xe({},e),{},{deckArt:n});case Ee:default:return e}}});var Fe=[we];const We=(0,oe.MT)(Ge,{},(0,Ae.Uo)(oe.md.apply(void 0,Fe)));var Oe=t(3379),He=t.n(Oe),Le=t(7175);He()(Le.Z,{insert:"head",singleton:!1}),Le.Z.locals;var Ie=t(1003);He()(Ie.Z,{insert:"head",singleton:!1}),Ie.Z.locals;var Ne=t(4231);He()(Ne.Z,{insert:"head",singleton:!1}),Ne.Z.locals;var Ve=t(3038),ze=t.n(Ve),Ke=t(319),Ue=t.n(Ke),je=t(7757),_e=t.n(je),qe=t(8926),Ze=t.n(qe),Je=function(e,r){return(Je=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])})(e,r)};function Ye(e,r){function t(){this.constructor=e}Je(e,r),e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)}var Qe=function(){return(Qe=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var a in r=arguments[t])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)};function $e(e,r){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)r.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(t[n[a]]=e[n[a]])}return t}function Xe(e,r){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var n,a,o=t.call(e),i=[];try{for(;(void 0===r||r-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(e){a={error:e}}finally{try{n&&!n.done&&(t=o.return)&&t.call(o)}finally{if(a)throw a.error}}return i}function er(){for(var e=[],r=0;r<arguments.length;r++)e=e.concat(Xe(arguments[r]));return e}var rr=1/60*1e3,tr="undefined"!=typeof window?function(e){return window.requestAnimationFrame(e)}:function(e){return setTimeout((function(){return e(performance.now())}),rr)},nr=!0,ar=!1,or=!1,ir={delta:0,timestamp:0},lr=["read","update","preRender","render","postRender"],sr=lr.reduce((function(e,r){return e[r]=function(e){var r=[],t=[],n=0,a=!1,o=new WeakSet,i={schedule:function(e,i,l){void 0===i&&(i=!1),void 0===l&&(l=!1);var s=l&&a,u=s?r:t;return i&&o.add(e),-1===u.indexOf(e)&&(u.push(e),s&&a&&(n=r.length)),e},cancel:function(e){var r=t.indexOf(e);-1!==r&&t.splice(r,1),o.delete(e)},process:function(l){var s;if(a=!0,r=(s=[t,r])[0],(t=s[1]).length=0,n=r.length)for(var u=0;u<n;u++){var c=r[u];c(l),o.has(c)&&(i.schedule(c),e())}a=!1}};return i}((function(){return ar=!0})),e}),{}),ur=lr.reduce((function(e,r){var t=sr[r];return e[r]=function(e,r,n){return void 0===r&&(r=!1),void 0===n&&(n=!1),ar||fr(),t.schedule(e,r,n)},e}),{}),cr=lr.reduce((function(e,r){return e[r]=sr[r].cancel,e}),{}),dr=function(e){return sr[e].process(ir)},hr=function(e){ar=!1,ir.delta=nr?rr:Math.max(Math.min(e-ir.timestamp,40),1),ir.timestamp=e,or=!0,lr.forEach(dr),or=!1,ar&&(nr=!1,tr(hr))},fr=function(){ar=!0,nr=!0,or||tr(hr)},gr=function(){return ir};const pr=ur;var mr=function(e,r){return function(t){return Math.max(Math.min(t,r),e)}},yr=function(e){return e%1?Number(e.toFixed(5)):e},Sr=/(-)?([\d]*\.?[\d])+/g,vr=/(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi,Cr=/^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;function Ar(e){return"string"==typeof e}var br={test:function(e){return"number"==typeof e},parse:parseFloat,transform:function(e){return e}},kr=Qe(Qe({},br),{transform:mr(0,1)}),wr=Qe(Qe({},br),{default:1}),Br=function(e){return{test:function(r){return Ar(r)&&r.endsWith(e)&&1===r.split(" ").length},parse:parseFloat,transform:function(r){return""+r+e}}},Dr=Br("deg"),Tr=Br("%"),Mr=Br("px"),Er=Br("vh"),Pr=Br("vw"),xr=Qe(Qe({},Tr),{parse:function(e){return Tr.parse(e)/100},transform:function(e){return Tr.transform(100*e)}}),Rr=function(e,r){return function(t){return Ar(t)&&Cr.test(t)&&t.startsWith(e)||r&&t.hasOwnProperty(r)}},Gr=function(e,r,t){return function(n){var a;if(!Ar(n))return n;var o=n.match(Sr),i=o[0],l=o[1],s=o[2],u=o[3];return(a={})[e]=parseFloat(i),a[r]=parseFloat(l),a[t]=parseFloat(s),a.alpha=void 0!==u?parseFloat(u):1,a}},Fr={test:Rr("hsl","hue"),parse:Gr("hue","saturation","lightness"),transform:function(e){var r=e.hue,t=e.saturation,n=e.lightness,a=e.alpha,o=void 0===a?1:a;return"hsla("+Math.round(r)+", "+Tr.transform(yr(t))+", "+Tr.transform(yr(n))+", "+yr(kr.transform(o))+")"}},Wr=mr(0,255),Or=Qe(Qe({},br),{transform:function(e){return Math.round(Wr(e))}}),Hr={test:Rr("rgb","red"),parse:Gr("red","green","blue"),transform:function(e){var r=e.red,t=e.green,n=e.blue,a=e.alpha,o=void 0===a?1:a;return"rgba("+Or.transform(r)+", "+Or.transform(t)+", "+Or.transform(n)+", "+yr(kr.transform(o))+")"}},Lr={test:Rr("#"),parse:function(e){var r="",t="",n="",a="";return e.length>5?(r=e.substr(1,2),t=e.substr(3,2),n=e.substr(5,2),a=e.substr(7,2)):(r=e.substr(1,1),t=e.substr(2,1),n=e.substr(3,1),a=e.substr(4,1),r+=r,t+=t,n+=n,a+=a),{red:parseInt(r,16),green:parseInt(t,16),blue:parseInt(n,16),alpha:a?parseInt(a,16)/255:1}},transform:Hr.transform},Ir={test:function(e){return Hr.test(e)||Lr.test(e)||Fr.test(e)},parse:function(e){return Hr.test(e)?Hr.parse(e):Fr.test(e)?Fr.parse(e):Lr.parse(e)},transform:function(e){return Ar(e)?e:e.hasOwnProperty("red")?Hr.transform(e):Fr.transform(e)}},Nr="${c}",Vr="${n}";function zr(e){var r=[],t=0,n=e.match(vr);n&&(t=n.length,e=e.replace(vr,Nr),r.push.apply(r,n.map(Ir.parse)));var a=e.match(Sr);return a&&(e=e.replace(Sr,Vr),r.push.apply(r,a.map(br.parse))),{values:r,numColors:t,tokenised:e}}function Kr(e){return zr(e).values}function Ur(e){var r=zr(e),t=r.values,n=r.numColors,a=r.tokenised,o=t.length;return function(e){for(var r=a,t=0;t<o;t++)r=r.replace(t<n?Nr:Vr,t<n?Ir.transform(e[t]):yr(e[t]));return r}}var jr=function(e){return"number"==typeof e?0:e},_r={test:function(e){var r,t,n,a;return isNaN(e)&&Ar(e)&&(null!==(t=null===(r=e.match(Sr))||void 0===r?void 0:r.length)&&void 0!==t?t:0)+(null!==(a=null===(n=e.match(vr))||void 0===n?void 0:n.length)&&void 0!==a?a:0)>0},parse:Kr,createTransformer:Ur,getAnimatableNone:function(e){var r=Kr(e);return Ur(e)(r.map(jr))}},qr=new Set(["brightness","contrast","saturate","opacity"]);function Zr(e){var r=e.slice(0,-1).split("("),t=r[0],n=r[1];if("drop-shadow"===t)return e;var a=(n.match(Sr)||[])[0];if(!a)return e;var o=n.replace(a,""),i=qr.has(t)?1:0;return a!==n&&(i*=100),t+"("+i+o+")"}var Jr=/([a-z-]*)\(.*?\)/g,Yr=Qe(Qe({},_r),{getAnimatableNone:function(e){var r=e.match(Jr);return r?r.map(Zr).join(" "):e}}),Qr=function(e,r,t){return Math.min(Math.max(t,e),r)};function $r(e,r){return e*Math.sqrt(1-r*r)}var Xr=["duration","bounce"],et=["stiffness","damping","mass"];function rt(e,r){return r.some((function(r){return void 0!==e[r]}))}function tt(e){var r=e.from,t=void 0===r?0:r,n=e.to,a=void 0===n?1:n,o=e.restSpeed,i=void 0===o?2:o,l=e.restDelta,s=$e(e,["from","to","restSpeed","restDelta"]),u={done:!1,value:t},c=function(e){var r=Qe({velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1},e);if(!rt(e,et)&&rt(e,Xr)){var t=function(e){var r,t,n=e.duration,a=void 0===n?800:n,o=e.bounce,i=void 0===o?.25:o,l=e.velocity,s=void 0===l?0:l,u=e.mass,c=void 0===u?1:u,d=1-i;d=Qr(.05,1,d),a=Qr(.01,10,a/1e3),d<1?(r=function(e){var r=e*d,t=r*a;return.001-(r-s)/$r(e,d)*Math.exp(-t)},t=function(e){var t=e*d*a,n=t*s+s,o=Math.pow(d,2)*Math.pow(e,2)*a,i=Math.exp(-t),l=$r(Math.pow(e,2),d);return(.001-r(e)>0?-1:1)*((n-o)*i)/l}):(r=function(e){return Math.exp(-e*a)*((e-s)*a+1)-.001},t=function(e){return Math.exp(-e*a)*(a*a*(s-e))});var h=function(e,r,t){for(var n=t,a=1;a<12;a++)n-=e(n)/r(n);return n}(r,t,5/a);if(isNaN(h))return{stiffness:100,damping:10};var f=Math.pow(h,2)*c;return{stiffness:f,damping:2*d*Math.sqrt(c*f)}}(e);(r=Qe(Qe(Qe({},r),t),{velocity:0,mass:1})).isResolvedFromDuration=!0}return r}(s),d=c.stiffness,h=c.damping,f=c.mass,g=c.velocity,p=c.isResolvedFromDuration,m=nt,y=nt;function S(){var e=g?-g/1e3:0,r=a-t,n=h/(2*Math.sqrt(d*f)),o=Math.sqrt(d/f)/1e3;if(null!=l||(l=Math.abs(a-t)<=1?.01:.4),n<1){var i=$r(o,n);m=function(t){var l=Math.exp(-n*o*t);return a-l*((e+n*o*r)/i*Math.sin(i*t)+r*Math.cos(i*t))},y=function(t){var a=Math.exp(-n*o*t);return n*o*a*(Math.sin(i*t)*(e+n*o*r)/i+r*Math.cos(i*t))-a*(Math.cos(i*t)*(e+n*o*r)-i*r*Math.sin(i*t))}}else if(1===n)m=function(t){return a-Math.exp(-o*t)*(r+(e+o*r)*t)};else{var s=o*Math.sqrt(n*n-1);m=function(t){var i=Math.exp(-n*o*t),l=Math.min(s*t,300);return a-i*((e+n*o*r)*Math.sinh(l)+s*r*Math.cosh(l))/s}}}return S(),{next:function(e){var r=m(e);if(p)u.done=e>=s.duration;else{var t=1e3*y(e),n=Math.abs(t)<=i,o=Math.abs(a-r)<=l;u.done=n&&o}return u.value=u.done?a:r,u},flipTarget:function(){var e;g=-g,t=(e=[a,t])[0],a=e[1],S()}}}tt.needsInterpolation=function(e,r){return"string"==typeof e||"string"==typeof r};var nt=function(e){return 0},at=function(e,r,t){var n=r-e;return 0===n?1:(t-e)/n},ot=function(e,r,t){return-t*e+t*r+e},it=function(e,r,t){var n=e*e,a=r*r;return Math.sqrt(Math.max(0,t*(a-n)+n))},lt=[Lr,Hr,Fr],st=function(e){return lt.find((function(r){return r.test(e)}))},ut=function(e){return"'"+e+"' is not an animatable color. Use the equivalent color code instead."},ct=function(e,r){var t=st(e),n=st(r);ut(e),ut(r),t.transform,n.transform;var a=t.parse(e),o=n.parse(r),i=Qe({},a),l=t===Fr?ot:it;return function(e){for(var r in i)"alpha"!==r&&(i[r]=l(a[r],o[r],e));return i.alpha=ot(a.alpha,o.alpha,e),t.transform(i)}},dt=function(e){return"number"==typeof e},ht=function(e,r){return function(t){return r(e(t))}},ft=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return e.reduce(ht)};function gt(e,r){return dt(e)?function(t){return ot(e,r,t)}:Ir.test(e)?ct(e,r):St(e,r)}var pt=function(e,r){var t=function(){for(var e=0,r=0,t=arguments.length;r<t;r++)e+=arguments[r].length;var n=Array(e),a=0;for(r=0;r<t;r++)for(var o=arguments[r],i=0,l=o.length;i<l;i++,a++)n[a]=o[i];return n}(e),n=t.length,a=e.map((function(e,t){return gt(e,r[t])}));return function(e){for(var r=0;r<n;r++)t[r]=a[r](e);return t}},mt=function(e,r){var t=Qe(Qe({},e),r),n={};for(var a in t)void 0!==e[a]&&void 0!==r[a]&&(n[a]=gt(e[a],r[a]));return function(e){for(var r in n)t[r]=n[r](e);return t}};function yt(e){for(var r=_r.parse(e),t=r.length,n=0,a=0,o=0,i=0;i<t;i++)n||"number"==typeof r[i]?n++:void 0!==r[i].hue?o++:a++;return{parsed:r,numNumbers:n,numRGB:a,numHSL:o}}var St=function(e,r){var t=_r.createTransformer(r),n=yt(e),a=yt(r);return n.numHSL===a.numHSL&&n.numRGB===a.numRGB&&(n.numNumbers,a.numNumbers),ft(pt(n.parsed,a.parsed),t)},vt=function(e,r){return function(t){return ot(e,r,t)}};function Ct(e,r,t){var n=void 0===t?{}:t,a=n.clamp,o=void 0===a||a,i=n.ease,l=n.mixer,s=e.length;r.length,!i||!Array.isArray(i)||i.length,e[0]>e[s-1]&&(e=[].concat(e),r=[].concat(r),e.reverse(),r.reverse());var u=function(e,r,t){for(var n=[],a=t||function(e){return"number"==typeof e?vt:"string"==typeof e?Ir.test(e)?ct:St:Array.isArray(e)?pt:"object"==typeof e?mt:void 0}(e[0]),o=e.length-1,i=0;i<o;i++){var l=a(e[i],e[i+1]);if(r){var s=Array.isArray(r)?r[i]:r;l=ft(s,l)}n.push(l)}return n}(r,i,l),c=2===s?function(e,r){var t=e[0],n=e[1],a=r[0];return function(e){return a(at(t,n,e))}}(e,u):function(e,r){var t=e.length,n=t-1;return function(a){var o=0,i=!1;if(a<=e[0]?i=!0:a>=e[n]&&(o=n-1,i=!0),!i){for(var l=1;l<t&&!(e[l]>a||l===n);l++);o=l-1}var s=at(e[o],e[o+1],a);return r[o](s)}}(e,u);return o?function(r){return c(Qr(e[0],e[s-1],r))}:c}var At=function(e){return function(r){return 1-e(1-r)}},bt=function(e){return function(r){return r<=.5?e(2*r)/2:(2-e(2*(1-r)))/2}},kt=function(e){return function(r){return r*r*((e+1)*r-e)}},wt=function(e){var r=kt(e);return function(e){return(e*=2)<1?.5*r(e):.5*(2-Math.pow(2,-10*(e-1)))}},Bt=function(e){return e},Dt=function(e){return function(e){return Math.pow(e,2)}}(),Tt=At(Dt),Mt=bt(Dt),Et=function(e){return 1-Math.sin(Math.acos(e))},Pt=At(Et),xt=bt(Pt),Rt=kt(1.525),Gt=At(Rt),Ft=bt(Rt),Wt=wt(1.525),Ot=function(e){if(1===e||0===e)return e;var r=e*e;return e<.36363636363636365?7.5625*r:e<.7272727272727273?9.075*r-9.9*e+3.4:e<.9?12.066481994459833*r-19.63545706371191*e+8.898060941828255:10.8*e*e-20.52*e+10.72},Ht=At(Ot);function Lt(e,r){return e.map((function(){return r||Mt})).splice(0,e.length-1)}function It(e){var r=e.from,t=void 0===r?0:r,n=e.to,a=void 0===n?1:n,o=e.ease,i=e.offset,l=e.duration,s=void 0===l?300:l,u={done:!1,value:t},c=Array.isArray(a)?a:[t,a],d=function(e,r){return e.map((function(e){return e*r}))}(i&&i.length===c.length?i:function(e){var r=e.length;return e.map((function(e,t){return 0!==t?t/(r-1):0}))}(c),s);function h(){return Ct(d,c,{ease:Array.isArray(o)?o:Lt(c,o)})}var f=h();return{next:function(e){return u.value=f(e),u.done=e>=s,u},flipTarget:function(){c.reverse(),f=h()}}}var Nt={keyframes:It,spring:tt,decay:function(e){var r=e.velocity,t=void 0===r?0:r,n=e.from,a=void 0===n?0:n,o=e.power,i=void 0===o?.8:o,l=e.timeConstant,s=void 0===l?350:l,u=e.restDelta,c=void 0===u?.5:u,d=e.modifyTarget,h={done:!1,value:a},f=i*t,g=a+f,p=void 0===d?g:d(g);return p!==g&&(f=p-a),{next:function(e){var r=-f*Math.exp(-e/s);return h.done=!(r>c||r<-c),h.value=h.done?p:p+r,h},flipTarget:function(){}}}};function Vt(e,r,t){return void 0===t&&(t=0),e-r-t}var zt=function(e){var r=function(r){var t=r.delta;return e(t)};return{start:function(){return pr.update(r,!0,!0)},stop:function(){return cr.update(r)}}};function Kt(e){var r,t,n,a,o,i=e.from,l=e.autoplay,s=void 0===l||l,u=e.driver,c=void 0===u?zt:u,d=e.elapsed,h=void 0===d?0:d,f=e.repeat,g=void 0===f?0:f,p=e.repeatType,m=void 0===p?"loop":p,y=e.repeatDelay,S=void 0===y?0:y,v=e.onPlay,C=e.onStop,A=e.onComplete,b=e.onRepeat,k=e.onUpdate,w=$e(e,["from","autoplay","driver","elapsed","repeat","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate"]),B=w.to,D=0,T=w.duration,M=!1,E=!0,P=function(e){if(Array.isArray(e.to))return It;if(Nt[e.type])return Nt[e.type];var r=new Set(Object.keys(e));return r.has("ease")||r.has("duration")&&!r.has("dampingRatio")?It:r.has("dampingRatio")||r.has("stiffness")||r.has("mass")||r.has("damping")||r.has("restSpeed")||r.has("restDelta")?tt:It}(w);(null===(t=(r=P).needsInterpolation)||void 0===t?void 0:t.call(r,i,B))&&(o=Ct([0,100],[i,B],{clamp:!1}),i=0,B=100);var x=P(Qe(Qe({},w),{from:i,to:B}));return s&&(null==v||v(),(n=c((function(e){if(E||(e=-e),h+=e,!M){var r=x.next(Math.max(0,h));a=r.value,o&&(a=o(a)),M=E?r.done:h<=0}null==k||k(a),M&&(0===D&&(null!=T||(T=h)),D<g?function(e,r,t,n){return n?e>=r+t:e<=-t}(h,T,S,E)&&(D++,"reverse"===m?h=function(e,r,t,n){return void 0===t&&(t=0),void 0===n&&(n=!0),n?Vt(r+-e,r,t):r-(e-r)+t}(h,T,S,E=D%2==0):(h=Vt(h,T,S),"mirror"===m&&x.flipTarget()),M=!1,b&&b()):(n.stop(),A&&A()))}))).start()),{stop:function(){null==C||C(),n.stop()}}}function Ut(e,r){return r?e*(1e3/r):0}var jt=(Math.sqrt,function(e){return e.hasOwnProperty("x")&&e.hasOwnProperty("y")}),_t=function(e){return jt(e)&&e.hasOwnProperty("z")},qt=function(e,r){return Math.abs(e-r)};function Zt(e,r){if(dt(e)&&dt(r))return qt(e,r);if(jt(e)&&jt(r)){var t=qt(e.x,r.x),n=qt(e.y,r.y),a=_t(e)&&_t(r)?qt(e.z,r.z):0;return Math.sqrt(Math.pow(t,2)+Math.pow(n,2)+Math.pow(a,2))}}var Jt=function(e,r){return 1-3*r+3*e},Yt=function(e,r){return 3*r-6*e},Qt=function(e){return 3*e},$t=function(e,r,t){return((Jt(r,t)*e+Yt(r,t))*e+Qt(r))*e},Xt=function(e,r,t){return 3*Jt(r,t)*e*e+2*Yt(r,t)*e+Qt(r)},en=.1;function rn(e,r,t,n){if(e===r&&t===n)return Bt;for(var a=new Float32Array(11),o=0;o<11;++o)a[o]=$t(o*en,e,t);return function(o){return 0===o||1===o?o:$t(function(r){for(var n=0,o=1;10!==o&&a[o]<=r;++o)n+=en;--o;var i=n+(r-a[o])/(a[o+1]-a[o])*en,l=Xt(i,e,t);return l>=.001?function(e,r,t,n){for(var a=0;a<8;++a){var o=Xt(r,t,n);if(0===o)return r;r-=($t(r,t,n)-e)/o}return r}(r,i,e,t):0===l?i:function(e,r,t,n,a){var o,i,l=0;do{(o=$t(i=r+(t-r)/2,n,a)-e)>0?t=i:r=i}while(Math.abs(o)>1e-7&&++l<10);return i}(r,n,n+en,e,t)}(o),r,n)}}var tn=function(e){return"object"==typeof e&&e.hasOwnProperty("current")},nn=function(){function e(){this.subscriptions=new Set}return e.prototype.add=function(e){var r=this;return this.subscriptions.add(e),function(){r.subscriptions.delete(e)}},e.prototype.notify=function(e,r,t){var n,a;if(this.subscriptions.size)try{for(var o=function(e){var r="function"==typeof Symbol&&Symbol.iterator,t=r&&e[r],n=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(r?"Object is not iterable.":"Symbol.iterator is not defined.")}(this.subscriptions),i=o.next();!i.done;i=o.next())(0,i.value)(e,r,t)}catch(e){n={error:e}}finally{try{i&&!i.done&&(a=o.return)&&a.call(o)}finally{if(n)throw n.error}}},e.prototype.clear=function(){this.subscriptions.clear()},e}(),an=function(){function e(e){var r,t=this;this.timeDelta=0,this.lastUpdated=0,this.updateSubscribers=new nn,this.renderSubscribers=new nn,this.canTrackVelocity=!1,this.updateAndNotify=function(e,r){void 0===r&&(r=!0),t.prev=t.current,t.current=e,t.prev!==t.current&&t.updateSubscribers.notify(t.current),r&&t.renderSubscribers.notify(t.current);var n=gr(),a=n.delta,o=n.timestamp;t.lastUpdated!==o&&(t.timeDelta=a,t.lastUpdated=o,pr.postRender(t.scheduleVelocityCheck))},this.scheduleVelocityCheck=function(){return pr.postRender(t.velocityCheck)},this.velocityCheck=function(e){e.timestamp!==t.lastUpdated&&(t.prev=t.current)},this.current=e,this.canTrackVelocity=(r=this.current,!isNaN(parseFloat(r)))}return e.prototype.onChange=function(e){return this.updateSubscribers.add(e)},e.prototype.clearListeners=function(){this.updateSubscribers.clear()},e.prototype.onRenderRequest=function(e){return e(this.get()),this.renderSubscribers.add(e)},e.prototype.attach=function(e){this.passiveEffect=e},e.prototype.set=function(e,r){void 0===r&&(r=!0),r&&this.passiveEffect?this.passiveEffect(e,this.updateAndNotify):this.updateAndNotify(e,r)},e.prototype.get=function(){return this.current},e.prototype.getPrevious=function(){return this.prev},e.prototype.getVelocity=function(){return this.canTrackVelocity?Ut(parseFloat(this.current)-parseFloat(this.prev),this.timeDelta):0},e.prototype.start=function(e){var r=this;return this.stop(),new Promise((function(t){r.stopAnimation=e(t)})).then((function(){return r.clearAnimation()}))},e.prototype.stop=function(){this.stopAnimation&&this.stopAnimation(),this.clearAnimation()},e.prototype.isAnimating=function(){return!!this.stopAnimation},e.prototype.clearAnimation=function(){this.stopAnimation=null},e.prototype.destroy=function(){this.updateSubscribers.clear(),this.renderSubscribers.clear(),this.stop()},e}();function on(e){return new an(e)}var ln=function(){function e(e,r){var t=this;this.children=new Set,this.isHoverEventsEnabled=!0,this.baseTarget={},this.latest={},this.values=new Map,this.valueSubscriptions=new Map,this.config={},this.isMounted=!1,this.update=function(){return t.config.onUpdate(t.latest)},this.triggerRender=function(){return t.render()},this.ref=function(e){e?t.mount(e):t.unmount(),t.externalRef&&("function"==typeof t.externalRef?t.externalRef(e):tn(t.externalRef)&&(t.externalRef.current=e))},this.parent=e,this.rootParent=e?e.rootParent:this,this.treePath=e?er(e.treePath,[e]):[],this.depth=e?e.depth+1:0,this.externalRef=r}return e.prototype.suspendHoverEvents=function(){var e=this;this.isHoverEventsEnabled=!1,pr.postRender((function(){return setTimeout((function(){return e.isHoverEventsEnabled=!0}),10)}))},e.prototype.getVariantPayload=function(){return this.config.custom},e.prototype.getVariant=function(e){var r;return null===(r=this.config.variants)||void 0===r?void 0:r[e]},e.prototype.addVariantChild=function(e){var r=this;return this.variantChildren||(this.variantChildren=new Set),this.variantChildren.add(e),function(){return r.variantChildren.delete(e)}},e.prototype.addVariantChildOrder=function(e){this.variantChildrenOrder||(this.variantChildrenOrder=new Set),this.variantChildrenOrder.add(e)},e.prototype.onAnimationStart=function(){var e,r;null===(r=(e=this.config).onAnimationStart)||void 0===r||r.call(e)},e.prototype.onAnimationComplete=function(){var e,r;this.isMounted&&(null===(r=(e=this.config).onAnimationComplete)||void 0===r||r.call(e))},e.prototype.getDefaultTransition=function(){return this.config.transition},e.prototype.subscribe=function(e){var r=this;return this.children.add(e),function(){return r.children.delete(e)}},e.prototype.hasValue=function(e){return this.values.has(e)},e.prototype.addValue=function(e,r){this.hasValue(e)&&this.removeValue(e),this.values.set(e,r),this.setSingleStaticValue(e,r.get()),this.subscribeToValue(e,r)},e.prototype.removeValue=function(e){var r;null===(r=this.valueSubscriptions.get(e))||void 0===r||r(),this.valueSubscriptions.delete(e),this.values.delete(e),delete this.latest[e]},e.prototype.getValue=function(e,r){var t=this.values.get(e);return void 0===t&&void 0!==r&&(t=new an(r),this.addValue(e,t)),t},e.prototype.forEachValue=function(e){this.values.forEach(e)},e.prototype.getInstance=function(){return this.element},e.prototype.updateConfig=function(e){void 0===e&&(e={}),this.config=Qe({},e)},e.prototype.getBaseValue=function(e,r){return this.baseTarget[e]},e.prototype.setSingleStaticValue=function(e,r){this.latest[e]=r},e.prototype.setStaticValues=function(e,r){if("string"==typeof e)this.setSingleStaticValue(e,r);else for(var t in e)this.setSingleStaticValue(t,e[t])},e.prototype.scheduleRender=function(){pr.render(this.triggerRender,!1,!0)},e.prototype.scheduleUpdateLayoutDelta=function(){pr.preRender(this.rootParent.updateLayoutDelta,!1,!0)},e.prototype.subscribeToValue=function(e,r){var t=this,n=r.onChange((function(r){t.setSingleStaticValue(e,r),t.element&&t.config.onUpdate&&pr.update(t.update,!1,!0)})),a=r.onRenderRequest((function(){t.element&&t.scheduleRender()}));this.valueSubscriptions.set(e,(function(){n(),a()}))},e.prototype.mount=function(e){this.parent&&(this.removeFromParent=this.parent.subscribe(this)),this.element=this.current=e},e.prototype.unmount=function(){var e=this;this.forEachValue((function(r,t){return e.removeValue(t)})),cr.update(this.update),cr.render(this.render),this.removeFromParent&&this.removeFromParent()},e}();function sn(e){return e}function un(e){var r=e.top;return{x:{min:e.left,max:e.right},y:{min:r,max:e.bottom}}}function cn(e){return{x:Qe({},e.x),y:Qe({},e.y)}}var dn={translate:0,scale:1,origin:0,originPoint:0};function hn(){return{x:Qe({},dn),y:Qe({},dn)}}var fn=Qe(Qe({},br),{transform:Math.round}),gn={color:Ir,backgroundColor:Ir,outlineColor:Ir,fill:Ir,stroke:Ir,borderColor:Ir,borderTopColor:Ir,borderRightColor:Ir,borderBottomColor:Ir,borderLeftColor:Ir,borderWidth:Mr,borderTopWidth:Mr,borderRightWidth:Mr,borderBottomWidth:Mr,borderLeftWidth:Mr,borderRadius:Mr,radius:Mr,borderTopLeftRadius:Mr,borderTopRightRadius:Mr,borderBottomRightRadius:Mr,borderBottomLeftRadius:Mr,width:Mr,maxWidth:Mr,height:Mr,maxHeight:Mr,size:Mr,top:Mr,right:Mr,bottom:Mr,left:Mr,padding:Mr,paddingTop:Mr,paddingRight:Mr,paddingBottom:Mr,paddingLeft:Mr,margin:Mr,marginTop:Mr,marginRight:Mr,marginBottom:Mr,marginLeft:Mr,rotate:Dr,rotateX:Dr,rotateY:Dr,rotateZ:Dr,scale:wr,scaleX:wr,scaleY:wr,scaleZ:wr,skew:Dr,skewX:Dr,skewY:Dr,distance:Mr,translateX:Mr,translateY:Mr,translateZ:Mr,x:Mr,y:Mr,z:Mr,perspective:Mr,transformPerspective:Mr,opacity:kr,originX:xr,originY:xr,originZ:Mr,zIndex:fn,filter:Yr,WebkitFilter:Yr,fillOpacity:kr,strokeOpacity:kr,numOctaves:fn},pn=[br,Mr,Tr,Dr,Pr,Er,{test:function(e){return"auto"===e},parse:function(e){return e}}],mn=function(e){return function(r){return r.test(e)}},yn=function(e){return pn.find(mn(e))},Sn=er(pn,[Ir,_r]),vn=function(e){return Sn.find(mn(e))},Cn=function(e){return gn[e]},An=function(e,r){return r&&"number"==typeof e?r.transform(e):e};function bn(e,r){var t,n=Cn(e);return n!==Yr&&(n=_r),null===(t=n.getAnimatableNone)||void 0===t?void 0:t.call(n,r)}var kn=["","X","Y","Z"],wn=["transformPerspective","x","y","z"];function Bn(e,r){return wn.indexOf(e)-wn.indexOf(r)}["perspective","translate","scale","rotate","skew"].forEach((function(e){kn.forEach((function(r){var t=e+r;wn.push(t)}))}));var Dn=new Set(wn);function Tn(e){return Dn.has(e)}var Mn=new Set(["originX","originY","originZ"]);function En(e){return Mn.has(e)}var Pn={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"};function xn(e,r,t){var n=e.x,a=e.y,o="translate3d("+n.translate/r.x+"px, "+a.translate/r.y+"px, 0) ";if(t){var i=t.rotate,l=t.rotateX,s=t.rotateY;i&&(o+="rotate("+i+") "),l&&(o+="rotateX("+l+") "),s&&(o+="rotateY("+s+") ")}return o+="scale("+n.scale+", "+a.scale+")",t||o!==Rn?o:""}var Rn=xn(hn(),{x:1,y:1});function Gn(e){return e.startsWith("--")}function Fn(e){return"string"==typeof e&&e.startsWith("var(--")}var Wn=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;function On(e,r,t){void 0===t&&(t=1);var n=Xe(function(e){var r=Wn.exec(e);if(!r)return[,];var t=Xe(r,3);return[t[1],t[2]]}(e),2),a=n[0],o=n[1];if(a){var i=window.getComputedStyle(r).getPropertyValue(a);return i?i.trim():Fn(o)?On(o,r,t+1):o}}function Hn(e,r){return e/(r.max-r.min)*100}var Ln="_$css",In={process:function(e,r){if("string"==typeof e){if(!Mr.test(e))return e;e=parseFloat(e)}return Hn(e,r.x)+"% "+Hn(e,r.y)+"%"}},Nn={borderRadius:Qe(Qe({},In),{applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]}),borderTopLeftRadius:In,borderTopRightRadius:In,borderBottomLeftRadius:In,borderBottomRightRadius:In,boxShadow:{process:function(e,r,t,n){var a=e,o=e.includes("var("),i=[];o&&(e=e.replace(Wn,(function(e){return i.push(e),Ln})));var l=_r.parse(e);if(l.length>5)return a;var s=_r.createTransformer(e),u="number"!=typeof l[0]?1:0,c=t.x.scale*n.x,d=t.y.scale*n.y;l[0+u]/=c,l[1+u]/=d;var h=ot(c,d,.5);"number"==typeof l[2+u]&&(l[2+u]/=h),"number"==typeof l[3+u]&&(l[3+u]/=h);var f=s(l);if(o){var g=0;f=f.replace(Ln,(function(){var e=i[g];return g++,e}))}return f}}};function Vn(e,r,t,n,a,o,i,l,s,u,c,d){var h=i.enableHardwareAcceleration,f=i.transformTemplate,g=i.allowTransformNone;o.length=0;var p=!1,m=!1,y=!0;for(var S in e){var v=e[S],C=Cn(S),A=An(v,C);if(Tn(S)){if(p=!0,n[S]=A,o.push(S),!y)continue;v!==(void 0!==C.default?C.default:0)&&(y=!1)}else if(En(S))a[S]=A,m=!0;else if("transform"!==S||"function"!=typeof v){var b=Gn(S)?t:r;if(l&&Nn[S]){var k=Nn[S].process(v,d,s,c),w=Nn[S].applyTo;if(w)for(var B=w.length,D=0;D<B;D++)b[w[D]]=k;else b[S]=k}else b[S]=A}}l?(r.transform=xn(u,c,p?n:void 0),f&&(r.transform=f(n,r.transform)),r.transformOrigin=function(e){var r=e.x,t=e.y;return 100*r.origin+"% "+100*t.origin+"% 0"}(u)):(p&&(r.transform=function(e,r,t,n,a,o){void 0===a&&(a=!0),void 0===o&&(o=!0);var i="";r.sort(Bn);for(var l=!1,s=r.length,u=0;u<s;u++){var c=r[u];i+=(Pn[c]||c)+"("+e[c]+") ","z"===c&&(l=!0)}return!l&&a?i+="translateZ(0)":i=i.trim(),t?i=t(e,n?"":i):o&&n&&(i="none"),i}(n,o,f,y,h,g)),m&&(r.transformOrigin=function(e){var r=e.originX,t=void 0===r?"50%":r,n=e.originY,a=void 0===n?"50%":n,o=e.originZ;return t+" "+a+" "+(void 0===o?0:o)}(a)))}function zn(e,r){e.min=r.min,e.max=r.max}function Kn(e,r,t){return t+r*(e-t)}function Un(e,r,t,n,a){return void 0!==a&&(e=Kn(e,a,n)),Kn(e,t,n)+r}function jn(e,r,t,n,a){void 0===r&&(r=0),void 0===t&&(t=1),e.min=Un(e.min,r,t,n,a),e.max=Un(e.max,r,t,n,a)}function _n(e,r){var t=r.x,n=r.y;jn(e.x,t.translate,t.scale,t.originPoint),jn(e.y,n.translate,n.scale,n.originPoint)}function qn(e,r,t,n){var a=Xe(n,3),o=a[0],i=a[1],l=a[2];e.min=r.min,e.max=r.max;var s=void 0!==t[l]?t[l]:.5,u=ot(r.min,r.max,s);jn(e,t[o],t[i],u,t.scale)}var Zn=["x","scaleX","originX"],Jn=["y","scaleY","originY"];function Yn(e,r,t,n,a){return e=Kn(e-=r,1/t,n),void 0!==a&&(e=Kn(e,1/a,n)),e}function Qn(e,r,t){var n=Xe(t,3),a=n[0],o=n[1],i=n[2];!function(e,r,t,n,a){void 0===r&&(r=0),void 0===t&&(t=1),void 0===n&&(n=.5);var o=ot(e.min,e.max,n)-r;e.min=Yn(e.min,r,t,o,a),e.max=Yn(e.max,r,t,o,a)}(e,r[a],r[o],r[i],r.scale)}function $n(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=.01),Zt(e,r)<t}function Xn(e){return e.max-e.min}function ea(e,r){var t=.5,n=Xn(e),a=Xn(r);return a>n?t=at(r.min,r.max-n,e.min):n>a&&(t=at(e.min,e.max-a,r.min)),function(e){return Qr(0,1,e)}(t)}function ra(e,r,t,n){e.origin=void 0===n?ea(r,t):n,e.originPoint=ot(r.min,r.max,e.origin),e.scale=Xn(t)/Xn(r),$n(e.scale,1,1e-4)&&(e.scale=1),e.translate=ot(t.min,t.max,e.origin)-e.originPoint,$n(e.translate)&&(e.translate=0)}function ta(e,r,t,n){ra(e.x,r.x,t.x,n),ra(e.y,r.y,t.y,n)}function na(e){return[e("x"),e("y")]}function aa(e,r){return un(function(e,r){var t=e.top,n=e.left,a=e.bottom,o=e.right;void 0===r&&(r=sn);var i=r({x:n,y:t}),l=r({x:o,y:a});return{top:i.y,left:i.x,bottom:l.y,right:l.x}}(e.getBoundingClientRect(),r))}var oa,ia=function(e){return Array.isArray(e)},la=new Set(["width","height","top","left","right","bottom","x","y"]),sa=function(e){return la.has(e)},ua=function(e,r){e.set(r,!1),e.set(r)},ca=function(e){return e===br||e===Mr};!function(e){e.width="width",e.height="height",e.left="left",e.right="right",e.top="top",e.bottom="bottom"}(oa||(oa={}));var da=function(e,r){return parseFloat(e.split(", ")[r])},ha=function(e,r){return function(t,n){var a=n.transform;if("none"===a||!a)return 0;var o=a.match(/^matrix3d\((.+)\)$/);if(o)return da(o[1],r);var i=a.match(/^matrix\((.+)\)$/);return i?da(i[1],e):0}},fa=new Set(["x","y","z"]),ga=wn.filter((function(e){return!fa.has(e)})),pa={width:function(e){var r=e.x;return r.max-r.min},height:function(e){var r=e.y;return r.max-r.min},top:function(e,r){var t=r.top;return parseFloat(t)},left:function(e,r){var t=r.left;return parseFloat(t)},bottom:function(e,r){var t=e.y,n=r.top;return parseFloat(n)+(t.max-t.min)},right:function(e,r){var t=e.x,n=r.left;return parseFloat(n)+(t.max-t.min)},x:ha(4,13),y:ha(5,14)};function ma(e,r,t,n){return function(e){return Object.keys(e).some(sa)}(r)?function(e,r,t,n){void 0===t&&(t={}),void 0===n&&(n={}),r=Qe({},r),n=Qe({},n);var a=Object.keys(r).filter(sa),o=[],i=!1,l=[];if(a.forEach((function(a){var s=e.getValue(a);if(e.hasValue(a)){var u,c=t[a],d=r[a],h=yn(c);if(ia(d))for(var f=d.length,g=null===d[0]?1:0;g<f;g++)u?yn(d[g]):(u=yn(d[g]))===h||ca(h)&&ca(u);else u=yn(d);if(h!==u)if(ca(h)&&ca(u)){var p=s.get();"string"==typeof p&&s.set(parseFloat(p)),"string"==typeof d?r[a]=parseFloat(d):Array.isArray(d)&&u===Mr&&(r[a]=d.map(parseFloat))}else(null==h?void 0:h.transform)&&(null==u?void 0:u.transform)&&(0===c||0===d)?0===c?s.set(u.transform(c)):r[a]=h.transform(d):(i||(o=function(e){var r=[];return ga.forEach((function(t){var n=e.getValue(t);void 0!==n&&(r.push([t,n.get()]),n.set(t.startsWith("scale")?1:0))})),r.length&&e.render(),r}(e),i=!0),l.push(a),n[a]=void 0!==n[a]?n[a]:r[a],ua(s,d))}})),l.length){var s=function(e,r,t){var n=r.getBoundingBox(),a=r.getComputedStyle(),o=a.display,i={top:a.top,left:a.left,bottom:a.bottom,right:a.right,transform:a.transform};"none"===o&&r.setStaticValues("display",e.display||"block"),r.render();var l=r.getBoundingBox();return t.forEach((function(t){var o=r.getValue(t);ua(o,pa[t](n,i)),e[t]=pa[t](l,a)})),e}(r,e,l);return o.length&&o.forEach((function(r){var t=Xe(r,2),n=t[0],a=t[1];e.getValue(n).set(a)})),e.render(),{target:s,transitionEnd:n}}return{target:r,transitionEnd:n}}(e,r,t,n):{target:r,transitionEnd:n}}var ya=function(e){return/^\-?\d*\.?\d+$/.test(e)},Sa=function(e){return ia(e)?e[e.length-1]||0:e};function va(e){return Array.isArray(e)}function Ca(e,r,t){return"string"==typeof r&&(r=e.getVariant(r)),"function"==typeof r?r(null!=t?t:e.getVariantPayload(),function(e){var r={};return e.forEachValue((function(e,t){return r[t]=e.get()})),r}(e),function(e){var r={};return e.forEachValue((function(e,t){return r[t]=e.getVelocity()})),r}(e)):r}function Aa(e,r,t){e.hasValue(r)?e.getValue(r).set(t):e.addValue(r,on(t))}function ba(e,r){var t=Ca(e,r),n=t?e.makeTargetAnimatable(t,!1):{},a=n.transitionEnd,o=void 0===a?{}:a,i=(n.transition,$e(n,["transitionEnd","transition"]));for(var l in i=Qe(Qe({},i),o))Aa(e,l,Sa(i[l]))}function ka(e,r){er(r).reverse().forEach((function(t){var n;ba(e,e.getVariant(t)),null===(n=e.variantChildren)||void 0===n||n.forEach((function(e){ka(e,r)}))}))}function wa(e,r){return Array.isArray(r)?ka(e,r):"string"==typeof r?ka(e,[r]):void ba(e,r)}function Ba(e,r,t){var n,a,o,i=Object.keys(r).filter((function(r){return!e.hasValue(r)})),l=i.length;if(l)for(var s=0;s<l;s++){var u=i[s],c=r[u],d=null;if(Array.isArray(c)&&(d=c[0]),null===d){var h=null!==(n=t[u])&&void 0!==n?n:e.readNativeValue(u);d=void 0!==h?h:r[u]}"string"==typeof d&&ya(d)?d=parseFloat(d):!vn(d)&&_r.test(c)&&(d=bn(u,c)),e.addValue(u,on(d)),null!==(a=(o=t)[u])&&void 0!==a||(o[u]=d),e.baseTarget[u]=d}}function Da(e,r){if(r)return(r[e]||r.default||r).from}function Ta(e,r,t){var n,a,o={};for(var i in e)o[i]=null!==(n=Da(i,r))&&void 0!==n?n:null===(a=t.getValue(i))||void 0===a?void 0:a.get();return o}var Ma=function(e){return e instanceof an},Ea=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.defaultConfig={enableHardwareAcceleration:!0,allowTransformNone:!0},r.style={},r.reactStyle={},r.vars={},r.transform={},r.transformOrigin={},r.transformKeys=[],r.config=r.defaultConfig,r.isLayoutProjectionEnabled=!1,r.layoutUpdateListeners=new nn,r.layoutMeasureListeners=new nn,r.viewportBoxUpdateListeners=new nn,r.hasViewportBoxUpdated=!1,r.targetBoxFinal={x:{min:0,max:1},y:{min:0,max:1}},r.treeScale={x:1,y:1},r.delta=hn(),r.deltaFinal=hn(),r.deltaTransform=Rn,r.stopLayoutAxisAnimation={x:function(){},y:function(){}},r.isTargetBoxLocked=!1,r.updateLayoutDelta=function(){r.isLayoutProjectionEnabled&&r.box&&r.updateLayoutDeltas(),r.children.forEach(Pa)},r}return Ye(r,e),r.prototype.removeValue=function(r){e.prototype.removeValue.call(this,r),delete this.vars[r],delete this.style[r]},r.prototype.clean=function(){this.style={},this.vars={},this.transform={}},r.prototype.updateConfig=function(e){void 0===e&&(e={}),this.config=Qe(Qe({},this.defaultConfig),e)},r.prototype.read=function(e){var r=this.getComputedStyle();return(Gn(e)?r.getPropertyValue(e):r[e])||0},r.prototype.addValue=function(r,t){e.prototype.addValue.call(this,r,t),r.startsWith("rotate")&&(this.layoutOrigin=.5)},r.prototype.readNativeValue=function(e){if(Tn(e)){var r=Cn(e);return r&&r.default||0}return this.read(e)},r.prototype.getBaseValue=function(r,t){var n,a=null===(n=t.style)||void 0===n?void 0:n[r];return void 0===a||Ma(a)?e.prototype.getBaseValue.call(this,r,t):a},r.prototype.makeTargetAnimatable=function(e,r){void 0===r&&(r=!0);var t=e.transition,n=e.transitionEnd,a=$e(e,["transition","transitionEnd"]),o=this.config.transformValues,i=Ta(a,t||{},this);if(o&&(n&&(n=o(n)),a&&(a=o(a)),i&&(i=o(i))),r){Ba(this,a,i);var l=function(e,r,t,n){var a=function(e,r,t){var n,a=$e(r,[]),o=e.getInstance();if(!(o instanceof HTMLElement))return{target:a,transitionEnd:t};for(var i in t&&(t=Qe({},t)),e.forEachValue((function(e){var r=e.get();if(Fn(r)){var t=On(r,o);t&&e.set(t)}})),a){var l=a[i];if(Fn(l)){var s=On(l,o);s&&(a[i]=s,t&&(null!==(n=t[i])&&void 0!==n||(t[i]=l)))}}return{target:a,transitionEnd:t}}(e,r,n);return ma(e,r=a.target,t,n=a.transitionEnd)}(this,a,i,n);n=l.transitionEnd,a=l.target}return Qe({transition:t,transitionEnd:n},a)},r.prototype.enableLayoutProjection=function(){this.isLayoutProjectionEnabled=!0},r.prototype.hide=function(){!1!==this.isVisible&&(this.isVisible=!1,this.scheduleRender())},r.prototype.show=function(){!0!==this.isVisible&&(this.isVisible=!0,this.scheduleRender())},r.prototype.onLayoutUpdate=function(e){return this.layoutUpdateListeners.add(e)},r.prototype.onLayoutMeasure=function(e){return this.layoutMeasureListeners.add(e)},r.prototype.onViewportBoxUpdate=function(e){return this.viewportBoxUpdateListeners.add(e)},r.prototype.layoutReady=function(e){this.layoutUpdateListeners.notify(this.box,this.prevViewportBox||this.box,e)},r.prototype.getBoundingBox=function(){var e=this.config.transformPagePoint;return aa(this.element,e)},r.prototype.getBoundingBoxWithoutTransforms=function(){var e,r,t=this.getBoundingBox();return e=t,r=this.latest,Qn(e.x,r,Zn),Qn(e.y,r,Jn),t},r.prototype.getComputedStyle=function(){return window.getComputedStyle(this.element)},r.prototype.snapshotBoundingBox=function(){this.prevViewportBox=this.getBoundingBoxWithoutTransforms(),this.rebaseTargetBox(!1,this.prevViewportBox)},r.prototype.rebaseTargetBox=function(e,r){var t=this;void 0===e&&(e=!1),void 0===r&&(r=this.box);var n=this.getAxisProgress(),a=n.x,o=n.y,i=this.box&&!this.isTargetBoxLocked&&!a.isAnimating()&&!o.isAnimating();(e||i)&&na((function(e){var n=r[e],a=n.min,o=n.max;t.setAxisTarget(e,a,o)}))},r.prototype.measureLayout=function(){var e=this;this.box=this.getBoundingBox(),this.boxCorrected=cn(this.box),this.targetBox||(this.targetBox=cn(this.box)),this.layoutMeasureListeners.notify(this.box,this.prevViewportBox||this.box),pr.update((function(){return e.rebaseTargetBox()}))},r.prototype.lockTargetBox=function(){this.isTargetBoxLocked=!0},r.prototype.unlockTargetBox=function(){this.stopLayoutAnimation(),this.isTargetBoxLocked=!1},r.prototype.resetTransform=function(){this.suspendHoverEvents();var e=this.config.transformTemplate;this.element.style.transform=e?e({},""):"none",this.scheduleRender()},r.prototype.setAxisTarget=function(e,r,t){var n=this.targetBox[e];n.min=r,n.max=t,this.hasViewportBoxUpdated=!0,this.rootParent.scheduleUpdateLayoutDelta()},r.prototype.getAxisProgress=function(){return this.axisProgress||(this.axisProgress={x:on(0),y:on(0)}),this.axisProgress},r.prototype.startLayoutAxisAnimation=function(e,r){var t,n=this,a=this.getAxisProgress()[e],o=this.targetBox[e],i=o.min,l=o.max-i;return a.clearListeners(),a.set(i),a.set(i),a.onChange((function(r){return n.setAxisTarget(e,r,r+l)})),null===(t=this.animateMotionValue)||void 0===t?void 0:t.call(this,e,a,0,r)},r.prototype.stopLayoutAnimation=function(){var e=this;na((function(r){return e.getAxisProgress()[r].stop()}))},r.prototype.withoutTransform=function(e){this.isLayoutProjectionEnabled&&this.resetTransform(),this.parent?this.parent.withoutTransform(e):e(),this.isLayoutProjectionEnabled&&(this.element.style.transform=this.style.transform)},r.prototype.updateLayoutDeltas=function(){var e,r;e=this.boxCorrected,r=this.box,zn(e.x,r.x),zn(e.y,r.y);var t=this.treeScale.x,n=this.treeScale.y;!function(e,r,t){var n=t.length;if(n){r.x=r.y=1;for(var a=0;a<n;a++){var o=t[a].delta;r.x*=o.x.scale,r.y*=o.y.scale,_n(e,o)}}}(this.boxCorrected,this.treeScale,this.treePath),ta(this.delta,this.boxCorrected,this.targetBox,this.layoutOrigin),this.hasViewportBoxUpdated&&this.viewportBoxUpdateListeners.notify(this.targetBox,this.delta),this.hasViewportBoxUpdated=!1;var a=xn(this.delta,this.treeScale);a===this.deltaTransform&&t===this.treeScale.x&&n===this.treeScale.y||this.scheduleRender(),this.deltaTransform=a},r.prototype.updateTransformDeltas=function(){var e,r,t;this.isLayoutProjectionEnabled&&this.box&&(e=this.targetBoxFinal,r=this.targetBox,t=this.latest,qn(e.x,r.x,t,Zn),qn(e.y,r.y,t,Jn),ta(this.deltaFinal,this.boxCorrected,this.targetBoxFinal,this.layoutOrigin))},r.prototype.build=function(){this.updateTransformDeltas(),void 0!==this.isVisible&&(this.style.visibility=this.isVisible?"visible":"hidden"),Vn(this.latest,this.style,this.vars,this.transform,this.transformOrigin,this.transformKeys,this.config,this.isLayoutProjectionEnabled&&!!this.box,this.delta,this.deltaFinal,this.treeScale,this.targetBoxFinal)},r.prototype.render=function(){for(var e in this.build(),Object.assign(this.element.style,this.style),this.vars)this.element.style.setProperty(e,this.vars[e])},r}(ln),Pa=function(e){return e.updateLayoutDelta()};function xa(e){var t=(0,r.useRef)(null);return null===t.current&&(t.current=e()),t.current}function Ra(e,r,t){return"string"==typeof e?e:Mr.transform(r+t*e)}var Ga=function(e,r){return Mr.transform(e*r)},Fa={offset:"stroke-dashoffset",array:"stroke-dasharray"},Wa={offset:"strokeDashoffset",array:"strokeDasharray"},Oa={x:0,y:0,width:0,height:0};var Ha=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox"]),La=/([a-z])([A-Z])/g,Ia=function(e){return e.replace(La,"$1-$2").toLowerCase()},Na=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.attrs={},r.defaultConfig={enableHardwareAcceleration:!1},r.config=r.defaultConfig,r}return Ye(r,e),r.prototype.mount=function(r){e.prototype.mount.call(this,r),this.measure()},r.prototype.measure=function(){var e=this;try{this.dimensions="function"==typeof this.element.getBBox?this.element.getBBox():this.element.getBoundingClientRect()}catch(e){this.dimensions={x:0,y:0,width:0,height:0}}"path"===this.element.tagName&&(this.totalPathLength=this.element.getTotalLength()),pr.render((function(){return e.render()}))},r.prototype.getBaseValue=function(r,t){var n=t[r];return void 0===n||Ma(n)?e.prototype.getBaseValue.call(this,r,t):n},r.prototype.clean=function(){e.prototype.clean.call(this),this.attrs={}},r.prototype.read=function(e){return e=Ha.has(e)?e:Ia(e),this.element.getAttribute(e)},r.prototype.build=function(){this.updateTransformDeltas(),function(e,r,t,n,a,o,i,l,s,u,c,d,h,f,g){var p=e.attrX,m=e.attrY,y=e.originX,S=e.originY,v=e.pathLength,C=e.pathSpacing,A=void 0===C?1:C,b=e.pathOffset,k=void 0===b?0:b;Vn($e(e,["attrX","attrY","originX","originY","pathLength","pathSpacing","pathOffset"]),n,t,a,o,i,l,c,d,h,f,g),n.transform&&(r.transform=n.transform,delete n.transform),(void 0!==y||void 0!==S||r.transform)&&(r.transformOrigin=function(e,r,t){return Ra(r,e.x,e.width)+" "+Ra(t,e.y,e.height)}(s||Oa,void 0!==y?y:.5,void 0!==S?S:.5)),void 0!==p&&(n.x=p),void 0!==m&&(n.y=m),void 0!==u&&void 0!==v&&function(e,r,t,n,a,o){void 0===n&&(n=1),void 0===a&&(a=0),void 0===o&&(o=!0);var i=o?Fa:Wa;e[i.offset]=Ga(-a,r);var l=Ga(t,r),s=Ga(n,r);e[i.array]=l+" "+s}(n,u,v,A,k,!1)}(this.latest,this.style,this.vars,this.attrs,this.transform,this.transformOrigin,this.transformKeys,this.config,this.dimensions,this.totalPathLength,this.isLayoutProjectionEnabled&&!!this.box,this.delta,this.deltaFinal,this.treeScale,this.targetBoxFinal)},r.prototype.render=function(){for(var r in e.prototype.render.call(this),this.attrs)this.element.setAttribute(Ha.has(r)?r:Ia(r),this.attrs[r])},r}(Ea),Va=new Set(["animate","circle","clipPath","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","foreignObject","g","image","line","linearGradient","marker","mask","metadata","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","switch","symbol","text","textPath","tspan","use","view"]);function za(e){return"string"==typeof e&&Va.has(e)}var Ka=(0,r.createContext)(null),Ua=(0,r.createContext)({variantContext:{}});function ja(){return(0,r.useContext)(Ua).variantContext}var _a=(0,r.createContext)(null),qa=(0,r.createContext)({transformPagePoint:function(e){return e},features:[],isStatic:!1});function Za(e){return(0,r.useEffect)((function(){return function(){return e()}}),[])}function Ja(e,r,t,n){return e.addEventListener(r,t,n),function(){return e.removeEventListener(r,t,n)}}function Ya(e,t,n,a){(0,r.useEffect)((function(){var r=e.current;if(n&&r)return Ja(r,t,n,a)}),[e,t,n,a])}function Qa(e){return"undefined"!=typeof PointerEvent&&e instanceof PointerEvent?!("mouse"!==e.pointerType):e instanceof MouseEvent}function $a(e){return!!e.touches}var Xa={pageX:0,pageY:0};function eo(e,r){void 0===r&&(r="page");var t=e.touches[0]||e.changedTouches[0]||Xa;return{x:t[r+"X"],y:t[r+"Y"]}}function ro(e,r){return void 0===r&&(r="page"),{x:e[r+"X"],y:e[r+"Y"]}}function to(e,r){return void 0===r&&(r="page"),{point:$a(e)?eo(e,r):ro(e,r)}}function no(e){return to(e,"client")}var ao=function(e,r){void 0===r&&(r=!1);var t,n=function(r){return e(r,to(r))};return r?(t=n,function(e){var r=e instanceof MouseEvent;(!r||r&&0===e.button)&&t(e)}):n},oo="undefined"!=typeof window,io={pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointercancel:"mousecancel",pointerover:"mouseover",pointerout:"mouseout",pointerenter:"mouseenter",pointerleave:"mouseleave"},lo={pointerdown:"touchstart",pointermove:"touchmove",pointerup:"touchend",pointercancel:"touchcancel"};function so(e){return oo&&null===window.onpointerdown?e:oo&&null===window.ontouchstart?lo[e]:oo&&null===window.onmousedown?io[e]:e}function uo(e,r,t,n){return Ja(e,so(r),ao(t,"pointerdown"===r),n)}function co(e,r,t,n){return Ya(e,so(r),t&&ao(t,"pointerdown"===r),n)}var ho=function(e){return 1e3*e},fo=function(){function e(e,r,t){var n=this,a=(void 0===t?{}:t).transformPagePoint;if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.updatePoint=function(){if(n.lastMoveEvent&&n.lastMoveEventInfo){var e=mo(n.lastMoveEventInfo,n.history),r=null!==n.startEvent,t=Zt(e.offset,{x:0,y:0})>=3;if(r||t){var a=e.point,o=gr().timestamp;n.history.push(Qe(Qe({},a),{timestamp:o}));var i=n.handlers,l=i.onStart,s=i.onMove;r||(l&&l(n.lastMoveEvent,e),n.startEvent=n.lastMoveEvent),s&&s(n.lastMoveEvent,e)}}},this.handlePointerMove=function(e,r){n.lastMoveEvent=e,n.lastMoveEventInfo=go(r,n.transformPagePoint),Qa(e)&&0===e.buttons?n.handlePointerUp(e,r):pr.update(n.updatePoint,!0)},this.handlePointerUp=function(e,r){n.end();var t=n.handlers.onEnd;if(t){var a=mo(go(r,n.transformPagePoint),n.history);t&&t(e,a)}},!($a(e)&&e.touches.length>1)){this.handlers=r,this.transformPagePoint=a;var o=go(to(e),this.transformPagePoint),i=o.point,l=gr().timestamp;this.history=[Qe(Qe({},i),{timestamp:l})];var s=r.onSessionStart;s&&s(e,mo(o,this.history)),this.removeListeners=ft(uo(window,"pointermove",this.handlePointerMove),uo(window,"pointerup",this.handlePointerUp),uo(window,"pointercancel",this.handlePointerUp))}}return e.prototype.updateHandlers=function(e){this.handlers=e},e.prototype.end=function(){this.removeListeners&&this.removeListeners(),cr.update(this.updatePoint)},e}();function go(e,r){return r?{point:r(e.point)}:e}function po(e,r){return{x:e.x-r.x,y:e.y-r.y}}function mo(e,r){var t=e.point;return{point:t,delta:po(t,So(r)),offset:po(t,yo(r)),velocity:vo(r,.1)}}function yo(e){return e[0]}function So(e){return e[e.length-1]}function vo(e,r){if(e.length<2)return{x:0,y:0};for(var t=e.length-1,n=null,a=So(e);t>=0&&(n=e[t],!(a.timestamp-n.timestamp>ho(r)));)t--;if(!n)return{x:0,y:0};var o=(a.timestamp-n.timestamp)/1e3;if(0===o)return{x:0,y:0};var i={x:(a.x-n.x)/o,y:(a.y-n.y)/o};return i.x===1/0&&(i.x=0),i.y===1/0&&(i.y=0),i}var Co=function(e,r){return!!r&&(e===r||Co(e,r.parentElement))},Ao={linear:Bt,easeIn:Dt,easeInOut:Mt,easeOut:Tt,circIn:Et,circInOut:xt,circOut:Pt,backIn:Rt,backInOut:Ft,backOut:Gt,anticipate:Wt,bounceIn:Ht,bounceInOut:function(e){return e<.5?.5*(1-Ot(1-2*e)):.5*Ot(2*e-1)+.5},bounceOut:Ot},bo=function(e){if(Array.isArray(e)){e.length;var r=Xe(e,4);return rn(r[0],r[1],r[2],r[3])}return"string"==typeof e?Ao[e]:e},ko=function(e,r){return!("zIndex"===e||"number"!=typeof r&&!Array.isArray(r)&&("string"!=typeof r||!_r.test(r)||r.startsWith("url(")))},wo=function(){return{type:"spring",stiffness:500,damping:25,restDelta:.5,restSpeed:10}},Bo=function(e){return{type:"spring",stiffness:550,damping:0===e?100:30,restDelta:.01,restSpeed:10}},Do=function(){return{type:"keyframes",ease:"linear",duration:.3}},To=function(e){return{type:"keyframes",duration:.8,values:e}},Mo={x:wo,y:wo,z:wo,rotate:wo,rotateX:wo,rotateY:wo,rotateZ:wo,scaleX:Bo,scaleY:Bo,scale:Bo,opacity:Do,backgroundColor:Do,color:Do,default:Bo};function Eo(e,r,t){var n,a,o,i;return Array.isArray(r.to)&&(null!==(n=e.duration)&&void 0!==n||(e.duration=.8)),function(e){Array.isArray(e.to)&&null===e.to[0]&&(e.to=er(e.to),e.to[0]=e.from)}(r),function(e){e.when,e.delay,e.delayChildren,e.staggerChildren,e.staggerDirection,e.repeat,e.repeatType,e.repeatDelay,e.from;var r=$e(e,["when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from"]);return!!Object.keys(r).length}(e)||(e=Qe(Qe({},e),(a=t,o=r.to,i=ia(o)?To:Mo[a]||Mo.default,Qe({to:o},i(o))))),Qe(Qe({},r),function(e){var r=e.ease,t=e.times,n=e.yoyo,a=e.flip,o=e.loop,i=$e(e,["ease","times","yoyo","flip","loop"]),l=Qe({},i);return t&&(l.offset=t),i.duration&&(l.duration=ho(i.duration)),i.repeatDelay&&(l.repeatDelay=ho(i.repeatDelay)),r&&(l.ease=function(e){return Array.isArray(e)&&"number"!=typeof e[0]}(r)?r.map(bo):bo(r)),"tween"===i.type&&(l.type="keyframes"),(n||o||a)&&(n?l.repeatType="reverse":o?l.repeatType="loop":a&&(l.repeatType="mirror"),l.repeat=o||n||a||i.repeat),"spring"!==i.type&&(l.type="keyframes"),l}(e))}function Po(e,r,t,n){return void 0===n&&(n={}),r.start((function(a){var o,i,l=function(e,r,t,n,a){var o,i=function(e,r){return e[r]||e.default||e}(n,e),l=null!==(o=i.from)&&void 0!==o?o:r.get(),s=ko(e,t);return"none"===l&&s&&"string"==typeof t&&(l=bn(e,t)),ko(e,l)&&s&&!1!==i.type?function(){var n={from:l,to:t,velocity:r.getVelocity(),onComplete:a,onUpdate:function(e){return r.set(e)}};return"inertia"===i.type||"decay"===i.type?function(e){var r,t=e.from,n=void 0===t?0:t,a=e.velocity,o=void 0===a?0:a,i=e.min,l=e.max,s=e.power,u=void 0===s?.8:s,c=e.timeConstant,d=void 0===c?750:c,h=e.bounceStiffness,f=void 0===h?500:h,g=e.bounceDamping,p=void 0===g?10:g,m=e.restDelta,y=void 0===m?1:m,S=e.modifyTarget,v=e.driver,C=e.onUpdate,A=e.onComplete;function b(e){return void 0!==i&&e<i||void 0!==l&&e>l}function k(e){return void 0===i?l:void 0===l||Math.abs(i-e)<Math.abs(l-e)?i:l}function w(e){null==r||r.stop(),r=Kt(Qe(Qe({},e),{driver:v,onUpdate:function(r){var t;null==C||C(r),null===(t=e.onUpdate)||void 0===t||t.call(e,r)},onComplete:A}))}function B(e){w(Qe({type:"spring",stiffness:f,damping:p,restDelta:y},e))}if(b(n))B({from:n,velocity:o,to:k(n)});else{var D=u*o+n;void 0!==S&&(D=S(D));var T,M,E=k(D),P=E===i?-1:1;w({type:"decay",from:n,velocity:o,timeConstant:d,power:u,restDelta:y,modifyTarget:S,onUpdate:b(D)?function(e){T=M,M=e,o=Ut(e-T,gr().delta),(1===P&&e>E||-1===P&&e<E)&&B({from:e,to:E,velocity:o})}:void 0})}return{stop:function(){return null==r?void 0:r.stop()}}}(Qe(Qe({},n),i)):Kt(Qe(Qe({},Eo(i,n,e)),{onUpdate:function(e){var r;n.onUpdate(e),null===(r=i.onUpdate)||void 0===r||r.call(i,e)},onComplete:function(){var e;n.onComplete(),null===(e=i.onComplete)||void 0===e||e.call(i)}}))}:function(){var e;return r.set(t),a(),null===(e=null==i?void 0:i.onComplete)||void 0===e||e.call(i),{stop:function(){}}}}(e,r,t,n,a),s=function(e,r){var t,n,a,o,i;return null!==(i=null!==(o=null!==(n=null===(t=e[r])||void 0===t?void 0:t.delay)&&void 0!==n?n:null===(a=e.default)||void 0===a?void 0:a.delay)&&void 0!==o?o:e.delay)&&void 0!==i?i:0}(n,e),u=function(){return i=l()};return s?o=setTimeout(u,ho(s)):u(),function(){clearTimeout(o),null==i||i.stop()}}))}function xo(e,r,t){var n;if(e.onAnimationStart(),Array.isArray(r)){var a=r.map((function(r){return Ro(e,r,t)}));n=Promise.all(a)}else n="string"==typeof r?Ro(e,r,t):Go(e,r,t);return n.then((function(){return e.onAnimationComplete()}))}function Ro(e,r,t){var n;void 0===t&&(t={});var a=Ca(e,r,t.custom),o=(a||{}).transition,i=void 0===o?e.getDefaultTransition()||{}:o;t.transitionOverride&&(i=t.transitionOverride);var l=a?function(){return Go(e,a,t)}:function(){return Promise.resolve()},s=(null===(n=e.variantChildrenOrder)||void 0===n?void 0:n.size)?function(n){void 0===n&&(n=0);var a=i.delayChildren,o=void 0===a?0:a,l=i.staggerChildren,s=i.staggerDirection;return function(e,r,t,n,a,o){void 0===t&&(t=0),void 0===n&&(n=0),void 0===a&&(a=1);var i=[],l=(e.variantChildrenOrder.size-1)*n,s=1===a?function(e){return void 0===e&&(e=0),e*n}:function(e){return void 0===e&&(e=0),l-e*n};return Array.from(e.variantChildrenOrder).forEach((function(e,n){var a=Ro(e,r,Qe(Qe({},o),{delay:t+s(n)}));i.push(a)})),Promise.all(i)}(e,r,o+n,l,s,t)}:function(){return Promise.resolve()},u=i.when;if(u){var c=Xe("beforeChildren"===u?[l,s]:[s,l],2),d=c[0],h=c[1];return d().then(h)}return Promise.all([l(),s(t.delay)])}function Go(e,r,t){var n,a=void 0===t?{}:t,o=a.delay,i=void 0===o?0:o,l=a.transitionOverride,s=a.type,u=e.makeTargetAnimatable(r),c=u.transition,d=void 0===c?e.getDefaultTransition():c,h=u.transitionEnd,f=$e(u,["transition","transitionEnd"]);l&&(d=l);var g=[],p=s&&(null===(n=e.animationState)||void 0===n?void 0:n.getProtectedKeys(s));for(var m in f){var y=e.getValue(m),S=f[m];if(y&&void 0!==S&&void 0===(null==p?void 0:p[m])){var v=Po(m,y,S,Qe({delay:i},d));g.push(v)}}return Promise.all(g).then((function(){h&&ba(e,h)}))}var Fo,Wo=function(){function e(){this.hasMounted=!1,this.pendingAnimations=[],this.subscribers=new Set}return e.prototype.subscribe=function(e){var r=this;return this.subscribers.add(e),function(){return r.subscribers.delete(e)}},e.prototype.start=function(e,r){var t=this;if(this.hasMounted){var n=[];return this.subscribers.forEach((function(t){n.push(xo(t,e,{transitionOverride:r}))})),Promise.all(n)}return new Promise((function(n){t.pendingAnimations.push({animation:[e,r],resolve:n})}))},e.prototype.set=function(e){return this.hasMounted,this.subscribers.forEach((function(r){wa(r,e)}))},e.prototype.stop=function(){this.subscribers.forEach((function(e){!function(e){e.forEachValue((function(e){return e.stop()}))}(e)}))},e.prototype.mount=function(){var e=this;this.hasMounted=!0,this.pendingAnimations.forEach((function(r){var t=r.animation,n=r.resolve;e.start.apply(e,er(t)).then(n)}))},e.prototype.unmount=function(){this.hasMounted=!1,this.stop()},e}();!function(e){e.Animate="animate",e.Hover="whileHover",e.Tap="whileTap",e.Drag="whileDrag",e.Focus="whileFocus",e.Exit="exit"}(Fo||(Fo={}));var Oo=[Fo.Animate,Fo.Hover,Fo.Tap,Fo.Drag,Fo.Focus,Fo.Exit],Ho=er(Oo).reverse(),Lo=Oo.length;function Io(e){return void 0===e&&(e=!1),{isActive:e,protectedKeys:{},prevResolvedValues:{}}}function No(e){var r=null;return function(){return null===r&&(r=e,function(){r=null})}}var Vo=No("dragHorizontal"),zo=No("dragVertical");function Ko(e){var r=!1;if("y"===e)r=zo();else if("x"===e)r=Vo();else{var t=Vo(),n=zo();t&&n?r=function(){t(),n()}:(t&&t(),n&&n())}return r}function Uo(e,r,t){return function(n,a){var o;Qa(n)&&e.isHoverEventsEnabled&&(null==t||t(n,a),null===(o=e.animationState)||void 0===o||o.setActive(Fo.Hover,r))}}function jo(e,t){var n,a,o,i,l,s,u,c,d,h;a=t,o=(n=e).onPan,i=n.onPanStart,l=n.onPanEnd,s=n.onPanSessionStart,u=o||i||l||s,c=(0,r.useRef)(null),d=(0,r.useContext)(qa).transformPagePoint,h={onSessionStart:s,onStart:i,onMove:o,onEnd:function(e,r){c.current=null,l&&l(e,r)}},(0,r.useEffect)((function(){null!==c.current&&c.current.updateHandlers(h)})),co(a,"pointerdown",u&&function(e){c.current=new fo(e,h,{transformPagePoint:d})}),Za((function(){return c.current&&c.current.end()})),function(e,t){var n=e.onTap,a=e.onTapStart,o=e.onTapCancel,i=e.whileTap,l=n||a||o||i,s=(0,r.useRef)(!1),u=(0,r.useRef)(null);function c(){var e;null===(e=u.current)||void 0===e||e.call(u),u.current=null}function d(){var e,r;return s.current=!1,null===(e=t.animationState)||void 0===e||e.setActive(Fo.Tap,!1),!(!(r=Ko(!0))||(r(),0))}function h(e,r){d()&&(Co(t.getInstance(),e.target)?null==n||n(e,r):null==o||o(e,r))}function f(e,r){d()&&(null==o||o(e,r))}co(t,"pointerdown",l?function(e,r){var n;c(),s.current||(s.current=!0,u.current=ft(uo(window,"pointerup",h),uo(window,"pointercancel",f)),null==a||a(e,r),null===(n=t.animationState)||void 0===n||n.setActive(Fo.Tap,!0))}:void 0),Za(c)}(e,t),function(e,r){var t=e.onHoverStart,n=e.onHoverEnd,a=e.whileHover;co(r,"pointerenter",t||a?Uo(r,!0,t):void 0),co(r,"pointerleave",n||a?Uo(r,!1,n):void 0)}(e,t),function(e,r){var t=e.whileFocus;Ya(r,"focus",t?function(){var e;null===(e=r.animationState)||void 0===e||e.setActive(Fo.Focus,!0)}:void 0),Ya(r,"blur",t?function(){var e;null===(e=r.animationState)||void 0===e||e.setActive(Fo.Focus,!1)}:void 0)}(e,t)}var _o=function(e){return function(r){return e(r),null}},qo=["onPan","onPanStart","onPanEnd","onPanSessionStart","onTap","onTapStart","onTapCancel","onHoverStart","onHoverEnd","whileFocus","whileTap","whileHover"],Zo=_o((function(e){var r=e.visualElement;jo($e(e,["visualElement"]),r)})),Jo={key:"gestures",shouldRender:function(e){return qo.some((function(r){return e.hasOwnProperty(r)}))},getComponent:function(){return Zo}},Yo=new Set(er(["initial","animate","exit","style","variants","transition","transformTemplate","transformValues","custom","inherit","layout","layoutId","onLayoutAnimationComplete","onViewportBoxUpdate","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","drag","dragControls","dragListener","dragConstraints","dragDirectionLock","_dragX","_dragY","dragElastic","dragMomentum","dragPropagation","dragTransition","whileDrag"],qo));function Qo(e){return Yo.has(e)}var $o=function(e){return!Qo(e)};try{var Xo=t(8594).Z;$o=function(e){return e.startsWith("on")?!Qo(e):Xo(e)}}catch(e){}function ei(e,r){var t=r.layout,n=r.layoutId;return Tn(e)||En(e)||(t||void 0!==n)&&!!Nn[e]}function ri(e,r,t,n,a){for(var o in void 0===n&&(n=!1),n&&(e.reactStyle={}),t){var i=t[o],l=!1;Ma(i)?ai.has(o)||(e.addValue(o,i),l=!0):ei(o,a)?(e.hasValue(o)?i!==r[o]&&(Ma(r[o])?e.addValue(o,on(i)):e.getValue(o).set(i)):e.addValue(o,on(i)),l=!0):n&&(e.reactStyle[o]=i),l&&(r[o]=i)}}var ti,ni,ai=new Set([]),oi=function(){return{}};!function(e){e[e.Entering=0]="Entering",e[e.Present=1]="Present",e[e.Exiting=2]="Exiting"}(ti||(ti={})),function(e){e[e.Hide=0]="Hide",e[e.Show=1]="Show"}(ni||(ni={}));var ii={measureLayout:function(e){return e.measureLayout()},layoutReady:function(e){return e.layoutReady()}},li=function(e,r){return e.depth-r.depth};function si(){var e=new Set;return{add:function(r){return e.add(r)},flush:function(r){var t=void 0===r?ii:r,n=t.measureLayout,a=t.layoutReady,o=t.parent,i=Array.from(e).sort(li),l=function(){i.forEach((function(e){return e.resetTransform()})),i.forEach(n)};o?o.withoutTransform(l):l(),i.forEach(a),i.forEach((function(e){e.isPresent&&(e.presence=ti.Present)})),e.clear()}}}function ui(e){return!!e.forceUpdate}var ci=(0,r.createContext)(si()),di=(0,r.createContext)(si()),hi="undefined"!=typeof window?r.useLayoutEffect:r.useEffect;function fi(){var e=(0,r.useContext)(Ka);if(null===e)return[!0,null];var t=e.isPresent,n=e.onExitComplete,a=e.register,o=mi();return(0,r.useEffect)((function(){return a(o)}),[]),!t&&n?[!1,function(){return null==n?void 0:n(o)}]:[!0]}var gi=0,pi=function(){return gi++},mi=function(){return xa(pi)};function yi(e,t){void 0===t&&(t=!1);var n=(0,r.useRef)(!0);(!t||t&&n.current)&&e(),n.current=!1}function Si(e){var r=e.animate,t=e.variants,n=e.inherit;return null!=n?n:!!t&&!r}var vi=er(["initial"],Oo),Ci=vi.length;function Ai(e){return"string"==typeof e||Array.isArray(e)}function bi(e,t){var n=t.defaultFeatures,a=t.useVisualElement,o=t.useRender;return(0,r.forwardRef)((function(t,i){var l=(0,r.useContext)(qa).isStatic,s=a(e,t,l,i);!function(e,r){var t=xa(oi);for(var n in t){var a=ei(n,r),o=void 0!==r[n],i=r.style&&void 0!==r.style[n],l=o&&Ma(r[n]),s=i&&Ma(r.style[n]);(a&&!o&&!i||!a&&!l&&!s)&&(e.removeValue(n),delete t[n])}ri(e,t,r,!1,r),r.style&&ri(e,t,r.style,!0,r),r.transformValues&&(e.reactStyle=r.transformValues(e.reactStyle))}(s,t);var u=function(e,t,n){var a,o,i,l=ja(),s=(0,r.useContext)(Ka),u=Si(t),c=[],d={},h=!1;(function(e){var r;return"function"==typeof(null===(r=e.animate)||void 0===r?void 0:r.start)||Ai(e.animate)||Ai(e.whileHover)||Ai(e.whileDrag)||Ai(e.whileTap)||Ai(e.whileFocus)||Ai(e.exit)})(t)&&(h=!0,l={});for(var f=h||t.variants,g=0;g<Ci;g++){var p=vi[g],m=t[p],y=l[p];Ai(m)||!1===m?(d[p]=m,c.push(m)):((Ai(y)||!1===y)&&(d[p]=y),c.push(null)),c.push(Ai(y)?y:null)}var S=null!==(a=t.animate)&&void 0!==a?a:d.animate,v=t.initial;void 0!==v||!Ai(S)&&!1===d.initial||(v=d.initial),!1===(null==s?void 0:s.initial)&&(v=d.initial=!1),d.parent=f?e:l.parent,yi((function(){var r=!1===v?S:v;r&&"boolean"!=typeof r&&!function(e){return"object"==typeof e&&"function"==typeof e.start}(r)&&wa(e,r)}),!n),yi((function(){e.forEachValue((function(r,t){e.baseTarget[t]=r.get()}))}),!0);var C,A=(0,r.useMemo)((function(){return d}),c);return f&&u&&!h&&(C=null===(o=l.parent)||void 0===o?void 0:o.addVariantChild(e),e.inheritsVariants=!0),!h&&u&&(null===(i=e.parent)||void 0===i?void 0:i.isMounted)&&!1!==v&&S&&(e.manuallyAnimateOnMount=!0),(0,r.useEffect)((function(){return e.isMounted=!0,function(){e.isMounted=!1,null==C||C()}}),[]),hi((function(){var r;(function(e){return null===e||e.isPresent})(s)&&(null===(r=e.variantChildrenOrder)||void 0===r||r.clear())})),(0,r.useEffect)((function(){var r;f&&(null===(r=l.parent)||void 0===r||r.addVariantChildOrder(e))})),A}(s,t,l),c=function(e,t,n,a){var o=(0,r.useContext)(qa);if(t||"undefined"==typeof window)return null;for(var i=er(e,o.features),l=i.length,s=[],u=0;u<l;u++){var c=i[u],d=c.shouldRender,h=c.key,f=c.getComponent;if(d(a)){var g=f(a);g&&s.push((0,r.createElement)(g,Qe({key:h},a,{visualElement:n})))}}return s}(n,l,s,t),d=(0,r.useMemo)((function(){return{visualElement:s,variantContext:u}}),[s,u]),h=o(e,t,s);return function(e){var t=(0,r.useContext)(ci),n=(0,r.useContext)(di);hi((function(){return function(){ui(t)&&t.remove(e),ui(n)&&n.remove(e)}}),[])}(s),(0,r.createElement)(r.Fragment,null,(0,r.createElement)(Ua.Provider,{value:d},h),c)}))}function ki(e,r,t){var n=r.min,a=r.max;return void 0!==n&&e<n?e=t?ot(n,e,t):Math.max(e,n):void 0!==a&&e>a&&(e=t?ot(a,e,t):Math.min(e,a)),e}function wi(e,r,t){return{min:void 0!==r?e.min+r:void 0,max:void 0!==t?e.max+t-(e.max-e.min):void 0}}function Bi(e,r){var t,n=r.min-e.min,a=r.max-e.max;return r.max-r.min<e.max-e.min&&(n=(t=Xe([a,n],2))[0],a=t[1]),{min:e.min+n,max:e.min+a}}var Di,Ti=new WeakMap,Mi=function(){function e(e){var r=e.visualElement;this.isDragging=!1,this.currentDirection=null,this.constraints=!1,this.props={},this.hasMutatedConstraints=!1,this.cursorProgress={x:.5,y:.5},this.originPoint={},this.openGlobalLock=null,this.panSession=null,this.visualElement=r,this.visualElement.enableLayoutProjection(),Ti.set(r,this)}return e.prototype.start=function(e,r){var t=this,n=void 0===r?{}:r,a=n.snapToCursor,o=void 0!==a&&a,i=n.cursorProgress;o&&this.snapToCursor(e);var l=this.props.transformPagePoint;this.panSession=new fo(e,{onSessionStart:function(){t.stopMotion()},onStart:function(e,r){var n,a,o,l=t.props,s=l.drag,u=l.dragPropagation;if(!s||u||(t.openGlobalLock&&t.openGlobalLock(),t.openGlobalLock=Ko(s),t.openGlobalLock)){t.prepareBoundingBox(),t.visualElement.lockTargetBox(),t.resolveDragConstraints();var c=no(e).point;na((function(e){var r=t.visualElement.targetBox[e],n=r.min,a=r.max;t.cursorProgress[e]=i?i[e]:at(n,a,c[e]);var o=t.getAxisMotionValue(e);o&&(t.originPoint[e]=o.get())})),t.isDragging=!0,t.currentDirection=null,null===(a=(n=t.props).onDragStart)||void 0===a||a.call(n,e,r),null===(o=t.visualElement.animationState)||void 0===o||o.setActive(Fo.Drag,!0)}},onMove:function(e,r){var n,a,o,i,l=t.props,s=l.dragPropagation,u=l.dragDirectionLock;if(s||t.openGlobalLock){var c=r.offset;if(u&&null===t.currentDirection)return t.currentDirection=function(e,r){void 0===r&&(r=10);var t=null;return Math.abs(e.y)>r?t="y":Math.abs(e.x)>r&&(t="x"),t}(c),void(null!==t.currentDirection&&(null===(a=(n=t.props).onDirectionLock)||void 0===a||a.call(n,t.currentDirection)));t.updateAxis("x",e,c),t.updateAxis("y",e,c),null===(i=(o=t.props).onDrag)||void 0===i||i.call(o,e,r),Di=e}},onEnd:function(e,r){return t.stop(e,r)}},{transformPagePoint:l})},e.prototype.prepareBoundingBox=function(){var e=this.visualElement;e.withoutTransform((function(){e.measureLayout()})),e.rebaseTargetBox(!0,e.getBoundingBoxWithoutTransforms())},e.prototype.resolveDragConstraints=function(){var e,r,t,n,a,o,i=this,l=this.props.dragConstraints;this.constraints=!!l&&(tn(l)?this.resolveRefConstraints(this.visualElement.box,l):(e=this.visualElement.box,t=(r=l).top,n=r.left,a=r.bottom,o=r.right,{x:wi(e.x,n,o),y:wi(e.y,t,a)})),this.constraints&&!this.hasMutatedConstraints&&na((function(e){var r,t,n;i.getAxisMotionValue(e)&&(i.constraints[e]=(r=i.visualElement.box[e],n={},void 0!==(t=i.constraints[e]).min&&(n.min=t.min-r.min),void 0!==t.max&&(n.max=t.max-r.min),n))}))},e.prototype.resolveRefConstraints=function(e,r){var t=this.props,n=t.onMeasureDragConstraints,a=t.transformPagePoint,o=r.current;this.constraintsBox=aa(o,a);var i=function(e,r){return{x:Bi(e.x,r.x),y:Bi(e.y,r.y)}}(e,this.constraintsBox);if(n){var l=n(function(e){var r=e.x,t=e.y;return{top:t.min,bottom:t.max,left:r.min,right:r.max}}(i));this.hasMutatedConstraints=!!l,l&&(i=un(l))}return i},e.prototype.cancelDrag=function(){var e;this.isDragging=!1,this.panSession&&this.panSession.end(),this.panSession=null,!this.props.dragPropagation&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),null===(e=this.visualElement.animationState)||void 0===e||e.setActive(Fo.Drag,!1)},e.prototype.stop=function(e,r){var t;this.visualElement.unlockTargetBox(),null===(t=this.panSession)||void 0===t||t.end(),this.panSession=null;var n=this.isDragging;if(this.cancelDrag(),n){var a=this.props,o=a.dragMomentum,i=a.dragElastic,l=a.onDragEnd;if(o||i){var s=r.velocity;this.animateDragEnd(s)}null==l||l(e,r)}},e.prototype.snapToCursor=function(e){var r=this;this.prepareBoundingBox(),na((function(t){if(Ei(t,r.props.drag,r.currentDirection)){var n=r.getAxisMotionValue(t);if(n){var a=no(e).point,o=r.visualElement.box,i=o[t].max-o[t].min,l=o[t].min+i/2,s=a[t]-l;r.originPoint[t]=a[t],n.set(s)}else r.cursorProgress[t]=.5,r.updateVisualElementAxis(t,e)}}))},e.prototype.updateAxis=function(e,r,t){if(Ei(e,this.props.drag,this.currentDirection))return this.getAxisMotionValue(e)?this.updateAxisMotionValue(e,t):this.updateVisualElementAxis(e,r)},e.prototype.updateAxisMotionValue=function(e,r){var t=this.getAxisMotionValue(e);if(r&&t){var n=this.props.dragElastic,a=this.originPoint[e]+r[e],o=this.constraints?ki(a,this.constraints[e],n):a;t.set(o)}},e.prototype.updateVisualElementAxis=function(e,r){var t,n=this.props.dragElastic,a=this.visualElement.box[e],o=a.max-a.min,i=this.cursorProgress[e],l=function(e,r,t,n,a){var o=e-r*t;return n?ki(o,n,a):o}(no(r).point[e],o,i,null===(t=this.constraints)||void 0===t?void 0:t[e],n);this.visualElement.setAxisTarget(e,l,l+o)},e.prototype.updateProps=function(e){var r=e.drag,t=void 0!==r&&r,n=e.dragDirectionLock,a=void 0!==n&&n,o=e.dragPropagation,i=void 0!==o&&o,l=e.dragConstraints,s=void 0!==l&&l,u=e.dragElastic,c=void 0===u?.35:u,d=e.dragMomentum,h=void 0===d||d,f=$e(e,["drag","dragDirectionLock","dragPropagation","dragConstraints","dragElastic","dragMomentum"]);this.props=Qe({drag:t,dragDirectionLock:a,dragPropagation:i,dragConstraints:s,dragElastic:c,dragMomentum:h},f)},e.prototype.getAxisMotionValue=function(e){var r=this.props,t=r.layout,n=r.layoutId,a="_drag"+e.toUpperCase();return this.props[a]?this.props[a]:t||void 0!==n?void 0:this.visualElement.getValue(e,0)},e.prototype.animateDragEnd=function(e){var r=this,t=this.props,n=t.drag,a=t.dragMomentum,o=t.dragElastic,i=t.dragTransition,l=na((function(t){if(Ei(t,n,r.currentDirection)){var l=r.constraints?r.constraints[t]:{},s=o?200:1e6,u=o?40:1e7,c=Qe(Qe({type:"inertia",velocity:a?e[t]:0,bounceStiffness:s,bounceDamping:u,timeConstant:750,restDelta:1,restSpeed:10},i),l);return r.getAxisMotionValue(t)?r.startAxisValueAnimation(t,c):r.visualElement.startLayoutAxisAnimation(t,c)}}));return Promise.all(l).then((function(){var e,t;null===(t=(e=r.props).onDragTransitionEnd)||void 0===t||t.call(e)}))},e.prototype.stopMotion=function(){var e=this;na((function(r){var t=e.getAxisMotionValue(r);t?t.stop():e.visualElement.stopLayoutAnimation()}))},e.prototype.startAxisValueAnimation=function(e,r){var t=this.getAxisMotionValue(e);if(t){var n=t.get();return t.set(n),t.set(n),Po(e,t,0,r)}},e.prototype.scalePoint=function(){var e=this,r=this.props,t=r.drag,n=r.dragConstraints;if(tn(n)&&this.constraintsBox){this.stopMotion();var a={x:0,y:0};na((function(r){a[r]=ea(e.visualElement.targetBox[r],e.constraintsBox[r])})),this.prepareBoundingBox(),this.resolveDragConstraints(),na((function(r){if(Ei(r,t,null)){var n=function(e,r,t){var n=e.max-e.min,a=ot(r.min,r.max-n,t);return{min:a,max:a+n}}(e.visualElement.targetBox[r],e.constraintsBox[r],a[r]),o=n.min,i=n.max;e.visualElement.setAxisTarget(r,o,i)}}))}},e.prototype.mount=function(e){var r=this,t=uo(e.getInstance(),"pointerdown",(function(e){var t=r.props,n=t.drag,a=t.dragListener;n&&(void 0===a||a)&&r.start(e)})),n=Ja(window,"resize",(function(){r.scalePoint()})),a=e.onLayoutUpdate((function(){r.isDragging&&r.resolveDragConstraints()})),o=e.prevSnapshot;return(null==o?void 0:o.isDragging)&&this.start(Di,{cursorProgress:o.cursorProgress}),function(){null==t||t(),null==n||n(),null==a||a(),r.cancelDrag()}},e}();function Ei(e,r,t){return!(!0!==r&&r!==e||null!==t&&t!==e)}var Pi=_o((function(e){var t=e.visualElement;return function(e,t){var n=e.dragControls,a=(0,r.useContext)(qa).transformPagePoint,o=xa((function(){return new Mi({visualElement:t})}));o.updateProps(Qe(Qe({},e),{transformPagePoint:a})),(0,r.useEffect)((function(){return n&&n.subscribe(o)}),[o]),(0,r.useEffect)((function(){return o.mount(t)}),[])}($e(e,["visualElement"]),t)})),xi={key:"drag",shouldRender:function(e){return!!e.drag||!!e.dragControls},getComponent:function(){return Pi}},Ri=_o((function(e){var t=e.custom,n=e.visualElement,a=Xe(fi(),2),o=a[0],i=a[1],l=(0,r.useContext)(Ka);(0,r.useEffect)((function(){var e,r,a=null===(e=n.animationState)||void 0===e?void 0:e.setActive(Fo.Exit,!o,{custom:null!==(r=null==l?void 0:l.custom)&&void 0!==r?r:t});!o&&(null==a||a.then(i))}),[o])})),Gi={key:"exit",shouldRender:function(e){return!!e.exit&&!Si(e)},getComponent:function(){return Ri}},Fi=_o((function(e){var t=e.visualElement,n=e.animate;t.animationState||(t.animationState=function(e){var r,t,n,a=function(e){return function(r){return Promise.all(r.map((function(r){var t=r.animation,n=r.options;return xo(e,t,n)})))}}(e),o=((r={})[Fo.Animate]=Io(!0),r[Fo.Hover]=Io(),r[Fo.Tap]=Io(),r[Fo.Drag]=Io(),r[Fo.Focus]=Io(),r[Fo.Exit]=Io(),r),i=!0,l=function(r,t){var n=Ca(e,t);if(n){n.transition;var a=n.transitionEnd,o=$e(n,["transition","transitionEnd"]);r=Qe(Qe(Qe({},r),o),a)}return r};function s(r,s,u,c){void 0===s&&(s={}),t=r,n=s;var d=[],h=new Set,f={};r.variants&&e.updateConfig(Qe(Qe({},e.config),{variants:r.variants}));for(var g=1/0,p=function(t){var n=Ho[t],a=o[n],p=null!==(b=r[n])&&void 0!==b?b:s[n],m=function(e){return"string"==typeof e||va(e)}(p),y=n===c?a.isActive:null;!1===y&&(g=t);var S=p===s[n]&&m;if(S&&i&&e.manuallyAnimateOnMount&&(S=!1),i&&n===Fo.Animate&&e.prevSnapshot&&(i=!1,a.prevResolvedValues=e.prevSnapshot),a.protectedKeys=Qe({},f),!a.isActive&&null===y||!p&&!a.prevProp||p instanceof Wo||"boolean"==typeof p)return"continue";var v=function(e,r){return"string"==typeof r?r!==e:!!va(r)&&!function(e,r){if(!Array.isArray(r))return!1;var t=r.length;if(t!==e.length)return!1;for(var n=0;n<t;n++)if(r[n]!==e[n])return!1;return!0}(r,e)}(a.prevProp,p)||n===c&&a.isActive&&!S&&m||t>g&&m,C=Array.isArray(p)?p:[p],A=C.reduce(l,{});!1===y&&(A={});var b=a.prevResolvedValues,k=void 0===b?{}:b,w=Qe(Qe({},k),A);for(var B in w){var D=A[B],T=k[B];f.hasOwnProperty(B)||(D!==T?void 0!==D?(v=!0,h.delete(B)):h.add(B):void 0!==D&&h.has(B)?(v=!0,h.delete(B)):a.protectedKeys[B]=!0)}a.prevProp=p,a.prevResolvedValues=A,a.isActive&&(f=Qe(Qe({},f),A)),v&&!S&&d.push.apply(d,er(C.map((function(e){return{animation:e,options:Qe({type:n},u)}}))))},m=0;m<Lo;m++)p(m);if(h.size){var y={};h.forEach((function(t){var n=e.getBaseValue(t,r);void 0!==n&&(y[t]=n)})),d.push({animation:y})}var S=Boolean(d.length);return i&&!1===r.initial&&!e.manuallyAnimateOnMount&&(S=!1),i=!1,S?a(d):Promise.resolve()}return{getProtectedKeys:function(e){return o[e].protectedKeys},setProps:s,setActive:function(r,a,i){var l;return o[r].isActive===a?Promise.resolve():(null===(l=e.variantChildrenOrder)||void 0===l||l.forEach((function(e){var t;return null===(t=e.animationState)||void 0===t?void 0:t.setActive(r,a)})),o[r].isActive=a,s(t,n,i,r))},setAnimateFunction:function(r){a=r(e)}}}(t));var a=ja();(0,r.useEffect)((function(){t.animationState.setProps(e,t.inheritsVariants?a:void 0)})),n instanceof Wo&&function(e,t){var n=(0,r.useMemo)((function(){return t.subscribe(e)}),[t]);Za((function(){return null==n?void 0:n()}))}(t,n)})),Wi={key:"animation",shouldRender:function(){return!0},getComponent:function(e){var r=e.animate,t=e.whileHover,n=e.whileFocus,a=e.whileTap,o=e.whileDrag,i=e.exit,l=e.variants;return r||t||n||a||o||i||l?Fi:void 0}},Oi=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.frameTarget={x:{min:0,max:0},y:{min:0,max:0}},r.stopAxisAnimation={x:void 0,y:void 0},r.animate=function(e,t,n){void 0===n&&(n={});var a=n.originBox,o=n.targetBox,i=n.visibilityAction,l=n.shouldStackAnimate,s=$e(n,["originBox","targetBox","visibilityAction","shouldStackAnimate"]),u=r.props,c=u.visualElement,d=u.layout;if(!1===l)return r.safeToRemove();var h=Li(t=a||t,e=o||e),f=na((function(n){if("position"===d){var a=e[n].max-e[n].min;t[n].max=t[n].min+a}if(!c.isTargetBoxLocked)return void 0===i?h?r.animateAxis(n,e[n],t[n],s):c.setAxisTarget(n,e[n].min,e[n].max):void(i===ni.Hide?c.hide():c.show())}));return c.render(),Promise.all(f).then((function(){var e,t;null===(t=(e=r.props).onLayoutAnimationComplete)||void 0===t||t.call(e),c.isPresent?c.presence=ti.Present:r.safeToRemove()}))},r}return Ye(r,e),r.prototype.componentDidMount=function(){var e=this,r=this.props.visualElement;r.animateMotionValue=Po,r.enableLayoutProjection(),this.unsubLayoutReady=r.onLayoutUpdate(this.animate),r.updateConfig(Qe(Qe({},r.config),{safeToRemove:function(){return e.safeToRemove()}}))},r.prototype.componentWillUnmount=function(){var e=this;this.unsubLayoutReady(),na((function(r){var t,n;return null===(n=(t=e.stopAxisAnimation)[r])||void 0===n?void 0:n.call(t)}))},r.prototype.animateAxis=function(e,r,t,n){var a,o,i=void 0===n?{}:n,l=i.transition,s=i.crossfadeOpacity;null===(o=(a=this.stopAxisAnimation)[e])||void 0===o||o.call(a);var u,c=this.props.visualElement,d=this.frameTarget[e],h=c.getAxisProgress()[e];h.clearListeners(),h.set(0),h.set(0),s&&(u=this.createCrossfadeAnimation(s),c.show());var f=function(){var n=h.get()/1e3;!function(e,r,t,n){e.min=ot(r.min,t.min,n),e.max=ot(r.max,t.max,n)}(d,t,r,n),c.setAxisTarget(e,d.min,d.max),null==u||u(n)};f(),c.updateLayoutDelta();var g=h.onChange(f),p=Po("x"===e?"layoutX":"layoutY",h,1e3,l||this.props.transition||zi).then(g);return this.stopAxisAnimation[e]=function(){h.stop(),g()},p},r.prototype.createCrossfadeAnimation=function(e){var r=this.props.visualElement.getValue("opacity",0);return function(t){r.set(Ui(ot(0,1,t))),e.set(ji(ot(1,0,t)))}},r.prototype.safeToRemove=function(){var e,r;null===(r=(e=this.props).safeToRemove)||void 0===r||r.call(e)},r.prototype.render=function(){return null},r}(r.Component);function Hi(e){var t=Xe(fi(),2)[1];return(0,r.createElement)(Oi,Qe({},e,{safeToRemove:t}))}function Li(e,r){return!(Ni(e)||Ni(r)||Vi(e.x,r.x)&&Vi(e.y,r.y))}var Ii={min:0,max:0};function Ni(e){return Vi(e.x,Ii)&&Vi(e.y,Ii)}function Vi(e,r){return e.min===r.min&&e.max===r.max}var zi={duration:.45,ease:[.4,0,.1,1]};function Ki(e,r,t){return function(n){return n<e?0:n>r?1:t(at(e,r,n))}}var Ui=Ki(0,.5,Pt),ji=Ki(.5,.95,Bt),_i={key:"animate-layout",shouldRender:function(e){return!!e.layout||!!e.layoutId},getComponent:function(){return Hi}},qi=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return Ye(r,e),r.prototype.componentDidMount=function(){var e=this.props,r=e.syncLayout,t=e.framerSyncLayout,n=e.visualElement;ui(r)&&r.register(n),ui(t)&&t.register(n)},r.prototype.getSnapshotBeforeUpdate=function(){var e=this.props,r=e.syncLayout,t=e.visualElement;return ui(r)?r.syncUpdate():(t.snapshotBoundingBox(),r.add(t)),null},r.prototype.componentDidUpdate=function(){var e=this.props,r=e.syncLayout,t=e.visualElement;ui(r)||r.flush(),t.rebaseTargetBox()},r.prototype.render=function(){return null},r}(r.Component);function Zi(e){var t=(0,r.useContext)(ci),n=(0,r.useContext)(di);return r.createElement(qi,Qe({},e,{syncLayout:t,framerSyncLayout:n}))}var Ji={useVisualElement:function(e,t,n,a){var o=(0,r.useContext)(Ua).visualElement,i=xa((function(){return new(za(e)?Na:Ea)(o,a)}));n&&(i.values.clear(),i.latest={}),i.updateConfig(Qe(Qe(Qe({},i.config),{enableHardwareAcceleration:!n}),t));var l=(0,r.useContext)(_a);i.layoutId=l&&t.layoutId?l+"-"+t.layoutId:t.layoutId;var s=(0,r.useContext)(Ka),u=null===s||s.isPresent;i.isPresent=void 0!==t.isPresent?t.isPresent:u;var c=null==s?void 0:s.id;return i.isPresenceRoot=!o||o.presenceId!==c,(0,r.useEffect)((function(){if(t.onViewportBoxUpdate)return i.onViewportBoxUpdate(t.onViewportBoxUpdate)}),[t.onViewportBoxUpdate]),i},useRender:function(e,t,n){var a="string"==typeof e?function(e){var r={};for(var t in e)$o(t)&&(r[t]=e[t]);return r}(t):t;n.clean(),n.build();var o=za(e)?function(e){return Qe(Qe({},e.attrs),{style:Qe({},e.reactStyle)})}(n):function(e,r){var t=r.drag,n={},a=Qe(Qe(Qe({},e.reactStyle),e.style),e.vars);return t&&(n.draggable=!1,a.userSelect=a.WebkitUserSelect=a.WebkitTouchCallout="none",a.touchAction=!0===t?"none":"pan-"+("x"===t?"y":"x")),n.style=a,n}(n,t);return(0,r.createElement)(e,Qe(Qe(Qe({},a),{ref:n.ref}),o))}};function Yi(e){var r=Qe(Qe({},Ji),{defaultFeatures:e}),t=new Map;return new Proxy({custom:function(e){return bi(e,r)}},{get:function(e,n){return"custom"===n?e.custom:(t.has(n)||t.set(n,bi(n,r)),t.get(n))}})}var Qi=Yi([{key:"measure-layout",shouldRender:function(e){return!!e.drag||!!e.layout||!!e.layoutId},getComponent:function(){return Zi}},Wi,xi,Jo,Gi,_i]),$i=0;function Xi(){var e=$i;return $i++,e}var el=function(e){var t=e.children,n=e.initial,a=e.isPresent,o=e.onExitComplete,i=e.custom,l=e.presenceAffectsLayout,s=xa(rl),u=xa(Xi),c=(0,r.useMemo)((function(){return{id:u,initial:n,isPresent:a,custom:i,onExitComplete:function(e){s.set(e,!0);var r=!0;s.forEach((function(e){e||(r=!1)})),r&&(null==o||o())},register:function(e){return s.set(e,!1),function(){return s.delete(e)}}}}),l?void 0:[a]);return(0,r.useMemo)((function(){s.forEach((function(e,r){return s.set(r,!1)}))}),[a]),(0,r.createElement)(Ka.Provider,{value:c},t)};function rl(){return new Map}function tl(e){return e.key||""}var nl=function(e){var t=e.children,n=e.custom,a=e.initial,o=void 0===a||a,i=e.onExitComplete,l=e.exitBeforeEnter,s=e.presenceAffectsLayout,u=void 0===s||s,c=function(){var e=(0,r.useRef)(!1),t=Xe((0,r.useState)(0),2),n=t[0],a=t[1];return Za((function(){return e.current=!0})),(0,r.useCallback)((function(){!e.current&&a(n+1)}),[n])}(),d=(0,r.useContext)(ci);ui(d)&&(c=d.forceUpdate);var h=(0,r.useRef)(!0),f=function(e){var t=[];return r.Children.forEach(e,(function(e){(0,r.isValidElement)(e)&&t.push(e)})),t}(t),g=(0,r.useRef)(f),p=(0,r.useRef)(new Map).current,m=(0,r.useRef)(new Set).current;if(function(e,r){e.forEach((function(e){var t=tl(e);r.set(t,e)}))}(f,p),h.current)return h.current=!1,(0,r.createElement)(r.Fragment,null,f.map((function(e){return(0,r.createElement)(el,{key:tl(e),isPresent:!0,initial:!!o&&void 0,presenceAffectsLayout:u},e)})));for(var y=er(f),S=g.current.map(tl),v=f.map(tl),C=S.length,A=0;A<C;A++){var b=S[A];-1===v.indexOf(b)?m.add(b):m.delete(b)}return l&&m.size&&(y=[]),m.forEach((function(e){if(-1===v.indexOf(e)){var t=p.get(e);if(t){var a=S.indexOf(e);y.splice(a,0,(0,r.createElement)(el,{key:tl(t),isPresent:!1,onExitComplete:function(){p.delete(e),m.delete(e);var r=g.current.findIndex((function(r){return r.key===e}));g.current.splice(r,1),m.size||(g.current=f,c(),i&&i())},custom:n,presenceAffectsLayout:u},t))}}})),y=y.map((function(e){var t=e.key;return m.has(t)?e:(0,r.createElement)(el,{key:tl(e),isPresent:!0,presenceAffectsLayout:u},e)})),g.current=y,(0,r.createElement)(r.Fragment,null,m.size?y:y.map((function(e){return(0,r.cloneElement)(e)})))};function al(e,r){return r&&e!==r.lead?{visibilityAction:ni.Hide}:r&&e.presence!==ti.Entering&&e===r.lead&&r.lead!==r.prevLead?{visibilityAction:ni.Show}:(e.presence===ti.Entering?t=null==r?void 0:r.getFollowOrigin():e.presence===ti.Exiting&&(n=null==r?void 0:r.getFollowTarget()),{originBox:t,targetBox:n});var t,n}function ol(e,r){var t,n,a,o={},i=r&&r.lead,l=null==i?void 0:i.presence;return r&&e===i?e.presence===ti.Entering?o.originBox=r.getFollowOrigin():e.presence===ti.Exiting&&(o.targetBox=r.getFollowTarget()):r&&e===r.follow&&(o.transition=r.getLeadTransition(),l===ti.Entering?o.targetBox=r.getLeadTarget():l===ti.Exiting&&(o.originBox=r.getLeadOrigin())),(null===(t=null==r?void 0:r.follow)||void 0===t?void 0:t.isPresenceRoot)||(null==i?void 0:i.isPresenceRoot)?(r&&e!==i?r&&e===r.follow?i&&l!==ti.Entering&&l===ti.Exiting&&(o.crossfadeOpacity=null===(a=null==r?void 0:r.lead)||void 0===a?void 0:a.getValue("opacity",1)):o.visibilityAction=ni.Hide:e.presence===ti.Entering&&(o.crossfadeOpacity=null===(n=null==r?void 0:r.follow)||void 0===n?void 0:n.getValue("opacity",0)),o):o}var il=function(){function e(){this.order=[],this.hasChildren=!1}return e.prototype.add=function(e){var r;if(this.order.push(e),this.snapshot){e.prevSnapshot=this.snapshot,e.prevViewportBox=this.snapshot.boundingBox;var t=this.snapshot.latestMotionValues;for(var n in t)e.hasValue(n)?null===(r=e.getValue(n))||void 0===r||r.set(t[n]):e.addValue(n,on(t[n]))}this.hasChildren=!0},e.prototype.remove=function(e){var r=this.order.findIndex((function(r){return e===r}));-1!==r&&this.order.splice(r,1)},e.prototype.updateLeadAndFollow=function(){this.prevLead=this.lead,this.prevFollow=this.follow;var e=Xe(function(e,r){for(var t=Xe(r,2),n=t[0],a=t[1],o=void 0,i=0,l=void 0,s=e.length,u=!1,c=s-1;c>=0;c--){var d=e[c];if(c===s-1&&(u=d.isPresent),u)o=d;else{var h=e[c-1];h&&h.isPresent&&(o=d)}if(o){i=c;break}}if(o||(o=e[0]),l=e[i-1],o)for(c=i-1;c>=0;c--)if((d=e[c]).isPresent){l=d;break}return o!==n&&!u&&l===a&&e.find((function(e){return e===n}))&&(o=n),[o,l]}(this.order,[this.lead,this.follow]),2),r=e[0],t=e[1];this.lead=r,this.follow=t},e.prototype.updateSnapshot=function(){if(this.lead){var e={boundingBox:this.lead.prevViewportBox,latestMotionValues:{}};this.lead.forEachValue((function(r,t){var n=r.get();Tn(n)||(e.latestMotionValues[t]=n)}));var r=Ti.get(this.lead);r&&r.isDragging&&(e.isDragging=!0,e.cursorProgress=r.cursorProgress),this.snapshot=e}},e.prototype.isLeadPresent=function(){var e;return this.lead&&(null===(e=this.lead)||void 0===e?void 0:e.presence)!==ti.Exiting},e.prototype.getFollowOrigin=function(){var e;return this.follow?this.follow.prevViewportBox:null===(e=this.snapshot)||void 0===e?void 0:e.boundingBox},e.prototype.getFollowTarget=function(){var e;return null===(e=this.follow)||void 0===e?void 0:e.box},e.prototype.getLeadOrigin=function(){var e;return null===(e=this.lead)||void 0===e?void 0:e.prevViewportBox},e.prototype.getLeadTarget=function(){var e;return null===(e=this.lead)||void 0===e?void 0:e.box},e.prototype.getLeadTransition=function(){var e;return null===(e=this.lead)||void 0===e?void 0:e.config.transition},e}();function ll(e){for(var r=arguments.length,t=Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+e+(t.length?" "+t.map((function(e){return"'"+e+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function sl(e){return!!e&&!!e[ql]}function ul(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var r=Object.getPrototypeOf(e);return!r||r===Object.prototype}(e)||Array.isArray(e)||!!e[_l]||!!e.constructor[_l]||gl(e)||pl(e))}function cl(e,r,t){void 0===t&&(t=!1),0===dl(e)?(t?Object.keys:Zl)(e).forEach((function(n){t&&"symbol"==typeof n||r(n,e[n],e)})):e.forEach((function(t,n){return r(n,t,e)}))}function dl(e){var r=e[ql];return r?r.i>3?r.i-4:r.i:Array.isArray(e)?1:gl(e)?2:pl(e)?3:0}function hl(e,r){return 2===dl(e)?e.has(r):Object.prototype.hasOwnProperty.call(e,r)}function fl(e,r,t){var n=dl(e);2===n?e.set(r,t):3===n?(e.delete(r),e.add(t)):e[r]=t}function gl(e){return zl&&e instanceof Map}function pl(e){return Kl&&e instanceof Set}function ml(e){return e.o||e.t}function yl(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var r=Jl(e);delete r[ql];for(var t=Zl(r),n=0;n<t.length;n++){var a=t[n],o=r[a];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[a]={configurable:!0,writable:!0,enumerable:o.enumerable,value:e[a]})}return Object.create(Object.getPrototypeOf(e),r)}function Sl(e,r){return void 0===r&&(r=!1),Cl(e)||sl(e)||!ul(e)||(dl(e)>1&&(e.set=e.add=e.clear=e.delete=vl),Object.freeze(e),r&&cl(e,(function(e,r){return Sl(r,!0)}),!0)),e}function vl(){ll(2)}function Cl(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function Al(e){var r=Yl[e];return r||ll(18,e),r}function bl(){return Nl}function kl(e,r){r&&(Al("Patches"),e.u=[],e.s=[],e.v=r)}function wl(e){Bl(e),e.p.forEach(Tl),e.p=null}function Bl(e){e===Nl&&(Nl=e.l)}function Dl(e){return Nl={p:[],l:Nl,h:e,m:!0,_:0}}function Tl(e){var r=e[ql];0===r.i||1===r.i?r.j():r.g=!0}function Ml(e,r){r._=r.p.length;var t=r.p[0],n=void 0!==e&&e!==t;return r.h.O||Al("ES5").S(r,e,n),n?(t[ql].P&&(wl(r),ll(4)),ul(e)&&(e=El(r,e),r.l||xl(r,e)),r.u&&Al("Patches").M(t[ql],e,r.u,r.s)):e=El(r,t,[]),wl(r),r.u&&r.v(r.u,r.s),e!==jl?e:void 0}function El(e,r,t){if(Cl(r))return r;var n=r[ql];if(!n)return cl(r,(function(a,o){return Pl(e,n,r,a,o,t)}),!0),r;if(n.A!==e)return r;if(!n.P)return xl(e,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var a=4===n.i||5===n.i?n.o=yl(n.k):n.o;cl(3===n.i?new Set(a):a,(function(r,o){return Pl(e,n,a,r,o,t)})),xl(e,a,!1),t&&e.u&&Al("Patches").R(n,t,e.u,e.s)}return n.o}function Pl(e,r,t,n,a,o){if(sl(a)){var i=El(e,a,o&&r&&3!==r.i&&!hl(r.D,n)?o.concat(n):void 0);if(fl(t,n,i),!sl(i))return;e.m=!1}if(ul(a)&&!Cl(a)){if(!e.h.N&&e._<1)return;El(e,a),r&&r.A.l||xl(e,a)}}function xl(e,r,t){void 0===t&&(t=!1),e.h.N&&e.m&&Sl(r,t)}function Rl(e,r){var t=e[ql];return(t?ml(t):e)[r]}function Gl(e,r){if(r in e)for(var t=Object.getPrototypeOf(e);t;){var n=Object.getOwnPropertyDescriptor(t,r);if(n)return n;t=Object.getPrototypeOf(t)}}function Fl(e){e.P||(e.P=!0,e.l&&Fl(e.l))}function Wl(e){e.o||(e.o=yl(e.t))}function Ol(e,r,t){var n=gl(r)?Al("MapSet").T(r,t):pl(r)?Al("MapSet").F(r,t):e.O?function(e,r){var t=Array.isArray(e),n={i:t?1:0,A:r?r.A:bl(),P:!1,I:!1,D:{},l:r,t:e,k:null,o:null,j:null,C:!1},a=n,o=Ql;t&&(a=[n],o=$l);var i=Proxy.revocable(a,o),l=i.revoke,s=i.proxy;return n.k=s,n.j=l,s}(r,t):Al("ES5").J(r,t);return(t?t.A:bl()).p.push(n),n}function Hl(e){return sl(e)||ll(22,e),function e(r){if(!ul(r))return r;var t,n=r[ql],a=dl(r);if(n){if(!n.P&&(n.i<4||!Al("ES5").K(n)))return n.t;n.I=!0,t=Ll(r,a),n.I=!1}else t=Ll(r,a);return cl(t,(function(r,a){n&&function(e,r){return 2===dl(e)?e.get(r):e[r]}(n.t,r)===a||fl(t,r,e(a))})),3===a?new Set(t):t}(e)}function Ll(e,r){switch(r){case 2:return new Map(e);case 3:return Array.from(e)}return yl(e)}!function(e){function t(){var r=null!==e&&e.apply(this,arguments)||this;return r.children=new Set,r.stacks=new Map,r.hasMounted=!1,r.updateScheduled=!1,r.renderScheduled=!1,r.syncContext=Qe(Qe({},si()),{syncUpdate:function(e){return r.scheduleUpdate(e)},forceUpdate:function(){r.syncContext=Qe({},r.syncContext),r.scheduleUpdate(!0)},register:function(e){return r.addChild(e)},remove:function(e){return r.removeChild(e)}}),r}Ye(t,e),t.prototype.componentDidMount=function(){this.hasMounted=!0,this.updateStacks()},t.prototype.componentDidUpdate=function(){this.startLayoutAnimation()},t.prototype.shouldComponentUpdate=function(){return this.renderScheduled=!0,!0},t.prototype.startLayoutAnimation=function(){var e=this;this.renderScheduled=this.updateScheduled=!1;var r=this.props.type;this.children.forEach((function(e){e.isPresent?e.presence!==ti.Entering&&(e.presence=e.presence===ti.Exiting?ti.Entering:ti.Present):e.presence=ti.Exiting})),this.updateStacks();var t="crossfade"===r?ol:al,n={measureLayout:function(e){return e.measureLayout()},layoutReady:function(r){var n=r.layoutId;r.layoutReady(t(r,e.getStack(n)))},parent:this.context.visualElement};this.children.forEach((function(r){return e.syncContext.add(r)})),this.syncContext.flush(n),this.stacks.forEach((function(e){return e.snapshot=void 0}))},t.prototype.updateStacks=function(){this.stacks.forEach((function(e){return e.updateLeadAndFollow()}))},t.prototype.scheduleUpdate=function(e){void 0===e&&(e=!1),!e&&this.updateScheduled||(this.updateScheduled=!0,this.children.forEach((function(e){return function(e){for(var r=!1,t={},n=0;n<kn.length;n++){var a="rotate"+kn[n];e.hasValue(a)&&0!==e.latest[a]&&(r=!0,t[a]=e.latest[a],e.latest[a]=0)}if(r){for(var a in e.render(),t)e.latest[a]=t[a];e.scheduleRender()}}(e)})),this.children.forEach((function(e){return e.snapshotBoundingBox()})),this.stacks.forEach((function(e){return e.updateSnapshot()})),!e&&this.renderScheduled||(this.renderScheduled=!0,this.forceUpdate()))},t.prototype.addChild=function(e){this.children.add(e),this.addToStack(e),e.presence=this.hasMounted?ti.Entering:ti.Present},t.prototype.removeChild=function(e){this.scheduleUpdate(),this.children.delete(e),this.removeFromStack(e)},t.prototype.addToStack=function(e){var r=this.getStack(e.layoutId);null==r||r.add(e)},t.prototype.removeFromStack=function(e){var r=this.getStack(e.layoutId);null==r||r.remove(e)},t.prototype.getStack=function(e){if(void 0!==e)return!this.stacks.has(e)&&this.stacks.set(e,new il),this.stacks.get(e)},t.prototype.render=function(){return(0,r.createElement)(ci.Provider,{value:this.syncContext},this.props.children)},t.contextType=Ua}(r.Component),function(){function e(){this.componentControls=new Set}e.prototype.subscribe=function(e){var r=this;return this.componentControls.add(e),function(){return r.componentControls.delete(e)}},e.prototype.start=function(e,r){this.componentControls.forEach((function(t){t.start(e.nativeEvent||e,r)}))},e.prototype.updateConstraints=function(){this.componentControls.forEach((function(e){e.prepareBoundingBox(),e.resolveDragConstraints()}))}}(),function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.initialState={},r}Ye(r,e),r.prototype.updateLayoutDelta=function(){},r.prototype.build=function(){},r.prototype.clean=function(){},r.prototype.makeTargetAnimatable=function(e){var r=e.transition,t=e.transitionEnd,n=$e(e,["transition","transitionEnd"]);return Ba(this,n,Ta(n,r||{},this)),Qe({transition:r,transitionEnd:t},n)},r.prototype.getBoundingBox=function(){return{x:{min:0,max:0},y:{min:0,max:0}}},r.prototype.readNativeValue=function(e){return this.initialState[e]||0},r.prototype.render=function(){this.build()}}(ln);var Il,Nl,Vl="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),zl="undefined"!=typeof Map,Kl="undefined"!=typeof Set,Ul="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,jl=Vl?Symbol.for("immer-nothing"):((Il={})["immer-nothing"]=!0,Il),_l=Vl?Symbol.for("immer-draftable"):"__$immer_draftable",ql=Vl?Symbol.for("immer-state"):"__$immer_state",Zl=("undefined"!=typeof Symbol&&Symbol.iterator,"undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames),Jl=Object.getOwnPropertyDescriptors||function(e){var r={};return Zl(e).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(e,t)})),r},Yl={},Ql={get:function(e,r){if(r===ql)return e;var t=ml(e);if(!hl(t,r))return function(e,r,t){var n,a=Gl(r,t);return a?"value"in a?a.value:null===(n=a.get)||void 0===n?void 0:n.call(e.k):void 0}(e,t,r);var n=t[r];return e.I||!ul(n)?n:n===Rl(e.t,r)?(Wl(e),e.o[r]=Ol(e.A.h,n,e)):n},has:function(e,r){return r in ml(e)},ownKeys:function(e){return Reflect.ownKeys(ml(e))},set:function(e,r,t){var n=Gl(ml(e),r);if(null==n?void 0:n.set)return n.set.call(e.k,t),!0;if(!e.P){var a=Rl(ml(e),r),o=null==a?void 0:a[ql];if(o&&o.t===t)return e.o[r]=t,e.D[r]=!1,!0;if(function(e,r){return e===r?0!==e||1/e==1/r:e!=e&&r!=r}(t,a)&&(void 0!==t||hl(e.t,r)))return!0;Wl(e),Fl(e)}return e.o[r]=t,e.D[r]=!0,!0},deleteProperty:function(e,r){return void 0!==Rl(e.t,r)||r in e.t?(e.D[r]=!1,Wl(e),Fl(e)):delete e.D[r],e.o&&delete e.o[r],!0},getOwnPropertyDescriptor:function(e,r){var t=ml(e),n=Reflect.getOwnPropertyDescriptor(t,r);return n?{writable:!0,configurable:1!==e.i||"length"!==r,enumerable:n.enumerable,value:t[r]}:n},defineProperty:function(){ll(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){ll(12)}},$l={};cl(Ql,(function(e,r){$l[e]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),$l.deleteProperty=function(e,r){return Ql.deleteProperty.call(this,e[0],r)},$l.set=function(e,r,t){return Ql.set.call(this,e[0],r,t,e[0])};var Xl=new(function(){function e(e){this.O=Ul,this.N=!0,"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var r=e.prototype;return r.produce=function(e,r,t){if("function"==typeof e&&"function"!=typeof r){var n=r;r=e;var a=this;return function(e){var t=this;void 0===e&&(e=n);for(var o=arguments.length,i=Array(o>1?o-1:0),l=1;l<o;l++)i[l-1]=arguments[l];return a.produce(e,(function(e){var n;return(n=r).call.apply(n,[t,e].concat(i))}))}}var o;if("function"!=typeof r&&ll(6),void 0!==t&&"function"!=typeof t&&ll(7),ul(e)){var i=Dl(this),l=Ol(this,e,void 0),s=!0;try{o=r(l),s=!1}finally{s?wl(i):Bl(i)}return"undefined"!=typeof Promise&&o instanceof Promise?o.then((function(e){return kl(i,t),Ml(e,i)}),(function(e){throw wl(i),e})):(kl(i,t),Ml(o,i))}if(!e||"object"!=typeof e){if((o=r(e))===jl)return;return void 0===o&&(o=e),this.N&&Sl(o,!0),o}ll(21,e)},r.produceWithPatches=function(e,r){var t,n,a=this;return"function"==typeof e?function(r){for(var t=arguments.length,n=Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];return a.produceWithPatches(r,(function(r){return e.apply(void 0,[r].concat(n))}))}:[this.produce(e,r,(function(e,r){t=e,n=r})),t,n]},r.createDraft=function(e){ul(e)||ll(8),sl(e)&&(e=Hl(e));var r=Dl(this),t=Ol(this,e,void 0);return t[ql].C=!0,Bl(r),t},r.finishDraft=function(e,r){var t=(e&&e[ql]).A;return kl(t,r),Ml(void 0,t)},r.setAutoFreeze=function(e){this.N=e},r.setUseProxies=function(e){e&&!Ul&&ll(20),this.O=e},r.applyPatches=function(e,r){var t;for(t=r.length-1;t>=0;t--){var n=r[t];if(0===n.path.length&&"replace"===n.op){e=n.value;break}}var a=Al("Patches").$;return sl(e)?a(e,r):this.produce(e,(function(e){return a(e,r.slice(t+1))}))},e}()),es=Xl.produce;Xl.produceWithPatches.bind(Xl),Xl.setAutoFreeze.bind(Xl),Xl.setUseProxies.bind(Xl),Xl.applyPatches.bind(Xl),Xl.createDraft.bind(Xl),Xl.finishDraft.bind(Xl);const rs=es;var ts=t(2514);function ns(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}var as=0,os=(0,r.memo)((function(e){var t,n=e.children,a=function(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw o}}return t}}(e,r)||function(e,r){if(e){if("string"==typeof e)return ns(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ns(e,r):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}("manager"in(t=function(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}(e,["children"]))?[{dragDropManager:t.manager},!1]:[function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ls(),t=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0,a=r;return a[is]||(a[is]=(0,ts.W)(e,r,t,n)),a[is]}(t.backend,t.context,t.options,t.debugMode),!t.context],2),o=a[0],i=a[1];return r.useEffect((function(){return i&&as++,function(){i&&0==--as&&(ls()[is]=null)}}),[]),r.createElement(ts.L.Provider,{value:o},n)}));os.displayName="DndProvider";var is=Symbol.for("__REACT_DND_CONTEXT_INSTANCE__");function ls(){return void 0!==t.g?t.g:window}function ss(e){var r=null;return function(){return null==r&&(r=e()),r}}function us(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var cs=function(){function e(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.entered=[],this.isNodeInDocument=r}var r,t;return r=e,(t=[{key:"enter",value:function(e){var r=this,t=this.entered.length;return this.entered=function(e,r){var t=new Set,n=function(e){return t.add(e)};e.forEach(n),r.forEach(n);var a=[];return t.forEach((function(e){return a.push(e)})),a}(this.entered.filter((function(t){return r.isNodeInDocument(t)&&(!t.contains||t.contains(e))})),[e]),0===t&&this.entered.length>0}},{key:"leave",value:function(e){var r,t,n=this.entered.length;return this.entered=(r=this.entered.filter(this.isNodeInDocument),t=e,r.filter((function(e){return e!==t}))),n>0&&0===this.entered.length}},{key:"reset",value:function(){this.entered=[]}}])&&us(r.prototype,t),e}(),ds=ss((function(){return/firefox/i.test(navigator.userAgent)})),hs=ss((function(){return Boolean(window.safari)}));function fs(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var gs=function(){function e(r,t){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e);for(var n=r.length,a=[],o=0;o<n;o++)a.push(o);a.sort((function(e,t){return r[e]<r[t]?-1:1}));for(var i,l,s=[],u=[],c=[],d=0;d<n-1;d++)i=r[d+1]-r[d],l=t[d+1]-t[d],u.push(i),s.push(l),c.push(l/i);for(var h=[c[0]],f=0;f<u.length-1;f++){var g=c[f],p=c[f+1];if(g*p<=0)h.push(0);else{i=u[f];var m=u[f+1],y=i+m;h.push(3*y/((y+m)/g+(y+i)/p))}}h.push(c[c.length-1]);for(var S,v=[],C=[],A=0;A<h.length-1;A++){S=c[A];var b=h[A],k=1/u[A],w=b+h[A+1]-S-S;v.push((S-b-w)*k),C.push(w*k*k)}this.xs=r,this.ys=t,this.c1s=h,this.c2s=v,this.c3s=C}var r,t;return r=e,(t=[{key:"interpolate",value:function(e){var r=this.xs,t=this.ys,n=this.c1s,a=this.c2s,o=this.c3s,i=r.length-1;if(e===r[i])return t[i];for(var l,s=0,u=o.length-1;s<=u;){var c=r[l=Math.floor(.5*(s+u))];if(c<e)s=l+1;else{if(!(c>e))return t[l];u=l-1}}var d=e-r[i=Math.max(0,u)],h=d*d;return t[i]+n[i]*d+a[i]*h+o[i]*d*h}}])&&fs(r.prototype,t),e}();function ps(e){var r=1===e.nodeType?e:e.parentElement;if(!r)return null;var t=r.getBoundingClientRect(),n=t.top;return{x:t.left,y:n}}function ms(e){return{x:e.clientX,y:e.clientY}}var ys,Ss="__NATIVE_FILE__",vs="__NATIVE_URL__",Cs="__NATIVE_TEXT__";function As(e,r,t){var n=r.reduce((function(r,t){return r||e.getData(t)}),"");return null!=n?n:t}function bs(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var ks=(bs(ys={},Ss,{exposeProperties:{files:function(e){return Array.prototype.slice.call(e.files)},items:function(e){return e.items}},matchesTypes:["Files"]}),bs(ys,vs,{exposeProperties:{urls:function(e,r){return As(e,r,"").split("\n")}},matchesTypes:["Url","text/uri-list"]}),bs(ys,Cs,{exposeProperties:{text:function(e,r){return As(e,r,"")}},matchesTypes:["Text","text/plain"]}),ys);function ws(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var Bs=function(){function e(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.config=r,this.item={},this.initializeExposedProperties()}var r,t;return r=e,(t=[{key:"initializeExposedProperties",value:function(){var e=this;Object.keys(this.config.exposeProperties).forEach((function(r){Object.defineProperty(e.item,r,{configurable:!0,enumerable:!0,get:function(){return console.warn("Browser doesn't allow reading \"".concat(r,'" until the drop event.')),null}})}))}},{key:"loadDataTransfer",value:function(e){var r=this;if(e){var t={};Object.keys(this.config.exposeProperties).forEach((function(n){t[n]={value:r.config.exposeProperties[n](e,r.config.matchesTypes),configurable:!0,enumerable:!0}})),Object.defineProperties(this.item,t)}}},{key:"canDrag",value:function(){return!0}},{key:"beginDrag",value:function(){return this.item}},{key:"isDragging",value:function(e,r){return r===e.getSourceId()}},{key:"endDrag",value:function(){}}])&&ws(r.prototype,t),e}();function Ds(e){if(!e)return null;var r=Array.prototype.slice.call(e.types||[]);return Object.keys(ks).filter((function(e){return ks[e].matchesTypes.some((function(e){return r.indexOf(e)>-1}))}))[0]||null}function Ts(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var Ms=function(){function e(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.globalContext=r}var r,t;return r=e,(t=[{key:"window",get:function(){return this.globalContext?this.globalContext:"undefined"!=typeof window?window:void 0}},{key:"document",get:function(){if(this.window)return this.window.document}}])&&Ts(r.prototype,t),e}();function Es(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function Ps(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Es(Object(t),!0).forEach((function(r){xs(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Es(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function xs(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function Rs(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var Gs=function(){function r(e,t){var n=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,r),this.sourcePreviewNodes=new Map,this.sourcePreviewNodeOptions=new Map,this.sourceNodes=new Map,this.sourceNodeOptions=new Map,this.dragStartSourceIds=null,this.dropTargetIds=[],this.dragEnterTargetIds=[],this.currentNativeSource=null,this.currentNativeHandle=null,this.currentDragSourceNode=null,this.altKeyPressed=!1,this.mouseMoveTimeoutTimer=null,this.asyncEndDragFrameId=null,this.dragOverTargetIds=null,this.getSourceClientOffset=function(e){var r=n.sourceNodes.get(e);return r&&ps(r)||null},this.endDragNativeItem=function(){n.isDraggingNativeItem()&&(n.actions.endDrag(),n.currentNativeHandle&&n.registry.removeSource(n.currentNativeHandle),n.currentNativeHandle=null,n.currentNativeSource=null)},this.isNodeInDocument=function(e){return Boolean(e&&n.document&&n.document.body&&document.body.contains(e))},this.endDragIfSourceWasRemovedFromDOM=function(){var e=n.currentDragSourceNode;n.isNodeInDocument(e)||n.clearCurrentDragSourceNode()&&n.actions.endDrag()},this.handleTopDragStartCapture=function(){n.clearCurrentDragSourceNode(),n.dragStartSourceIds=[]},this.handleTopDragStart=function(e){if(!e.defaultPrevented){var r=n.dragStartSourceIds;n.dragStartSourceIds=null;var t=ms(e);n.monitor.isDragging()&&n.actions.endDrag(),n.actions.beginDrag(r||[],{publishSource:!1,getSourceClientOffset:n.getSourceClientOffset,clientOffset:t});var a=e.dataTransfer,o=Ds(a);if(n.monitor.isDragging()){if(a&&"function"==typeof a.setDragImage){var i=n.monitor.getSourceId(),l=n.sourceNodes.get(i),s=n.sourcePreviewNodes.get(i)||l;if(s){var u=n.getCurrentSourcePreviewNodeOptions(),c=function(e,r,t,n,a){var o,i,l="IMG"===(o=r).nodeName&&(ds()||!(null===(i=document.documentElement)||void 0===i?void 0:i.contains(o))),s=ps(l?e:r),u={x:t.x-s.x,y:t.y-s.y},c=e.offsetWidth,d=e.offsetHeight,h=n.anchorX,f=n.anchorY,g=function(e,r,t,n){var a=e?r.width:t,o=e?r.height:n;return hs()&&e&&(o/=window.devicePixelRatio,a/=window.devicePixelRatio),{dragPreviewWidth:a,dragPreviewHeight:o}}(l,r,c,d),p=g.dragPreviewWidth,m=g.dragPreviewHeight,y=a.offsetX,S=a.offsetY,v=0===S||S;return{x:0===y||y?y:new gs([0,.5,1],[u.x,u.x/c*p,u.x+p-c]).interpolate(h),y:v?S:function(){var e=new gs([0,.5,1],[u.y,u.y/d*m,u.y+m-d]).interpolate(f);return hs()&&l&&(e+=(window.devicePixelRatio-1)*m),e}()}}(l,s,t,{anchorX:u.anchorX,anchorY:u.anchorY},{offsetX:u.offsetX,offsetY:u.offsetY});a.setDragImage(s,c.x,c.y)}}try{null==a||a.setData("application/json",{})}catch(e){}n.setCurrentDragSourceNode(e.target),n.getCurrentSourcePreviewNodeOptions().captureDraggingState?n.actions.publishDragSource():setTimeout((function(){return n.actions.publishDragSource()}),0)}else if(o)n.beginDragNativeItem(o);else{if(a&&!a.types&&(e.target&&!e.target.hasAttribute||!e.target.hasAttribute("draggable")))return;e.preventDefault()}}},this.handleTopDragEndCapture=function(){n.clearCurrentDragSourceNode()&&n.actions.endDrag()},this.handleTopDragEnterCapture=function(e){if(n.dragEnterTargetIds=[],n.enterLeaveCounter.enter(e.target)&&!n.monitor.isDragging()){var r=e.dataTransfer,t=Ds(r);t&&n.beginDragNativeItem(t,r)}},this.handleTopDragEnter=function(e){var r=n.dragEnterTargetIds;n.dragEnterTargetIds=[],n.monitor.isDragging()&&(n.altKeyPressed=e.altKey,ds()||n.actions.hover(r,{clientOffset:ms(e)}),r.some((function(e){return n.monitor.canDropOnTarget(e)}))&&(e.preventDefault(),e.dataTransfer&&(e.dataTransfer.dropEffect=n.getCurrentDropEffect())))},this.handleTopDragOverCapture=function(){n.dragOverTargetIds=[]},this.handleTopDragOver=function(e){var r=n.dragOverTargetIds;if(n.dragOverTargetIds=[],!n.monitor.isDragging())return e.preventDefault(),void(e.dataTransfer&&(e.dataTransfer.dropEffect="none"));n.altKeyPressed=e.altKey,n.actions.hover(r||[],{clientOffset:ms(e)}),(r||[]).some((function(e){return n.monitor.canDropOnTarget(e)}))?(e.preventDefault(),e.dataTransfer&&(e.dataTransfer.dropEffect=n.getCurrentDropEffect())):n.isDraggingNativeItem()?e.preventDefault():(e.preventDefault(),e.dataTransfer&&(e.dataTransfer.dropEffect="none"))},this.handleTopDragLeaveCapture=function(e){n.isDraggingNativeItem()&&e.preventDefault(),n.enterLeaveCounter.leave(e.target)&&n.isDraggingNativeItem()&&n.endDragNativeItem()},this.handleTopDropCapture=function(e){var r;n.dropTargetIds=[],e.preventDefault(),n.isDraggingNativeItem()&&(null===(r=n.currentNativeSource)||void 0===r||r.loadDataTransfer(e.dataTransfer)),n.enterLeaveCounter.reset()},this.handleTopDrop=function(e){var r=n.dropTargetIds;n.dropTargetIds=[],n.actions.hover(r,{clientOffset:ms(e)}),n.actions.drop({dropEffect:n.getCurrentDropEffect()}),n.isDraggingNativeItem()?n.endDragNativeItem():n.endDragIfSourceWasRemovedFromDOM()},this.handleSelectStart=function(e){var r=e.target;"function"==typeof r.dragDrop&&("INPUT"===r.tagName||"SELECT"===r.tagName||"TEXTAREA"===r.tagName||r.isContentEditable||(e.preventDefault(),r.dragDrop()))},this.options=new Ms(t),this.actions=e.getActions(),this.monitor=e.getMonitor(),this.registry=e.getRegistry(),this.enterLeaveCounter=new cs(this.isNodeInDocument)}var t,n;return t=r,(n=[{key:"profile",value:function(){var e,r;return{sourcePreviewNodes:this.sourcePreviewNodes.size,sourcePreviewNodeOptions:this.sourcePreviewNodeOptions.size,sourceNodeOptions:this.sourceNodeOptions.size,sourceNodes:this.sourceNodes.size,dragStartSourceIds:(null===(e=this.dragStartSourceIds)||void 0===e?void 0:e.length)||0,dropTargetIds:this.dropTargetIds.length,dragEnterTargetIds:this.dragEnterTargetIds.length,dragOverTargetIds:(null===(r=this.dragOverTargetIds)||void 0===r?void 0:r.length)||0}}},{key:"setup",value:function(){if(void 0!==this.window){if(this.window.__isReactDndBackendSetUp)throw new Error("Cannot have two HTML5 backends at the same time.");this.window.__isReactDndBackendSetUp=!0,this.addEventListeners(this.window)}}},{key:"teardown",value:function(){void 0!==this.window&&(this.window.__isReactDndBackendSetUp=!1,this.removeEventListeners(this.window),this.clearCurrentDragSourceNode(),this.asyncEndDragFrameId&&this.window.cancelAnimationFrame(this.asyncEndDragFrameId))}},{key:"connectDragPreview",value:function(e,r,t){var n=this;return this.sourcePreviewNodeOptions.set(e,t),this.sourcePreviewNodes.set(e,r),function(){n.sourcePreviewNodes.delete(e),n.sourcePreviewNodeOptions.delete(e)}}},{key:"connectDragSource",value:function(e,r,t){var n=this;this.sourceNodes.set(e,r),this.sourceNodeOptions.set(e,t);var a=function(r){return n.handleDragStart(r,e)},o=function(e){return n.handleSelectStart(e)};return r.setAttribute("draggable","true"),r.addEventListener("dragstart",a),r.addEventListener("selectstart",o),function(){n.sourceNodes.delete(e),n.sourceNodeOptions.delete(e),r.removeEventListener("dragstart",a),r.removeEventListener("selectstart",o),r.setAttribute("draggable","false")}}},{key:"connectDropTarget",value:function(e,r){var t=this,n=function(r){return t.handleDragEnter(r,e)},a=function(r){return t.handleDragOver(r,e)},o=function(r){return t.handleDrop(r,e)};return r.addEventListener("dragenter",n),r.addEventListener("dragover",a),r.addEventListener("drop",o),function(){r.removeEventListener("dragenter",n),r.removeEventListener("dragover",a),r.removeEventListener("drop",o)}}},{key:"addEventListeners",value:function(e){e.addEventListener&&(e.addEventListener("dragstart",this.handleTopDragStart),e.addEventListener("dragstart",this.handleTopDragStartCapture,!0),e.addEventListener("dragend",this.handleTopDragEndCapture,!0),e.addEventListener("dragenter",this.handleTopDragEnter),e.addEventListener("dragenter",this.handleTopDragEnterCapture,!0),e.addEventListener("dragleave",this.handleTopDragLeaveCapture,!0),e.addEventListener("dragover",this.handleTopDragOver),e.addEventListener("dragover",this.handleTopDragOverCapture,!0),e.addEventListener("drop",this.handleTopDrop),e.addEventListener("drop",this.handleTopDropCapture,!0))}},{key:"removeEventListeners",value:function(e){e.removeEventListener&&(e.removeEventListener("dragstart",this.handleTopDragStart),e.removeEventListener("dragstart",this.handleTopDragStartCapture,!0),e.removeEventListener("dragend",this.handleTopDragEndCapture,!0),e.removeEventListener("dragenter",this.handleTopDragEnter),e.removeEventListener("dragenter",this.handleTopDragEnterCapture,!0),e.removeEventListener("dragleave",this.handleTopDragLeaveCapture,!0),e.removeEventListener("dragover",this.handleTopDragOver),e.removeEventListener("dragover",this.handleTopDragOverCapture,!0),e.removeEventListener("drop",this.handleTopDrop),e.removeEventListener("drop",this.handleTopDropCapture,!0))}},{key:"getCurrentSourceNodeOptions",value:function(){var e=this.monitor.getSourceId(),r=this.sourceNodeOptions.get(e);return Ps({dropEffect:this.altKeyPressed?"copy":"move"},r||{})}},{key:"getCurrentDropEffect",value:function(){return this.isDraggingNativeItem()?"copy":this.getCurrentSourceNodeOptions().dropEffect}},{key:"getCurrentSourcePreviewNodeOptions",value:function(){var e=this.monitor.getSourceId();return Ps({anchorX:.5,anchorY:.5,captureDraggingState:!1},this.sourcePreviewNodeOptions.get(e)||{})}},{key:"isDraggingNativeItem",value:function(){var r=this.monitor.getItemType();return Object.keys(e).some((function(t){return e[t]===r}))}},{key:"beginDragNativeItem",value:function(e,r){this.clearCurrentDragSourceNode(),this.currentNativeSource=function(e,r){var t=new Bs(ks[e]);return t.loadDataTransfer(r),t}(e,r),this.currentNativeHandle=this.registry.addSource(e,this.currentNativeSource),this.actions.beginDrag([this.currentNativeHandle])}},{key:"setCurrentDragSourceNode",value:function(e){var r=this;this.clearCurrentDragSourceNode(),this.currentDragSourceNode=e,this.mouseMoveTimeoutTimer=setTimeout((function(){return r.window&&r.window.addEventListener("mousemove",r.endDragIfSourceWasRemovedFromDOM,!0)}),1e3)}},{key:"clearCurrentDragSourceNode",value:function(){return!!this.currentDragSourceNode&&(this.currentDragSourceNode=null,this.window&&(this.window.clearTimeout(this.mouseMoveTimeoutTimer||void 0),this.window.removeEventListener("mousemove",this.endDragIfSourceWasRemovedFromDOM,!0)),this.mouseMoveTimeoutTimer=null,!0)}},{key:"handleDragStart",value:function(e,r){e.defaultPrevented||(this.dragStartSourceIds||(this.dragStartSourceIds=[]),this.dragStartSourceIds.unshift(r))}},{key:"handleDragEnter",value:function(e,r){this.dragEnterTargetIds.unshift(r)}},{key:"handleDragOver",value:function(e,r){null===this.dragOverTargetIds&&(this.dragOverTargetIds=[]),this.dragOverTargetIds.unshift(r)}},{key:"handleDrop",value:function(e,r){this.dropTargetIds.unshift(r)}},{key:"window",get:function(){return this.options.window}},{key:"document",get:function(){return this.options.document}}])&&Rs(t.prototype,n),r}(),Fs=function(e,r){return new Gs(e,r)},Ws=t(4785);const Os=function(e){var t=e.deckName,n=e.setDeckName;return r.createElement("div",{className:"deckNameDisplay"},r.createElement("input",{onBlur:function(e){e.target.value.length>0&&n(e.target.value),e.target.value=""},className:"deckNameField",placeholder:t,onKeyPress:function(e){"Enter"===e.key&&e.target.blur()},required:!0}))},Hs=JSON.parse('["Standard","Modern","Commander/EDH","Legacy","Vintage","Brawl","Pauper","Pioneer","Block","Custom"]'),Ls=function(e){var t=e.currentFormat,n=e.setFormat,a=e.setOpenFormat,o=(0,r.useRef)(null);return(0,r.useEffect)((function(){function e(e){o.current&&!o.current.contains(e.target)&&a(!1)}return document.addEventListener("mousedown",e),function(){document.removeEventListener("mousedown",e)}})),r.createElement("div",{className:"formatOptionContainer",ref:o},Hs.map((function(e){return r.createElement("button",{className:e!==t?"formatOption":"formatOption selectedFormat",key:e,onClick:function(){n(e),a(!1)}},e)})))},Is=t.p+"ea6dd65724f4ce6905e2060d19cdd4fb.png",Ns=function(e){var t=e.format,n=e.setFormat,a=e.openFormat,o=e.setOpenFormat;return r.createElement("div",{className:"deckFormatContainer"},r.createElement("p",{className:"formatHeader"},"Format: "),r.createElement("button",{className:"formatInput",onClick:function(){return o(!0)}},t,r.createElement("img",{className:"menuDownArrow",src:Is})),a&&r.createElement(Ls,{currentFormat:t,setFormat:n,setOpenFormat:o}))};var Vs="card",zs=function(e){return function(r){try{r({type:Me,payload:e})}catch(e){r({type:Ee})}}},Ks=function(e){var t=e.setOpenDeck,n=e.deckName,a=e.setDeckName,o=e.format,i=e.setFormat,l=e.cardCount,s=e.deckArt,u=e.changeDeckArt,c=(0,r.useRef)(null),d=(0,r.useState)(!1),h=ze()(d,2),f=h[0],g=h[1],p=(0,Ws.useDrop)({accept:Vs,drop:function(e){u(e.image)},collect:function(e){return{isOver:e.isOver()}}}),m=ze()(p,2),y=m[0].isOver;return(0,m[1])(c),r.createElement("div",{className:"deckBanner"},r.createElement("div",{className:"deckInfo"},r.createElement(Os,{deckName:n,setDeckName:a}),r.createElement(Ns,{format:o,setFormat:i,openFormat:f,setOpenFormat:g}),r.createElement("p",{className:"cardCount"},"Cards: ",l)),r.createElement("img",{ref:c,className:y?"deckArt hoverArt":"deckArt",src:s}),r.createElement("button",{className:"builderExit",onClick:function(){t(!1)}},"x"))};Ks.propTypes={deckArt:i().string,changeDeckArt:i().func.isRequired};const Us=ve((function(e){return{deckArt:e.deck.deckArt}}),{changeDeckArt:zs})(Ks);var js=t(7154),_s=t.n(js),qs=t(7418),Zs=t.n(qs),Js=t(7650),Ys=t.n(Js);const Qs=function(){};var $s=function(){function e(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(r,t,n){return t&&e(r.prototype,t),n&&e(r,n),r}}(),Xs=function(e){function t(e){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,t);var r=function(e,r){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!r||"object"!=typeof r&&"function"!=typeof r?e:r}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.state={isHovering:!1},r.onMouseEnter=r.onMouseEnter.bind(r),r.onMouseLeave=r.onMouseLeave.bind(r),r.onMouseOver=r.onMouseOver.bind(r),r.onMouseOut=r.onMouseOut.bind(r),r.setIsHovering=r.setIsHovering.bind(r),r.unsetIsHovering=r.unsetIsHovering.bind(r),r.componentWillUnmount=r.componentWillUnmount.bind(r),r.timerIds=[],r}return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function, not "+typeof r);e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),r&&(Object.setPrototypeOf?Object.setPrototypeOf(e,r):e.__proto__=r)}(t,e),$s(t,[{key:"onMouseEnter",value:function(e){this.props.onMouseEnter({e,setIsHovering:this.setIsHovering,unsetIsHovering:this.unsetIsHovering})}},{key:"onMouseLeave",value:function(e){this.props.onMouseLeave({e,setIsHovering:this.setIsHovering,unsetIsHovering:this.unsetIsHovering})}},{key:"onMouseOver",value:function(e){this.props.onMouseOver({e,setIsHovering:this.setIsHovering,unsetIsHovering:this.unsetIsHovering})}},{key:"onMouseOut",value:function(e){this.props.onMouseOut({e,setIsHovering:this.setIsHovering,unsetIsHovering:this.unsetIsHovering})}},{key:"componentWillUnmount",value:function(){this.clearTimers()}},{key:"setIsHovering",value:function(){var e=this;this.clearTimers();var r=setTimeout((function(){var r={isHovering:!0};e.setState(r,(function(){e.props.onHoverChanged(r)}))}),this.props.hoverDelayInMs);this.timerIds.push(r)}},{key:"unsetIsHovering",value:function(){var e=this;this.clearTimers();var r=setTimeout((function(){var r={isHovering:!1};e.setState(r,(function(){e.props.onHoverChanged(r)}))}),this.props.hoverOffDelayInMs);this.timerIds.push(r)}},{key:"clearTimers",value:function(){for(var e=this.timerIds;e.length;)clearTimeout(e.pop())}},{key:"getIsReactComponent",value:function(e){return"function"==typeof e.type}},{key:"shouldDecorateChild",value:function(e){return!!e&&this.getIsReactComponent(e)&&this.props.shouldDecorateChildren}},{key:"decorateChild",value:function(e,t){return(0,r.cloneElement)(e,t)}},{key:"renderChildrenWithProps",value:function(e,t){var n=this;return"function"==typeof e?e(t):r.Children.map(e,(function(e){return n.shouldDecorateChild(e)?n.decorateChild(e,t):e}))}},{key:"render",value:function(){var e=this.props,t=e.children,n=e.className,a=Zs()({},{isHovering:this.state.isHovering},Ys()(this.props,["children","className","hoverDelayInMs","hoverOffDelayInMs","onHoverChanged","onMouseEnter","onMouseLeave","onMouseOver","onMouseOut","shouldDecorateChildren"]));return r.createElement("div",{className:n,onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave,onMouseOver:this.onMouseOver,onMouseOut:this.onMouseOut},this.renderChildrenWithProps(t,a))}}]),t}(r.Component);Xs.displayName="ReactHoverObserver",Xs.defaultProps={hoverDelayInMs:0,hoverOffDelayInMs:0,onHoverChanged:Qs,onMouseEnter:function(e){return(0,e.setIsHovering)()},onMouseLeave:function(e){return(0,e.unsetIsHovering)()},onMouseOver:Qs,onMouseOut:Qs,shouldDecorateChildren:!0},Xs.propTypes={className:i().string,hoverDelayInMs:i().number,hoverOffDelayInMs:i().number,onHoverChanged:i().func,onMouseEnter:i().func,onMouseLeave:i().func,onMouseOver:i().func,onMouseOut:i().func,shouldDecorateChildren:i().bool};const eu=Xs,ru=function(e){var t=e.typeIndex,n=e.cardIndex,a=e.set,o=e.index,i=e.setImage,l=e.changeCardSet;return r.createElement("div",null,r.createElement("div",{className:"setOption",style:{top:"".concat(28*o,"px")},key:a.setName.concat(o),onMouseOver:function(){i.current.src=a.cardImage,i.current.classList.remove("hidden")},onMouseLeave:function(){return i.current.classList.add("hidden")},onClick:function(){return l(a,t,n)}},a.setName))},tu=function(e){var t=e.typeIndex,n=e.cardIndex,a=e.sets,o=e.setImage,i=e.setOpenSetDropDown,l=e.changeCardSet,s=(0,r.useRef)(null);return(0,r.useEffect)((function(){function e(e){s.current&&!s.current.contains(e.target)&&i(!1)}return document.addEventListener("mousedown",e),function(){document.removeEventListener("mousedown",e)}}),[s,i]),r.createElement("div",{ref:s,className:a.length>10?"setDropDown overflowY":"setDropDown"},a.map((function(e,a){return r.createElement(ru,{typeIndex:t,cardIndex:n,set:e,key:a,index:a,setImage:o,changeCardSet:l})})))},nu=function(e){var t=e.right,n={start:{y:"0px"},end:{y:"-5px"}},a={duration:1,repeat:1/0,repeatType:"reverse",ease:"easeInOut"};return r.createElement(Qi.div,{className:"loadingContainer",style:{right:"".concat(t)},variants:{start:{transition:{staggerChildren:.4}},end:{transition:{staggerChildren:.4}}},initial:"start",animate:"end"},r.createElement(Qi.div,{className:"loadingCircle",variants:n,transition:a}),r.createElement(Qi.div,{className:"loadingCircle",variants:n,transition:a}),r.createElement(Qi.div,{className:"loadingCircle",variants:n,transition:a}))},au=t.p+"5caab4a443845fcc8038d7971d32dc2d.png",ou=function(e){var t=e.typeIndex,n=e.cardIndex,a=e.settingWindow,o=e.setImage,i=e.imageCoords,l=e.card,s=e.sets,u=e.filterSets,c=e.userQuery,d=e.setUserQuery,h=e.openSetDropDown,f=e.setOpenSetDropDown,g=e.changeCardSet,p=e.changeDeckArt;return r.createElement("div",{ref:a,className:"settings"},r.createElement("p",{className:"settingsNameContainer"},l.name),r.createElement("div",{className:"setSelector"},r.createElement("p",null,"Set: "),r.createElement("input",{className:"setInput",type:"text",placeholder:l.set,value:c,onChange:function(e){d(e.target.value)},required:!0}),s.loading?r.createElement(nu,{right:"20px"}):null,r.createElement("button",{className:"setDropButton",onClick:function(){f(!h)}},"..."),h?r.createElement(tu,{typeIndex:t,cardIndex:n,sets:u,setImage:o,setOpenSetDropDown:f,changeCardSet:g}):null),r.createElement("img",{ref:o,draggable:"false",className:"smallCardImage hidden",style:{left:"".concat(i.left,"px"),top:"".concat(i.top,"px")},src:au,alt:"Doopsie"}),r.createElement("button",{onClick:function(){return p(l.cardArt)}},"Make Deck Image"))};var iu=t(3300),lu=t.n(iu);const su=function(){var e=Ze()(_e().mark((function e(r){var t,n;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=[],n=0,e.prev=2,e.next=5,lu()("".concat("https://api.scryfall.com","/cards/named?exact=").concat(r)).then((function(e){return e.json()})).then(function(){var e=Ze()(_e().mark((function e(r){return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,lu()(r.prints_search_uri).then((function(e){return e.json()})).then(function(){var e=Ze()(_e().mark((function e(r){var a,o,i;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=r,o=0;case 2:if(!(o<Number(r.total_cards))){e.next=17;break}if(void 0===a.data[o-Number(n)]){e.next=7;break}i=a.data[o-Number(n)],e.next=12;break;case 7:return e.next=9,lu()(r.next_page).then((function(e){return e.json()})).then((function(e){return e}));case 9:a=e.sent,i=a.data[0],n+=Number(175);case 12:i.image_uris||(i=i.card_faces[0]),t.push({setName:i.set_name,cardArt:i.image_uris.art_crop,cardImage:i.image_uris.normal});case 14:++o,e.next=2;break;case 17:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 2:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 5:return e.abrupt("return",t);case 8:return e.prev=8,e.t0=e.catch(2),console.log("Error: ",e.t0),e.abrupt("return",null);case 12:case"end":return e.stop()}}),e,null,[[2,8]])})));return function(r){return e.apply(this,arguments)}}();function uu(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function cu(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?uu(Object(t),!0).forEach((function(r){De()(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):uu(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var du=function(e){var t=e.typeIndex,n=e.cardIndex,a=e.setOpenSettings,o=e.card,i=e.changeCardSet,l=e.changeDeckArt,s=(0,r.useRef)(null),u=(0,r.useRef)(null),c=(0,r.useState)(""),d=ze()(c,2),h=d[0],f=d[1],g=(0,r.useState)({setList:[],loading:!1}),p=ze()(g,2),m=p[0],y=p[1],S=(0,r.useState)([]),v=ze()(S,2),C=v[0],A=v[1],b=(0,r.useState)(!1),k=ze()(b,2),w=k[0],B=k[1],D=(0,r.useState)({top:Number(150),left:Number(420)}),T=ze()(D,2),M=T[0];return T[1],(0,r.useEffect)((function(){function e(){return(e=Ze()(_e().mark((function e(){var r;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return y(cu(cu({},m),{},{loading:!0})),e.next=3,su(o.name);case 3:r=e.sent,y(cu(cu({},m),{},{setList:r,loading:!1})),A(r);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){e.apply(this,arguments)}()}),[name]),(0,r.useEffect)((function(){function e(e){s.current&&!s.current.contains(e.target)&&(document.querySelectorAll(".cardContainer").forEach((function(e){e.style.opacity="1",setTimeout((function(){e.style.pointerEvents="auto"}),1)})),a(!1))}return document.addEventListener("mousedown",e),function(){document.removeEventListener("mousedown",e)}})),(0,r.useEffect)((function(){if(""!==h&&!1===m.loading){for(var e=[],r=0;r<m.setList.length;++r)m.setList[r].setName.toUpperCase().startsWith(h.toUpperCase())&&e.push(m.setList[r]);A(e),B(!0)}else B(!1)}),[h,m.loading]),r.createElement(ou,{typeIndex:t,cardIndex:n,settingWindow:s,setImage:u,imageCoords:M,card:o,sets:m,filterSets:C,userQuery:h,setUserQuery:f,openSetDropDown:w,setOpenSetDropDown:B,changeCardSet:i,changeDeckArt:l})};du.propTypes={changeDeckArt:i().func.isRequired};const hu=ve((function(e){return{}}),{changeDeckArt:zs})(du),fu=t.p+"41675d036ebfe018e486b5de6589ae7f.png",gu=function(e){var t=e.dragRef,n=e.isDragging,a=e.typeIndex,o=e.cardIndex,i=e.card,l=e.cardArt,s=e.changeQuantity,u=e.changeCardSet,c=e.isHovering,d=void 0!==c&&c,h=e.openSettings,f=e.setOpenSettings,g=e.currentManaCost,p=e.imageVariant,m=e.cardDrag,y=n?"ghostCard":null;return r.createElement(r.Fragment,null,r.createElement("div",{className:y},r.createElement("div",{ref:t,className:"cardArtContainer"},r.createElement("div",{className:!d||h||m?"cardColorContainer":"manaHover cardColorContainer"},g),r.createElement("div",{className:"quantCover"}),l,r.createElement("div",{className:!d||h||m?"quantCover settingsCover":"settingsHover quantCover settingsCover",onClick:function(){h||(document.querySelectorAll(".cardContainer").forEach((function(e){i.name!==e.childNodes[0].childNodes[0].childNodes[1].innerHTML&&(e.style.opacity=".4"),e.style.pointerEvents="none"})),f(!0))}},r.createElement("img",{src:fu,alt:"settings",className:"settingsIcon"})),r.createElement("div",{className:"quantContainer"},r.createElement("button",{className:d&&!h?"decrementCard quantButton":"quantButton",style:{marginTop:"-2px"},onClick:function(){return s(i.name,i.mainType,-1)}},"-"),r.createElement("div",{className:"cardQuantity"},r.createElement("span",{className:"quantInput",contentEditable:"true",suppressContentEditableWarning:"true",type:"text",onKeyPress:function(e){"Enter"===e.nativeEvent.key?(e.preventDefault(),e.target.innerHTML||(e.target.innerHTML=i.quantity),e.target.blur()):Number.isInteger(Number(e.nativeEvent.key))&&2!==e.target.innerHTML.length||e.preventDefault()},onBlur:function(e){s(i.name,i.mainType,Number(e.target.innerHTML)-i.quantity)}},i.quantity),r.createElement("p",{className:"quantityX"},"x")),r.createElement("button",{className:!d||h||m?"quantButton":"incrementCard quantButton",style:{marginTop:"1px"},onClick:function(){return s(i.name,i.mainType,1)}},"+"))),r.createElement("p",{className:"cardName"},i.name),h?r.createElement(hu,{typeIndex:a,cardIndex:o,setOpenSettings:f,card:i,changeCardSet:u}):d&&!m?r.createElement(Qi.img,{className:"bigCardImage",draggable:"false",src:i.cardImage,variants:p,initial:"hidden",animate:"visible",exit:"exit"}):null))},pu=function(e){var t=e.src,n=e.offset,a=e.zIndex,o=e.position,i=e.vOffset,l=e.className;return r.createElement("img",{className:l,src:t,style:{left:"".concat(n),zIndex:a,position:"".concat(o),top:"".concat(i)},alt:"Whoopsie"})},mu=function(e){var t=e.children,n=e.delay,a=(0,r.useState)(!1),o=ze()(a,2),i=o[0],l=o[1];return(0,r.useEffect)((function(){var e=setTimeout((function(){return l(!0)}),n);return function(){return clearTimeout(e)}})),i&&r.createElement(r.Fragment,null,t)},yu=function(e){var t=e.typeIndex,n=e.cardIndex,a=e.card,o=e.changeQuantity,i=e.changeCardSet,l=e.moveCard,s=e.cardDrag,u=e.setCardDrag,c=(0,r.useRef)(null),d=(0,Ws.useDrag)({item:{type:Vs,typeIndex:t,cardIndex:n,name:a.name,image:a.cardArt},begin:function(){u(!0)},end:function(){u(!1)},isDragging:function(e){return a.name===e.getItem().name},collect:function(e){return{isDragging:e.isDragging()}}}),h=ze()(d,2),f=h[0].isDragging,g=h[1],p=(0,Ws.useDrop)({accept:Vs,hover:function(e,r){e.typeIndex===t&&e.cardIndex===n||(l(e.typeIndex,e.cardIndex,t,n),e.typeIndex=t,e.cardIndex=n)}});g((0,ze()(p,2)[1])(c));for(var m=(0,r.useState)(!1),y=ze()(m,2),S=y[0],v=y[1],C=[],A=a.manaCost,b=0;b<A.length;++b)switch(A[b]){case"W":C.push(r.createElement("li",{key:b,className:"cardColorDot white",alt:"W"}));break;case"U":C.push(r.createElement("li",{key:b,className:"cardColorDot blue",alt:"U"}));break;case"B":C.push(r.createElement("li",{key:b,className:"cardColorDot black",alt:"B"}));break;case"G":C.push(r.createElement("li",{key:b,className:"cardColorDot green",alt:"G"}));break;case"R":C.push(r.createElement("li",{key:b,className:"cardColorDot red",alt:"R"}));break;case"C":C.push(r.createElement("li",{key:b,className:"cardColorDot C",alt:"C"}));break;case"X":C.push(r.createElement("li",{key:b,className:"cardColorDot X",alt:"X"}));break;case"S":C.push(r.createElement("li",{key:b,className:"cardColorDot S",alt:"S"}));break;case"0":C.push(r.createElement("li",{key:b,className:"cardColorDot mana0",alt:"0"}));break;case"1":C.push(r.createElement("li",{key:b,className:"cardColorDot mana1",alt:"1"}));break;case"2":C.push(r.createElement("li",{key:b,className:"cardColorDot mana2",alt:"2"}));break;case"3":C.push(r.createElement("li",{key:b,className:"cardColorDot mana3",alt:"3"}));break;case"4":C.push(r.createElement("li",{key:b,className:"cardColorDot mana4",alt:"4"}));break;case"5":C.push(r.createElement("li",{key:b,className:"cardColorDot mana5",alt:"5"}));break;case"6":C.push(r.createElement("li",{key:b,className:"cardColorDot mana6",alt:"6"}));break;case"7":C.push(r.createElement("li",{key:b,className:"cardColorDot mana7",alt:"7"}));break;case"8":C.push(r.createElement("li",{key:b,className:"cardColorDot mana8",alt:"8"}));break;case"9":C.push(r.createElement("li",{key:b,className:"cardColorDot mana9",alt:"9"}));break;case"10":C.push(r.createElement("li",{key:b,className:"cardColorDot mana10",alt:"10"}));break;case"11":C.push(r.createElement("li",{key:b,className:"cardColorDot mana11",alt:"11"}));break;case"12":C.push(r.createElement("li",{key:b,className:"cardColorDot mana12",alt:"12"}));break;case"13":C.push(r.createElement("li",{key:b,className:"cardColorDot mana13",alt:"13"}));break;case"14":C.push(r.createElement("li",{key:b,className:"cardColorDot mana14",alt:"14"}));break;case"15":C.push(r.createElement("li",{key:b,className:"cardColorDot mana15",alt:"15"}));break;case"16":C.push(r.createElement("li",{key:b,className:"cardColorDot mana16",alt:"16"}));break;case"17":C.push(r.createElement("li",{key:b,className:"cardColorDot mana17",alt:"17"}));break;case"18":C.push(r.createElement("li",{key:b,className:"cardColorDot mana18",alt:"18"}));break;case"19":C.push(r.createElement("li",{key:b,className:"cardColorDot mana19",alt:"19"}));break;case"20":C.push(r.createElement("li",{key:b,className:"cardColorDot mana20",alt:"20"}));break;case"2/U":C.push(r.createElement("li",{key:b,className:"cardColorDot Uor2",alt:"2/U"}));break;case"2/G":C.push(r.createElement("li",{key:b,className:"cardColorDot Gor2",alt:"2/G"}));break;case"2/R":C.push(r.createElement("li",{key:b,className:"cardColorDot Ror2",alt:"2/R"}));break;case"2/W":C.push(r.createElement("li",{key:b,className:"cardColorDot Wor2",alt:"2/W"}));break;case"2/B":C.push(r.createElement("li",{key:b,className:"cardColorDot Uor2",alt:"2/B"}));break;case"R/W":C.push(r.createElement("li",{key:b,className:"cardColorDot RorW",alt:"R/W"}));break;case"G/U":C.push(r.createElement("li",{key:b,className:"cardColorDot GorU",alt:"G/U"}));break;case"B/G":C.push(r.createElement("li",{key:b,className:"cardColorDot BorG",alt:"B/G"}));break;case"B/R":C.push(r.createElement("li",{key:b,className:"cardColorDot BorR",alt:"B/R"}));break;case"G/W":C.push(r.createElement("li",{key:b,className:"cardColorDot GorW",alt:"G/W"}));break;case"R/G":C.push(r.createElement("li",{key:b,className:"cardColorDot RorG",alt:"R/G"}));break;case"W/B":C.push(r.createElement("li",{key:b,className:"cardColorDot WorB",alt:"W/B"}));break;case"U/B":C.push(r.createElement("li",{key:b,className:"cardColorDot UorB",alt:"U/B"}));break;case"U/R":C.push(r.createElement("li",{key:b,className:"cardColorDot UorR",alt:"U/R"}));break;case"W/U":C.push(r.createElement("li",{key:b,className:"cardColorDot WorU",alt:"W/U"}));break;case"R/P":C.push(r.createElement("li",{key:b,className:"cardColorDot RP",alt:"R/P"}));break;case"G/P":C.push(r.createElement("li",{key:b,className:"cardColorDot GP",alt:"G/P"}));break;case"U/P":C.push(r.createElement("li",{key:b,className:"cardColorDot UP",alt:"U/P"}));break;case"W/P":C.push(r.createElement("li",{key:b,className:"cardColorDot WP",alt:"W/P"}));break;case"B/P":C.push(r.createElement("li",{key:b,className:"cardColorDot BP",alt:"B/P"}));break;case"HW":C.push(r.createElement("img",{key:b,className:"cardColorDot HW",alt:"HW"}))}for(var k=[],w=0;w<a.quantity;++w)if(0===w)k.push(r.createElement(pu,{key:w,src:a.cardArt,offset:0,zIndex:4,position:"relative",vOffset:w,className:"cardArt"}));else{if(!(w<4)){k.push(r.createElement(pu,{key:w,src:a.cardArt,offset:0,zIndex:"".concat(4-w),position:"absolute",vOffset:"".concat(-4*w,"px"),className:"cardArt moreCards"}));break}k.push(r.createElement(pu,{key:w,src:a.cardArt,offset:0,zIndex:"".concat(4-w),position:"absolute",vOffset:"".concat(-4*w,"px"),className:"cardArt"}))}return r.createElement(mu,null,r.createElement(Qi.div,{className:"cardContainer",key:a.name,variants:{hidden:{opacity:0,y:8},visible:{opacity:1,y:0,transition:{ease:"easeOut",duration:.5}},exit:{opacity:0,y:8,transition:{ease:"easeOut",duration:.35}}},initial:"hidden",animate:"visible",exit:"exit"},r.createElement(eu,_s()({hoverDelayInMs:170},{onMouseOver:function(e){var r=e.e,t=e.setIsHovering,n=e.unsetIsHovering;"bigCardImage"===r.target.className||"cardName"===r.target.className||"settings"===r.target.className?n():S||t()}}),r.createElement(gu,{isDragging:f,dragRef:c,typeIndex:t,cardIndex:n,card:a,cardArt:k,changeQuantity:o,openSettings:S,setOpenSettings:v,currentManaCost:C,imageVariant:{hidden:{opacity:0,y:-8},visible:{opacity:1,y:0,transition:{ease:"easeOut",duration:.45}},exit:{opacity:0,y:-8}},changeCardSet:i,cardDrag:s}))))},Su=function(e){var t=e.type,n=e.toggleType,a=e.typeIndex,o=e.quantity,i=t.open?"arrow-down active":"arrow-down";return r.createElement(r.Fragment,null,r.createElement("div",{className:"typeHeader"},r.createElement("div",{className:"typeTitle"},t.name," (",o,")",t.open?null:"..."),r.createElement("button",{className:i,onClick:function(){return n(a,t.open)}})),r.createElement("hr",{className:"typeDivider"}))},vu=function(e){for(var t=e.type,n=e.typeIndex,a=e.changeQuantity,o=e.changeCardSet,i=e.moveCard,l=e.cardDrag,s=e.setCardDrag,u=e.toggleType,c=0,d=0;d<t.cards.length;++d)c=Number(c)+Number(t.cards[d].quantity);return r.createElement("div",{className:"typeContent"},r.createElement(Su,{type:t,toggleType:u,typeIndex:n,quantity:c}),r.createElement("div",{className:"typeContainer"},r.createElement(nl,null,t.cards.map((function(e,u){if(t.open)return r.createElement(yu,{typeIndex:n,cardIndex:u,card:e,key:e.name,changeQuantity:a,changeCardSet:o,moveCard:i,cardDrag:l,setCardDrag:s})})))))};var Cu=t(213);const Au=t.p+"fonts/search-icon.svg",bu=function(e){var t=e.searchCard,n=e.query,a=e.queryChange,o=e.autofill;return r.createElement("div",{className:"searchArea"},r.createElement("input",{className:"search searchBar",value:n.userQuery,style:{color:o||""===n.userQuery?null:"red"},onChange:function(e){a(e)},onKeyDown:function(e){"Enter"===e.key&&t(o)}}),r.createElement("input",{className:"search ghostBar",placeholder:""===n.userQuery?"search card":o?n.userQuery.concat(o.slice(n.userQuery.length)):"",disabled:!0}),n.loading?r.createElement(nu,{right:"40px"}):null,r.createElement("img",{onClick:function(){return t(o)},className:"searchIcon",src:Au}))},ku=JSON.parse('["Creature","Enchantment","Artifact","Planeswalker","Instant","Sorcery","Land","Hero","Vanguard","Conspiracy","Scheme","Plane","Phenomenon"]'),wu=function(){var e=Ze()(_e().mark((function e(r,t){var n,a,o,i,l,s,u,c,d,h,f,g,p;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t||(t=1),n=r.replace(/\s*$/,""),a="",o="",i="",l="",s=["",""],u="",c="",d=[],e.next=13,lu()("".concat("https://api.scryfall.com","/cards/named?exact=").concat(r)).then((function(e){return e.json()})).then(function(){var e=Ze()(_e().mark((function e(r){var t;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r.image_uris||(r=r.card_faces[0]),c=r.set_name,a=r.image_uris.art_crop,o=r.image_uris.normal,i=r.cmc,l=r.mana_cost,s=r.type_line.split("—"),u=r.colors,!r.all_parts){e.next=17;break}t=0;case 10:if(!(t<r.all_parts.length)){e.next=17;break}if("token"!==r.all_parts[t].component){e.next=14;break}return e.next=14,lu()(r.all_parts[t].uri).then((function(e){return e.json()})).then(function(){var e=Ze()(_e().mark((function e(r){return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:d.push({name:r.name,image:r.image_uris.art_crop,cardImage:r.image_uris.normal,parentName:n});case 1:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 14:++t,e.next=10;break;case 17:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}());case 13:s[1]||(s[1]=""),h=s[0].trim().split(" "),f="",g=0;case 17:if(!(g<ku.length)){e.next=24;break}if(!h.includes(ku[g])){e.next=21;break}return f=ku[g],e.abrupt("break",24);case 21:++g,e.next=17;break;case 24:return(l=l.replace(/\{/g,"").replace(/\}/g,",").split(",")).pop(),p={name:n,quantity:t,setName:c,cardArt:a,cardImage:o,cmc:i,manaCost:l,mainType:f,types:h,subtypes:s[1].trim().split(" "),colors:u,tokens:d},e.abrupt("return",p);case 30:return e.prev=30,e.t0=e.catch(0),console.log("Error: ",e.t0),e.abrupt("return",null);case 34:case"end":return e.stop()}}),e,null,[[0,30]])})));return function(r,t){return e.apply(this,arguments)}}(),Bu=JSON.parse('["\\"Ach! Hans, Run!\\"","\\"Rumors of My Death . . .\\"","1996 World Champion","A Display of My Dark Power","A Good Thing","A Reckoning Approaches","AWOL","Abandon Hope","Abandon Reason","Abandoned Outpost","Abandoned Sarcophagus","Abattoir Ghoul","Abbey Gargoyles","Abbey Griffin","Abbey Matron","Abbot of Keral Keep","Abduction","Aberrant Researcher // Perfected Form","Abeyance","Abhorrent Overlord","Abian, Luvion Usurper","Abjure","Abnormal Endurance","Abolish","Abominable Treefolk","Abomination","Abomination of Gudul","Aboroth","Aboshan\'s Desire","Aboshan, Cephalid Emperor","About Face","Abrade","Abrupt Decay","Absolute Grace","Absolute Law","Absolver Thrull","Absorb","Absorb Vis","Abstract Iguanart","Abstruse Interference","Abu Ja\'far","Abuna Acolyte","Abuna\'s Chant","Abundance","Abundant Growth","Abundant Maw","Abyssal Gatekeeper","Abyssal Horror","Abyssal Hunter","Abyssal Nightstalker","Abyssal Nocturnus","Abyssal Persecutor","Abyssal Specter","Abzan Advantage","Abzan Ascendancy","Abzan Banner","Abzan Battle Priest","Abzan Beastmaster","Abzan Charm","Abzan Falconer","Abzan Guide","Abzan Kin-Guard","Abzan Runemark","Abzan Skycaptain","Academy Drake","Academy Elite","Academy Journeymage","Academy Raider","Academy Rector","Academy Researchers","Academy Ruins","Academy at Tolaria West","Accelerate","Accelerated Mutation","Acceptable Losses","Accessories to Murder","Acclaimed Contender","Accomplished Automaton","Accorder Paladin","Accorder\'s Shield","Accumulated Knowledge","Accursed Centaur","Accursed Horde","Accursed Spirit","Accursed Witch // Infectious Curse","Acid Rain","Acid Web Spider","Acid-Spewer Dragon","Acidic Dagger","Acidic Slime","Acidic Sliver","Acidic Soil","Acolyte of Affliction","Acolyte of Xathrid","Acolyte of the Inferno","Acolyte\'s Reward","Acorn Catapult","Acorn Harvest","Acornelia, Fashionable Filcher","Acquire","Acquisitions Expert","Acridian","Acrobatic Maneuver","Act of Aggression","Act of Authority","Act of Heroism","Act of Treason","Act on Impulse","Active Volcano","Ad Nauseam","Adamant Will","Adamaro, First to Desire","Adanto Vanguard","Adaptive Automaton","Adaptive Shimmerer","Adaptive Snapjaw","Adarkar Sentinel","Adarkar Unicorn","Adarkar Valkyrie","Adarkar Wastes","Adarkar Windform","Adder-Staff Boggart","Addle","Adeliz, the Cinder Wind","Adherent of Hope","Admiral Beckett Brass","Admiral\'s Order","Admonition Angel","Adorable Kitten","Adorned Pouncer","Adriana\'s Valor","Adriana, Captain of the Guard","Adun Oakenshield","Advance Scout","Advanced Hoverguard","Advanced Stitchwing","Advantageous Proclamation","Advent of the Wurm","Adventure Awaits","Adventurers\' Guildhouse","Adventuring Gear","Adventurous Impulse","Adverse Conditions","Advice from the Fae","Advocate of the Beast","Aegis Angel","Aegis Automaton","Aegis Turtle","Aegis of Honor","Aegis of the Gods","Aegis of the Heavens","Aegis of the Meek","Aeolipile","Aeon Chronicler","Aeon Engine","Aerathi Berserker","Aerial Assault","Aerial Caravan","Aerial Engineer","Aerial Formation","Aerial Guide","Aerial Maneuver","Aerial Modification","Aerial Predation","Aerial Responder","Aerial Toastmaster","Aerial Volley","Aerie Bowmasters","Aerie Mystics","Aerie Ouphes","Aerie Worshippers","Aeromunculus","Aeronaut Admiral","Aeronaut Tinkerer","Aesthetic Consultation","Aesthir Glider","Aether Adept","Aether Barrier","Aether Burst","Aether Charge","Aether Chaser","Aether Figment","Aether Flash","Aether Gale","Aether Gust","Aether Herder","Aether Hub","Aether Inspector","Aether Meltdown","Aether Membrane","Aether Mutation","Aether Poisoner","Aether Rift","Aether Searcher","Aether Shockwave","Aether Snap","Aether Spellbomb","Aether Sting","Aether Storm","Aether Swooper","Aether Theorist","Aether Tide","Aether Tradewinds","Aether Tunnel","Aether Vial","Aether Web","Aetherborn Marauder","Aetherflame Wall","Aetherflux Reservoir","Aethergeode Miner","Aetherize","Aetherling","Aethermage\'s Touch","Aetherplasm","Aethershield Artificer","Aethersnatch","Aethersnipe","Aethersphere Harvester","Aetherspouts","Aethersquall Ancient","Aetherstorm Roc","Aetherstream Leopard","Aethertide Whale","Aethertorch Renegade","Aethertow","Aetherwind Basker","Aetherworks Marvel","Affa Guard Hound","Affa Protector","Affectionate Indrik","Afflict","Afflicted Deserter // Werewolf Ransacker","Afiya Grove","Afterlife","Aftershock","Agadeem Occultist","Agadeem\'s Awakening // Agadeem, the Undercrypt","Ageless Entity","Ageless Sentinels","Agent of Acquisitions","Agent of Erebos","Agent of Horizons","Agent of Masks","Agent of Shauku","Agent of Stromgald","Agent of Treachery","Agent of the Fates","Aggravate","Aggravated Assault","Aggression","Aggressive Crag","Aggressive Instinct","Aggressive Mammoth","Aggressive Mining","Aggressive Urge","Agility","Agitator Ant","Agonizing Demise","Agonizing Memories","Agonizing Remorse","Agonizing Syphon","Agony Warp","Agoraphobia","Agrus Kos, Wojek Veteran","Agyrem","Ahn-Crop Champion","Ahn-Crop Crasher","Ahn-Crop Invader","Aid from the Cowl","Aid the Fallen","Aim High","Ainok Artillerist","Ainok Bond-Kin","Ainok Guide","Ainok Survivalist","Ainok Tracker","Air Bladder","Air Elemental","Air Servant","Airborne Aid","Airdrop Aeronauts","Airdrop Condor","Aisling Leprechaun","Ajani Goldmane","Ajani Steadfast","Ajani Unyielding","Ajani Vengeant","Ajani\'s Aid","Ajani\'s Chosen","Ajani\'s Comrade","Ajani\'s Influence","Ajani\'s Last Stand","Ajani\'s Mantra","Ajani\'s Presence","Ajani\'s Pridemate","Ajani\'s Sunstriker","Ajani\'s Welcome","Ajani, Adversary of Tyrants","Ajani, Caller of the Pride","Ajani, Inspiring Leader","Ajani, Mentor of Heroes","Ajani, Strength of the Pride","Ajani, Valiant Protector","Ajani, Wise Counselor","Ajani, the Greathearted","Akim, the Soaring Wind","Akiri, Fearless Voyager","Akiri, Line-Slinger","Akki Avalanchers","Akki Blizzard-Herder","Akki Coalflinger","Akki Drillmaster","Akki Lavarunner // Tok-Tok, Volcano Born","Akki Raider","Akki Rockspeaker","Akki Underling","Akki Underminer","Akoum","Akoum Battlesinger","Akoum Boulderfoot","Akoum Firebird","Akoum Flameseeker","Akoum Hellhound","Akoum Hellkite","Akoum Refuge","Akoum Stonewaker","Akoum Warrior // Akoum Teeth","Akrasan Squire","Akroan Conscriptor","Akroan Crusader","Akroan Hoplite","Akroan Horse","Akroan Jailer","Akroan Line Breaker","Akroan Mastiff","Akroan Phalanx","Akroan Sergeant","Akroan Skyguard","Akroma\'s Blessing","Akroma\'s Devoted","Akroma\'s Memorial","Akroma\'s Vengeance","Akroma, Angel of Fury","Akroma, Angel of Wrath","Akroma, Angel of Wrath Avatar","Akron Legionnaire","Aku Djinn","Akuta, Born of Ash","Al-abara\'s Carpet","Alabaster Dragon","Alabaster Kirin","Alabaster Leech","Alabaster Mage","Alabaster Potion","Alabaster Wall","Alaborn Cavalier","Alaborn Grenadier","Alaborn Musketeer","Alaborn Trooper","Alaborn Veteran","Alaborn Zealot","Aladdin","Aladdin\'s Lamp","Aladdin\'s Ring","Alarum","Albino Troll","Alchemist\'s Apprentice","Alchemist\'s Gift","Alchemist\'s Greeting","Alchemist\'s Refuge","Alchemist\'s Vial","Alchor\'s Tomb","Aleatory","Alela, Artful Provocateur","Alena, Kessig Trapper","Alert Heedbonder","Alert Shu Infantry","Alesha\'s Vanguard","Alesha, Who Smiles at Death","Alexander Clamilton","Alexi\'s Cloak","Alexi, Zephyr Mage","Algae Gharial","Alhammarret\'s Archive","Alhammarret, High Arbiter","Ali Baba","Ali from Cairo","Aliban\'s Tower","Aligned Hedron Network","Alirios, Enraptured","Alive // Well","All Hallow\'s Eve","All Is Dust","All Shall Smolder in My Wake","All Suns\' Dawn","All That Glitters","All in Good Time","Allay","Alley Evasion","Alley Grifters","Alley Strangler","Alliance of Arms","Allied Assault","Allied Reinforcements","Allied Strategies","Allosaurus Rider","Allosaurus Shepherd","Alloy Golem","Alloy Myr","Allure of the Unknown","Alluring Scent","Alluring Siren","Ally Encampment","Almighty Brushwagg","Alms","Alms Beast","Alms Collector","Alms of the Vein","Alpha Authority","Alpha Brawl","Alpha Kavu","Alpha Myr","Alpha Status","Alpha Tyrranax","Alpine Grizzly","Alpine Guide","Alpine Houndmaster","Alpine Moon","Alpine Watchdog","Alseid of Life\'s Bounty","Altac Bloodseeker","Altar Golem","Altar of Bone","Altar of Dementia","Altar of Mogis","Altar of Shadows","Altar of the Brood","Altar of the Lost","Altar of the Pantheon","Altar\'s Light","Altar\'s Reap","Alter Reality","Altered Ego","Aluren","Always Watching","Amaranthine Wall","Amass the Components","Amateur Auteur","Ambassador Laquatus","Ambassador Oak","Amber Prison","Ambiguity","Ambition\'s Cost","Ambitious Aetherborn","Ambuscade","Ambuscade Shaman","Ambush","Ambush Commander","Ambush Krotiq","Ambush Party","Ambush Viper","Aminatou\'s Augury","Aminatou, the Fateshifter","Ammit Eternal","Amnesia","Amoeboid Changeling","Amok","Amorphous Axe","Amphibious Kavu","Amphin Cutthroat","Amphin Pathmage","Amplifire","Ampryn Tactician","Amrou Kithkin","Amrou Scout","Amrou Seekers","Amugaba","Amulet of Kroog","Amulet of Quoz","Amulet of Safekeeping","Amulet of Unmaking","Amulet of Vigor","An-Havva Constable","An-Havva Inn","An-Havva Township","An-Zerrin Ruins","Ana Battlemage","Ana Disciple","Ana Sanctuary","Anaba Ancestor","Anaba Bodyguard","Anaba Shaman","Anaba Spirit Crafter","Anaconda","Anafenza, Kin-Tree Spirit","Anafenza, the Foremost","Anarchist","Anarchy","Anathemancer","Anavolver","Anax and Cymede","Anax, Hardened in the Forge","Ancestor Dragon","Ancestor\'s Chosen","Ancestor\'s Prophet","Ancestral Blade","Ancestral Knowledge","Ancestral Mask","Ancestral Memories","Ancestral Recall","Ancestral Statue","Ancestral Tribute","Ancestral Vengeance","Ancestral Vision","Anchor to the Aether","Ancient Amphitheater","Ancient Animus","Ancient Brontodon","Ancient Carp","Ancient Crab","Ancient Craving","Ancient Den","Ancient Excavation","Ancient Greenwarden","Ancient Grudge","Ancient Hellkite","Ancient Hydra","Ancient Kavu","Ancient Ooze","Ancient Runes","Ancient Silverback","Ancient Spider","Ancient Spring","Ancient Stirrings","Ancient Stone Idol","Ancient Tomb","Ancient Ziggurat","Andradite Leech","Angel of Condemnation","Angel of Deliverance","Angel of Despair","Angel of Destiny","Angel of Finality","Angel of Flight Alabaster","Angel of Fury","Angel of Glory\'s Rise","Angel of Grace","Angel of Invention","Angel of Jubilation","Angel of Light","Angel of Mercy","Angel of Renewal","Angel of Retribution","Angel of Salvation","Angel of Sanctions","Angel of Serenity","Angel of Vitality","Angel of the Dawn","Angel of the Dire Hour","Angel of the God-Pharaoh","Angel\'s Feather","Angel\'s Grace","Angel\'s Herald","Angel\'s Mercy","Angel\'s Tomb","Angel\'s Trumpet","Angelfire Crusader","Angelheart Protector","Angelheart Vial","Angelic Accord","Angelic Arbiter","Angelic Armaments","Angelic Ascension","Angelic Benediction","Angelic Blessing","Angelic Captain","Angelic Chorus","Angelic Curator","Angelic Destiny","Angelic Edict","Angelic Exaltation","Angelic Favor","Angelic Field Marshal","Angelic Gift","Angelic Guardian","Angelic Overseer","Angelic Page","Angelic Protector","Angelic Purge","Angelic Renewal","Angelic Reward","Angelic Rocket","Angelic Shield","Angelic Skirmisher","Angelic Voices","Angelic Wall","Angelsong","Anger","Anger of the Gods","Angler Drake","Angler Turtle","Angrath\'s Ambusher","Angrath\'s Fury","Angrath\'s Marauders","Angrath\'s Rampage","Angrath, Captain of Chaos","Angrath, Minotaur Pirate","Angrath, the Flame-Chained","Angry Mob","Anguished Unmaking","Angus Mackenzie","Animal Boneyard","Animal Magnetism","Animal Sanctuary","Animar, Soul of Elements","Animate Artifact","Animate Dead","Animate Land","Animate Library","Animate Spell","Animate Wall","Animating Faerie // Bring to Life","Animation Module","Animist\'s Awakening","Animus of Predation","Anje Falkenrath","Anje\'s Ravager","Ankh of Mishra","Ankle Shanker","Annex","Annihilate","Annihilating Fire","Annul","Anodet Lurker","Anoint","Anointed Chorister","Anointed Deacon","Anointed Procession","Anointer Priest","Anointer of Champions","Anowon, the Ruin Sage","Anowon, the Ruin Thief","Answered Prayers","Ant Queen","Antagonism","Anthem of Rakdos","Anthousa, Setessan Hero","Anthroplasm","Anti-Magic Aura","Anticipate","Anticognition","Antler Skulkin","Anurid Barkripper","Anurid Brushhopper","Anurid Murkdiver","Anurid Scavenger","Anurid Swarmsnapper","Anvil of Bogardan","Anvilwrought Raptor","Anya, Merciless Angel","Apathy","Apes of Rath","Apex Altisaur","Apex Hawks","Apex of Power","Aphemia, the Cacophony","Aphetto Alchemist","Aphetto Dredging","Aphetto Exterminator","Aphetto Grifter","Aphetto Runecaster","Aphetto Vulture","Aphotic Wisps","Apocalypse","Apocalypse Chime","Apocalypse Demon","Apocalypse Hydra","Apostle of Purifying Light","Apostle\'s Blessing","Apothecary Geist","Apothecary Initiate","Appeal // Authority","Appetite for Brains","Appetite for the Unnatural","Applied Aeronautics","Applied Biomancy","Apprentice Necromancer","Apprentice Sorcerer","Apprentice Wizard","Approach My Molten Realm","Approach of the Second Sun","Aquamoeba","Aquamorph Entity","Aquastrand Spider","Aquatic Incursion","Aqueous Form","Aquitect\'s Will","Aquus Steed","Araba Mothrider","Arachnogenesis","Arachnoid","Arachnus Spinner","Arachnus Web","Aradara Express","Arahbo, Roar of the World","Arashi, the Sky Asunder","Arashin Cleric","Arashin Foremost","Arashin Sovereign","Arashin War Beast","Arasta of the Endless Web","Arbalest Elite","Arbiter of Knollridge","Arbiter of the Ideal","Arbor Armament","Arbor Colossus","Arbor Elf","Arborback Stomper","Arboreal Grazer","Arboretum Elemental","Arboria","Arc Blade","Arc Lightning","Arc Mage","Arc Runner","Arc Trail","Arc-Slogger","Arcades Sabboth","Arcades, the Strategist","Arcane Adaptation","Arcane Artisan","Arcane Denial","Arcane Encyclopedia","Arcane Flight","Arcane Laboratory","Arcane Lighthouse","Arcane Melee","Arcane Sanctum","Arcane Savant","Arcane Signet","Arcane Spyglass","Arcane Teachings","Arcanis the Omnipotent","Arcanis, the Omnipotent Avatar","Arcanist\'s Owl","Arcanum Wings","Arcbond","Arcbound Bruiser","Arcbound Crusher","Arcbound Fiend","Arcbound Hybrid","Arcbound Lancer","Arcbound Overseer","Arcbound Overseer Avatar","Arcbound Ravager","Arcbound Reclaimer","Arcbound Slith","Arcbound Stinger","Arcbound Wanderer","Arcbound Worker","Arch of Orazca","Archaeological Dig","Archaeomancer","Archaeomender","Archangel","Archangel Avacyn // Avacyn, the Purifier","Archangel of Strife","Archangel of Thune","Archangel of Tithes","Archangel\'s Light","Archdemon of Paliano","Archdemon of Unx","Archers of Qarsi","Archers\' Parapet","Archery Training","Archetype of Aggression","Archetype of Courage","Archetype of Endurance","Archetype of Finality","Archetype of Imagination","Archfiend of Depravity","Archfiend of Despair","Archfiend of Ifnir","Archfiend of Spite","Archfiend\'s Vessel","Archipelagore","Architect of the Untamed","Architects of Will","Archive Trap","Archivist","Archmage Ascension","Archmage\'s Charm","Archon of Absolution","Archon of Emeria","Archon of Falling Stars","Archon of Justice","Archon of Redemption","Archon of Sun\'s Grace","Archon of Valor\'s Reach","Archon of the Triumvirate","Archpriest of Iona","Archway Angel","Archweaver","Archwing Dragon","Arclight Phoenix","Arctic Aven","Arctic Flats","Arctic Foxes","Arctic Merfolk","Arctic Nishoba","Arctic Wolves","Arcum Dagsson","Arcum\'s Astrolabe","Arcum\'s Sleigh","Arcum\'s Weathervane","Arcum\'s Whistle","Arden Angel","Ardent Electromancer","Ardent Militia","Ardent Plea","Ardent Recruit","Ardent Soldier","Ardenvale Paladin","Ardenvale Tactician // Dizzying Swoop","Arena","Arena Athlete","Arena Rector","Arena Trickster","Arena of the Ancients","Arenson\'s Aura","Aretopolis","Argent Mutation","Argent Sphinx","Argentum Armor","Argivian Archaeologist","Argivian Blacksmith","Argivian Find","Argivian Restoration","Argothian Elder","Argothian Enchantress","Argothian Pixies","Argothian Swine","Argothian Treefolk","Argothian Wurm","Arguel\'s Blood Fast // Temple of Aclazotz","Aria of Flame","Arid Mesa","Arisen Gorgon","Arixmethes, Slumbering Isle","Arjun, the Shifting Flame","Ark of Blight","Arlinn Kord // Arlinn, Embraced by the Moon","Arlinn\'s Wolf","Arlinn, Voice of the Pack","Arm with Aether","Armada Wurm","Armadillo Cloak","Armageddon","Armageddon Clock","Armament Corps","Armament Master","Armament of Nyx","Armed // Dangerous","Armed Response","Armillary Sphere","Armistice","Armor Sliver","Armor Thrull","Armor of Faith","Armor of Thorns","Armorcraft Judge","Armored Ascension","Armored Cancrix","Armored Galleon","Armored Griffin","Armored Guardian","Armored Pegasus","Armored Skaab","Armored Transport","Armored Warhorse","Armored Whirl Turtle","Armored Wolf-Rider","Armorer Guildmage","Armory Automaton","Armory Guard","Armory of Iroas","Arms Dealer","Arms Depot","Army Ants","Army of Allah","Army of the Damned","Arnjlot\'s Ascent","Arrest","Arrester\'s Admonition","Arrester\'s Zeal","Arrogant Bloodlord","Arrogant Vampire","Arrogant Wurm","Arrow Storm","Arrow Volley Trap","Arrows of Justice","Arsenal Thresher","Arterial Flow","Artful Dodge","Artful Looter","Artful Maneuver","Artful Takedown","Artifact Blast","Artifact Mutation","Artifact Possession","Artifact Ward","Artificer\'s Assistant","Artificer\'s Epiphany","Artificer\'s Hex","Artificer\'s Intuition","Artificial Evolution","Artillerize","Artisan of Forms","Artisan of Kozilek","Artisan\'s Sorrow","Arvad the Cursed","Aryel, Knight of Windgrace","As Foretold","As Luck Would Have It","Ascendant Evincar","Ascended Lawmage","Ascending Aven","Asceticism","Ash Barrens","Ash Zealot","Asha\'s Favor","Ashaya, Soul of the Wild","Ashcloud Phoenix","Ashcoat Bear","Ashen Firebeast","Ashen Ghoul","Ashen Monstrosity","Ashen Powder","Ashen Rider","Ashen-Skin Zubera","Ashenmoor Cohort","Ashenmoor Gouger","Ashenmoor Liege","Ashes of the Abhorrent","Ashes of the Fallen","Ashes to Ashes","Ashiok\'s Adept","Ashiok\'s Erasure","Ashiok\'s Forerunner","Ashiok\'s Skulker","Ashiok, Dream Render","Ashiok, Nightmare Muse","Ashiok, Nightmare Weaver","Ashiok, Sculptor of Fears","Ashling the Pilgrim","Ashling the Pilgrim Avatar","Ashling\'s Prerogative","Ashling, the Extinguisher","Ashling, the Extinguisher Avatar","Ashmouth Hound","Ashnod","Ashnod\'s Altar","Ashnod\'s Battle Gear","Ashnod\'s Coupon","Ashnod\'s Cylix","Ashnod\'s Transmogrant","Ashuza\'s Breath","Asmira, Holy Avenger","Aspect of Gorgon","Aspect of Hydra","Aspect of Lamprey","Aspect of Manticore","Aspect of Mongoose","Aspect of Wolf","Asphodel Wanderer","Asphyxiate","Aspiring Aeronaut","Ass Whuppin\'","Assassin\'s Blade","Assassin\'s Strike","Assassin\'s Trophy","Assassinate","Assault // Battery","Assault Formation","Assault Griffin","Assault Strobe","Assault Suit","Assault Zeppelid","Assemble the Legion","Assemble the Rank and Vile","Assembled Alphas","Assembly Hall","Assembly-Worker","Assert Authority","Assquatch","Assure // Assemble","Astral Arena","Astral Cornucopia","Astral Drift","Astral Slide","Astral Steel","Astrolabe","Aswan Jaguar","Asylum Visitor","Atalya, Samite Master","Atarka Beastbreaker","Atarka Efreet","Atarka Monument","Atarka Pummeler","Atarka\'s Command","Atarka, World Render","Atemsis, All-Seeing","Athreos, God of Passage","Athreos, Shroud-Veiled","Atinlay Igpay","Atla Palani, Nest Tender","Atog","Atogatog","Atraxa, Praetors\' Voice","Atris, Oracle of Half-Truths","Attendant of Vraska","Attended Healer","Attended Knight","Attrition","Attune with Aether","Attunement","Atzocan Archer","Atzocan Seer","Audacious Infiltrator","Audacious Thief","Auger Spree","Augmenting Automaton","Augur il-Vec","Augur of Bolas","Augur of Skulls","Augury Adept","Augury Owl","Auntie\'s Hovel","Auntie\'s Snitch","Aura Barbs","Aura Blast","Aura Extraction","Aura Finesse","Aura Flux","Aura Fracture","Aura Gnarlid","Aura Graft","Aura Mutation","Aura Shards","Aura Thief","Aura of Dominion","Aura of Silence","Auramancer","Auramancer\'s Guise","Auratog","Auratouched Mage","Aurelia\'s Fury","Aurelia, Exemplar of Justice","Aurelia, the Warleader","Aurification","Auriok Bladewarden","Auriok Champion","Auriok Edgewright","Auriok Glaivemaster","Auriok Replica","Auriok Salvagers","Auriok Siege Sled","Auriok Steelshaper","Auriok Sunchaser","Auriok Survivors","Auriok Transfixer","Auriok Windwalker","Aurochs","Aurochs Herd","Aurora Champion","Aurora Eidolon","Aurora Griffin","Auspicious Ancestor","Auspicious Starrix","Austere Command","Authority of the Consuls","Auto-Key","Autochthon Wurm","Autumn Willow","Autumn\'s Veil","Autumnal Gloom // Ancient of the Equinox","Avacyn\'s Collar","Avacyn\'s Judgment","Avacyn\'s Pilgrim","Avacyn, Angel of Hope","Avacyn, Guardian Angel","Avacynian Missionaries // Lunarch Inquisitors","Avacynian Priest","Avalanche","Avalanche Riders","Avalanche Tusker","Avarax","Avarice Amulet","Avarice Totem","Avaricious Dragon","Avatar of Discord","Avatar of Fury","Avatar of Growth","Avatar of Hope","Avatar of Me","Avatar of Might","Avatar of Slaughter","Avatar of Will","Avatar of Woe","Avatar of the Resolute","Aven Archer","Aven Augur","Aven Battle Priest","Aven Brigadier","Aven Cloudchaser","Aven Envoy","Aven Eternal","Aven Farseer","Aven Fateshaper","Aven Fisher","Aven Fleetwing","Aven Flock","Aven Fogbringer","Aven Gagglemaster","Aven Initiate","Aven Liberator","Aven Mimeomancer","Aven Mindcensor","Aven Redeemer","Aven Reedstalker","Aven Riftwatcher","Aven Sentry","Aven Shrine","Aven Skirmisher","Aven Smokeweaver","Aven Soulgazer","Aven Squire","Aven Sunstriker","Aven Surveyor","Aven Tactician","Aven Trailblazer","Aven Trooper","Aven Warcraft","Aven Warhawk","Aven Wind Guide","Aven Wind Mage","Aven Windreader","Aven of Enduring Hope","Avenger en-Dal","Avenger of Zendikar","Avenging Angel","Avenging Arrow","Avenging Druid","Avenging Huntbonder","Avian Changeling","Avian Oddity","Aviary Mechanic","Aviation Pioneer","Avid Reclaimer","Avizoa","Avoid Fate","Awaken the Ancient","Awaken the Bear","Awaken the Erstwhile","Awaken the Sky Tyrant","Awakened Amalgam","Awakener Druid","Awakening","Awakening Zone","Awakening of Vitu-Ghazi","Awe Strike","Awe for the Guilds","Awesome Presence","Axe of the Warmonger","Axebane Beast","Axebane Guardian","Axebane Stag","Axegrinder Giant","Axelrod Gunnarson","Axis of Mortality","Ayara, First of Locthwain","Ayesha Tanaka","Ayli, Eternal Pilgrim","Aysen Abbey","Aysen Bureaucrats","Aysen Crusader","Aysen Highway","Ayula\'s Influence","Ayula, Queen Among Bears","Ayumi, the Last Visitor","Azami, Lady of Scrolls","Azimaet Drake","Azor\'s Elocutors","Azor\'s Gateway // Sanctum of the Sun","Azor, the Lawbringer","Azorius Aethermage","Azorius Arrester","Azorius Chancery","Azorius Charm","Azorius Cluestone","Azorius First-Wing","Azorius Guildgate","Azorius Guildmage","Azorius Herald","Azorius Justiciar","Azorius Keyrune","Azorius Knight-Arbiter","Azorius Locket","Azorius Ploy","Azorius Signet","Azorius Skyguard","Azra Bladeseeker","Azra Oddsmaker","Azra Smokeshaper","Azure Drake","Azure Mage","Azusa, Lost but Seeking","B-I-N-G-O","B.F.M. (Big Furry Monster)","B.O.B. (Bevy of Beebles)","Back for More","Back from the Brink","Back to Basics","Back to Nature","Backdraft","Backdraft Hellkite","Backfire","Backlash","Backslide","Backup Plan","Backwoods Survivalists","Bad Ass","Bad Deal","Bad Moon","Bad River","Badlands","Baffling End","Bag of Holding","Baird, Steward of Argive","Bake into a Pie","Baki\'s Curse","Baku Altar","Bala Ged Recovery // Bala Ged Sanctuary","Bala Ged Scorpion","Bala Ged Thief","Balan, Wandering Knight","Balance","Balance of Power","Balancing Act","Balduvian Barbarians","Balduvian Bears","Balduvian Conjurer","Balduvian Dead","Balduvian Fallen","Balduvian Frostwaker","Balduvian Horde","Balduvian Hydra","Balduvian Rage","Balduvian Shaman","Balduvian Trading Post","Balduvian War-Makers","Balduvian Warlord","Balefire Dragon","Balefire Liege","Baleful Ammit","Baleful Eidolon","Baleful Force","Baleful Stare","Baleful Strix","Ball Lightning","Ballista Charger","Ballista Squad","Balloon Peddler","Ballot Broker","Ballynock Cohort","Ballynock Trapper","Ballyrush Banneret","Balm of Restoration","Baloth Cage Trap","Baloth Gorger","Baloth Null","Baloth Packhunter","Baloth Pup","Baloth Woodcrasher","Balshan Beguiler","Balshan Collaborator","Balshan Griffin","Balthor the Defiled","Balthor the Stout","Balustrade Spy","Bamboozle","Band Together","Bandage","Banding Sliver","Bane Alley Blackguard","Bane Alley Broker","Bane of Bala Ged","Bane of Progress","Bane of the Living","Banefire","Baneful Omen","Banehound","Baneslayer Angel","Baneslayer Aspirant","Banewasp Affliction","Banewhip Punisher","Banish into Fable","Banisher Priest","Banishing Knack","Banishing Light","Banishing Stroke","Banishment Decree","Bankrupt in Blood","Banners Raised","Banshee","Banshee of the Dread Choir","Banshee\'s Blade","Bant","Bant Battlemage","Bant Charm","Bant Panorama","Bant Sojourners","Bant Sureblade","Bar the Door","Baral\'s Expertise","Baral, Chief of Compliance","Barbarian Bully","Barbarian General","Barbarian Guides","Barbarian Horde","Barbarian Lunatic","Barbarian Outcast","Barbarian Riftcutter","Barbarian Ring","Barbary Apes","Barbed Battlegear","Barbed Field","Barbed Foliage","Barbed Lightning","Barbed Sextant","Barbed Shocker","Barbed Sliver","Barbed Wire","Barbed-Back Wurm","Barbtooth Wurm","Bargain","Bargaining Table","Barge In","Barging Sergeant","Barishi","Barkhide Mauler","Barkhide Troll","Barkshell Blessing","Barktooth Warbeard","Barl\'s Cage","Baron Sengir","Baron Von Count","Barony Vampire","Barrage Ogre","Barrage Tyrant","Barrage of Boulders","Barrage of Expendables","Barrel Down Sokenzan","Barreling Attack","Barren Glory","Barren Moor","Barrenton Cragtreads","Barrenton Medic","Barricade Breaker","Barrier Breach","Barrier of Bones","Barrin","Barrin\'s Codex","Barrin\'s Spite","Barrin\'s Unmaking","Barrin, Master Wizard","Barrin, Tolarian Archmage","Barrow Ghoul","Barrow Witches","Barry\'s Land","Bartel Runeaxe","Barter in Blood","Bartered Cow","Bartizan Bats","Baru, Fist of Krosa","Basal Sliver","Basal Thrull","Basalt Gargoyle","Basalt Golem","Basalt Monolith","Basandra, Battle Seraph","Base Camp","Bash to Bits","Basilica Bell-Haunt","Basilica Guards","Basilica Screecher","Basilisk Collar","Basking Rootwalla","Basri Ket","Basri\'s Acolyte","Basri\'s Aegis","Basri\'s Lieutenant","Basri\'s Solidarity","Basri, Devoted Paladin","Bassara Tower Archer","Bastion Enforcer","Bastion Inventor","Bastion Mastodon","Bastion Protector","Bastion of Remembrance","Bat-","Bathe in Dragonfire","Bathe in Light","Baton of Courage","Baton of Morale","Battalion Foot Soldier","Battered Golem","Batterhorn","Battering Craghorn","Battering Krasis","Battering Ram","Battering Sliver","Battering Wurm","Batterskull","Battle Brawler","Battle Cry","Battle Frenzy","Battle Hurda","Battle Hymn","Battle Mastery","Battle Rampart","Battle Screech","Battle Sliver","Battle Squadron","Battle Strain","Battle at the Bridge","Battle of Wits","Battle-Mad Ronin","Battle-Rattle Shaman","Battlefield Forge","Battlefield Medic","Battlefield Percher","Battlefield Promotion","Battlefield Scavenger","Battlefield Scrounger","Battlefield Thaumaturge","Battleflight Eagle","Battlefront Krushok","Battlegate Mimic","Battlegrace Angel","Battleground Geist","Battlegrowth","Battletide Alchemist","Battlewand Oak","Battlewise Aven","Battlewise Hoplite","Battlewise Valor","Batwing Brume","Bay Falcon","Bayou","Bayou Dragonfly","Bazaar Krovod","Bazaar Trademage","Bazaar Trader","Bazaar of Baghdad","Bazaar of Wonders","Beacon Behemoth","Beacon Bolt","Beacon Hawk","Beacon of Creation","Beacon of Destiny","Beacon of Destruction","Beacon of Immortality","Beacon of Tomorrows","Beacon of Unrest","Beamsplitter Mage","Beanstalk Giant // Fertile Footsteps","Bear Cub","Bear Umbra","Bear with Set\'s Mechanic","Bear\'s Companion","Bearer of Silence","Bearer of the Heavens","Bearscape","Beast Attack","Beast Hunt","Beast Walkers","Beast Whisperer","Beast Within","Beast in Show","Beast of Burden","Beastbreaker of Bala Ged","Beastcaller Savant","Beastmaster Ascension","Beastmaster\'s Magemark","Beasts of Bogardan","Because I Have Willed It","Beck // Call","Beckon Apparition","Become Immense","Bedeck // Bedazzle","Bedevil","Bedlam","Bedlam Reveler","Bee Sting","Bee-Bee Gun","Beetleback Chief","Beetleform Mage","Befoul","Befuddle","Beguiler of Wills","Behemoth Sledge","Behemoth\'s Herald","Behind the Scenes","Behold My Grandeur","Behold the Beyond","Behold the Power of Destruction","Belbe\'s Armor","Belbe\'s Percher","Belbe\'s Portal","Belfry Spirit","Belle of the Brawl","Belligerent Brontodon","Belligerent Hatchling","Belligerent Sliver","Belligerent Whiptail","Bellowing Aegisaur","Bellowing Elk","Bellowing Fiend","Bellowing Saddlebrute","Bellowing Tanglewurm","Bellows Lizard","Belltoll Dragon","Belltower Sphinx","Beloved Chaplain","Beloved Princess","Ben-Ben, Akki Hermit","Benalish Cavalry","Benalish Commander","Benalish Emissary","Benalish Heralds","Benalish Hero","Benalish Honor Guard","Benalish Infantry","Benalish Knight","Benalish Lancer","Benalish Marshal","Benalish Missionary","Benalish Trapper","Benalish Veteran","Bend or Break","Beneath the Sands","Benediction of Moons","Benefaction of Rhonas","Benefactor\'s Draught","Benevolent Ancestor","Benevolent Bodyguard","Benevolent Offering","Benevolent Unicorn","Benthic Behemoth","Benthic Biomancer","Benthic Djinn","Benthic Explorers","Benthic Giant","Benthic Infiltrator","Benthicore","Bequeathal","Bereavement","Berserk","Berserk Murlodont","Berserkers of Blood Ridge","Berserkers\' Onslaught","Beseech the Queen","Besmirch","Bestial Fury","Bestial Menace","Betrayal","Betrayal of Flesh","Betrothed of Fire","Better Than One","Bewilder","Beyeen Veil // Beyeen Coast","Bident of Thassa","Bifurcate","Big Boa Constrictor","Big Game Hunter","Bile Blight","Bile Urchin","Bind","Bind // Liberate","Binding Agony","Binding Grasp","Binding Mummy","Bioessence Hydra","Biogenic Ooze","Biogenic Upgrade","Biomancer\'s Familiar","Biomantic Mastery","Biomass Mutation","Bioplasm","Biorhythm","Bioshift","Biovisionary","Birchlore Rangers","Bird Maiden","Birds of Paradise","Birds of Paradise Avatar","Birthing Boughs","Birthing Hulk","Birthing Pod","Bishop of Binding","Bishop of Rebirth","Bishop of Wings","Bishop of the Bloodstained","Bishop\'s Soldier","Bite of the Black Rose","Biting Rain","Biting Remark","Biting Tether","Bitter Feud","Bitter Ordeal","Bitter Revelation","Bitterblade Warrior","Bitterblossom","Bitterbow Sharpshooters","Bitterheart Witch","Bituminous Blast","Black Carriage","Black Cat","Black Knight","Black Lotus","Black Mana Battery","Black Market","Black Oak of Odunos","Black Poplar Shaman","Black Scarab","Black Sun\'s Zenith","Black Vise","Black Ward","Blackblade Reforged","Blackbloom Rogue // Blackbloom Bog","Blackcleave Cliffs","Blackcleave Goblin","Blacker Lotus","Blacklance Paragon","Blackmail","Blade Banish","Blade Instructor","Blade Juggler","Blade Sliver","Blade Splicer","Blade of Selves","Blade of the Bloodchief","Blade of the Sixth Pride","Blade-Tribe Berserkers","Bladeback Sliver","Bladebrand","Bladed Bracers","Bladed Pinions","Bladed Sentinel","Blademane Baku","Blades of Velis Vel","Bladetusk Boar","Bladewing the Risen","Bladewing\'s Thrall","Blanchwood Armor","Blanchwood Treefolk","Blanket of Night","Blaring Captain","Blaring Recruiter","Blasphemous Act","Blast Zone","Blast from the Past","Blast of Genius","Blasted Landscape","Blaster Mage","Blastfire Bolt","Blasting Station","Blastoderm","Blatant Thievery","Blaze","Blaze Commando","Blaze of Glory","Blazethorn Scarecrow","Blazing Archon","Blazing Blade Askari","Blazing Effigy","Blazing Hellhound","Blazing Hope","Blazing Salvo","Blazing Shoal","Blazing Specter","Blazing Torch","Blazing Volley","Bleak Coven Vampires","Bleeding Edge","Blessed Alliance","Blessed Breath","Blessed Light","Blessed Orator","Blessed Reincarnation","Blessed Reversal","Blessed Sanctuary","Blessed Spirits","Blessed Wind","Blessed Wine","Blessing","Blessing of Belzenlok","Blessing of Leeches","Blessing of the Nephilim","Blessings of Nature","Blight","Blight Herder","Blight Keeper","Blight Mamba","Blight Sickle","Blight-Breath Catoblepas","Blightbeetle","Blightcaster","Blighted Agent","Blighted Bat","Blighted Cataract","Blighted Fen","Blighted Gorge","Blighted Shaman","Blighted Steppe","Blighted Woodland","Blightning","Blightsoil Druid","Blightspeaker","Blightsteel Colossus","Blightwidow","Blind Creeper","Blind Fury","Blind Hunter","Blind Obedience","Blind Phantasm","Blind Seer","Blind Zealot","Blind with Anger","Blind-Spot Giant","Blindblast","Blinding Angel","Blinding Beam","Blinding Drone","Blinding Flare","Blinding Fog","Blinding Light","Blinding Mage","Blinding Powder","Blinding Radiance","Blinding Souleater","Blinding Spray","Blink of an Eye","Blinking Spirit","Blinkmoth Infusion","Blinkmoth Nexus","Blinkmoth Urn","Blinkmoth Well","Blister Beetle","Blistercoil Weird","Blistergrub","Blistering Barrier","Blistering Dieflyn","Blistering Firecat","Blisterpod","Blisterspit Gremlin","Blisterstick Shaman","Blitz Hellion","Blitz Leech","Blitz of the Thunder-Raptor","Blizzard","Blizzard Elemental","Blizzard Specter","Blizzard Strix","Bloated Toad","Blockade Runner","Blockbuster","Blood Artist","Blood Aspirant","Blood Bairn","Blood Baron of Vizkopa","Blood Beckoning","Blood Burglar","Blood Celebrant","Blood Clock","Blood Crypt","Blood Cultist","Blood Curdle","Blood Divination","Blood Feud","Blood Frenzy","Blood Funnel","Blood Glutton","Blood Host","Blood Hound","Blood Knight","Blood Lust","Blood Mist","Blood Moon","Blood Oath","Blood Ogre","Blood Operative","Blood Pet","Blood Poet","Blood Price","Blood Reckoning","Blood Rites","Blood Scrivener","Blood Seeker","Blood Speaker","Blood Sun","Blood Tithe","Blood Tribute","Blood Tyrant","Blood Vassal","Blood for Bones","Blood of the Martyr","Blood-Chin Fanatic","Blood-Chin Rager","Blood-Cursed Knight","Blood-Toll Harpy","Bloodbond March","Bloodbond Vampire","Bloodborn Scoundrels","Bloodbraid Elf","Bloodbriar","Bloodchief Ascension","Bloodchief\'s Thirst","Bloodcrazed Goblin","Bloodcrazed Hoplite","Bloodcrazed Neonate","Bloodcrazed Paladin","Bloodcurdler","Bloodcurdling Scream","Bloodfell Caves","Bloodfire Colossus","Bloodfire Dwarf","Bloodfire Enforcers","Bloodfire Expert","Bloodfire Infusion","Bloodfire Kavu","Bloodfire Mentor","Bloodflow Connoisseur","Bloodforged Battle-Axe","Bloodfray Giant","Bloodghast","Bloodgift Demon","Bloodhall Ooze","Bloodhall Priest","Bloodhaze Wolverine","Bloodhill Bastion","Bloodhunter Bat","Bloodhusk Ritualist","Bloodied Ghost","Bloodletter","Bloodletter Quill","Bloodline Keeper // Lord of Lineage","Bloodline Necromancer","Bloodline Shaman","Bloodlord of Vaasgoth","Bloodlust Inciter","Bloodmad Vampire","Bloodmark Mentor","Bloodmist Infiltrator","Bloodpyre Elemental","Bloodrage Brawler","Bloodrage Vampire","Bloodrite Invoker","Bloodrock Cyclops","Bloodscale Prowler","Bloodscent","Bloodshed Fever","Bloodshot Cyclops","Bloodshot Trainee","Bloodsoaked Altar","Bloodsoaked Champion","Bloodspore Thrinax","Bloodstained Mire","Bloodstoke Howler","Bloodstone Cameo","Bloodstone Goblin","Bloodsworn Steward","Bloodtallow Candle","Bloodthirsty Aerialist","Bloodthirsty Blade","Bloodthirsty Ogre","Bloodthorn Taunter","Bloodthrone Vampire","Bloodtracker","Bloodwater Entity","Bloom Hulk","Bloom Tender","Blooming Marsh","Blossom Dryad","Blossoming Defense","Blossoming Sands","Blossoming Wreath","Blow Your House Down","Blowfly Infestation","Bludgeon Brawl","Blue Elemental Blast","Blue Mana Battery","Blue Scarab","Blue Sun\'s Zenith","Blue Ward","Blunt the Assault","Blur Sliver","Blur of Blades","Blurred Mongoose","Blurry Beeble","Blustersquall","Boa Constrictor","Boar Umbra","Board the Weatherlight","Boartusk Liege","Body Double","Body Snatcher","Body of Jukai","Bog Down","Bog Elemental","Bog Glider","Bog Gnarr","Bog Hoodlums","Bog Humbugs","Bog Imp","Bog Initiate","Bog Naughty","Bog Raiders","Bog Rats","Bog Serpent","Bog Smugglers","Bog Tatters","Bog Witch","Bog Wraith","Bog Wreckage","Bog-Strider Ash","Bogardan Dragonheart","Bogardan Firefiend","Bogardan Hellkite","Bogardan Lancer","Bogardan Phoenix","Bogardan Rager","Bogbrew Witch","Boggart Arsonists","Boggart Birth Rite","Boggart Brute","Boggart Forager","Boggart Harbinger","Boggart Loggers","Boggart Mob","Boggart Ram-Gang","Boggart Shenanigans","Boggart Sprite-Chaser","Bogstomper","Boil","Boiling Blood","Boiling Earth","Boiling Seas","Bojuka Bog","Bojuka Brigand","Bola Warrior","Bolas\'s Citadel","Bold Defense","Bold Impaler","Boldwyr Heavyweights","Boldwyr Intimidator","Bolrac-Clan Crusher","Bolt Bend","Bolt Hound","Bolt of Keranos","Boltwing Marauder","Bomat Bazaar Barge","Bomat Courier","Bomb Squad","Bombard","Bombardment","Bomber Corps","Bond Beetle","Bond of Agony","Bond of Discipline","Bond of Flourishing","Bond of Insight","Bond of Passion","Bond of Revival","Bonded Construct","Bonded Fetch","Bonded Horncrest","Bonder\'s Ornament","Bonders\' Enclave","Bonds of Faith","Bonds of Mortality","Bonds of Quicksilver","Bone Dancer","Bone Dragon","Bone Flute","Bone Harvest","Bone Mask","Bone Miser","Bone Picker","Bone Pit Brute","Bone Rattler","Bone Saw","Bone Shaman","Bone Shredder","Bone Splinters","Bone to Ash","Bonebreaker Giant","Boneclad Necromancer","Bonecrusher Giant // Stomp","Bonehoard","Boneknitter","Bonescythe Sliver","Boneshard Slasher","Bonesplitter","Bonesplitter Sliver","Bonethorn Valesk","Boneyard Lurker","Boneyard Mycodrax","Boneyard Parley","Boneyard Scourge","Boneyard Wurm","Bonfire of the Damned","Bontu the Glorified","Bontu\'s Last Reckoning","Bontu\'s Monument","Bonus Round","Booby Trap","Book Burning","Book Devourer","Book of Rass","Boom // Bust","Boomerang","Boomflinger","Boompile","Boomstacker","Boon Reflection","Boon Satyr","Boon of Emrakul","Boon of Erebos","Boon of the Wish-Giver","Boonweaver Giant","Booster Tutor","Boot Nipper","Borborygmos","Borborygmos Enraged","Border Guard","Border Guardian","Border Patrol","Borderland Behemoth","Borderland Explorer","Borderland Marauder","Borderland Minotaur","Borderland Ranger","Boreal Centaur","Boreal Druid","Boreal Elemental","Boreal Griffin","Boreal Shelf","Boreas Charger","Boris Devilboon","Boros Battleshaper","Boros Challenger","Boros Charm","Boros Cluestone","Boros Elite","Boros Fury-Shield","Boros Garrison","Boros Guildgate","Boros Guildmage","Boros Keyrune","Boros Locket","Boros Mastiff","Boros Reckoner","Boros Recruit","Boros Signet","Boros Swiftblade","Borrowed Grace","Borrowed Hostility","Borrowed Malevolence","Borrowing 100,000 Arrows","Borrowing the East Wind","Boseiju, Who Shelters All","Bosh, Iron Golem","Bosh, Iron Golem Avatar","Bosk Banneret","Bosom Buddy","Botanical Sanctum","Bottle Gnomes","Bottle of Suleiman","Bottled Cloister","Bottomless Pit","Bottomless Vault","Boulder Salvo","Boulderfall","Bouncing Beebles","Bound // Determined","Bound by Moonsilver","Bound in Silence","Bounding Krasis","Boundless Realms","Bounteous Kirin","Bountiful Harvest","Bountiful Promenade","Bounty Agent","Bounty Hunter","Bounty of Might","Bounty of the Hunt","Bounty of the Luxa","Bow of Nylea","Bow of the Hunter","Bow to My Command","Bower Passage","Box of Free-Range Goblins","Brace for Impact","Brackwater Elemental","Brago\'s Favor","Brago\'s Representative","Brago, King Eternal","Braid of Fire","Braids, Cabal Minion","Braids, Conjurer Adept","Braids, Conjurer Adept Avatar","Braidwood Cup","Braidwood Sextant","Brain Freeze","Brain Gorgers","Brain Maggot","Brain Pry","Brain Weevil","Brain in a Jar","Brainbite","Braingeyser","Brainspoil","Brainstorm","Brainwash","Brallin, Skyshark Rider","Bramble Creeper","Bramble Elemental","Bramble Sovereign","Bramblecrush","Bramblefort Fink","Bramblesnap","Brambleweft Behemoth","Bramblewood Paragon","Branching Bolt","Branching Evolution","Branchloft Pathway // Boulderloft Pathway","Branchsnap Lorian","Brand","Brand of Ill Omen","Branded Brawlers","Brash Taunter","Brass Gnat","Brass Herald","Brass Man","Brass Secretary","Brass Squire","Brass\'s Bounty","Brass-Talon Chimera","Brassclaw Orcs","Bravado","Brave the Elements","Brave the Sands","Brawl","Brawl-Bash Ogre","Brawler\'s Plate","Brawn","Brazen Borrower // Petty Theft","Brazen Buccaneers","Brazen Freebooter","Brazen Scourge","Brazen Wolves","Breach","Breaching Hippocamp","Breaching Leviathan","Break Asunder","Break Open","Break Through the Line","Break of Day","Breaker of Armies","Breaking // Entering","Breaking Point","Breaking Wave","Breakneck Rider // Neck Breaker","Breakthrough","Breath of Darigaaz","Breath of Dreams","Breath of Fire","Breath of Fury","Breath of Life","Breath of Malfegor","Breathstealer","Breathstealer\'s Crypt","Bred for the Hunt","Breeding Pit","Breeding Pool","Breezekeeper","Breya, Etherium Shaper","Briar Patch","Briar Shield","Briarberry Cohort","Briarbridge Patrol","Briarhorn","Briarknit Kami","Briarpack Alpha","Briber\'s Purse","Bribery","Bridge from Below","Bright Reprisal","Brightclimb Pathway // Grimclimb Pathway","Brightflame","Brighthearth Banneret","Brightling","Brightmare","Brightstone Ritual","Brightwood Tracker","Brigid, Hero of Kinsbaile","Brilliant Halo","Brilliant Plan","Brilliant Spectrum","Brilliant Ultimatum","Brimaz, King of Oreskos","Brimstone Dragon","Brimstone Mage","Brimstone Trebuchet","Brimstone Volley","Brindle Boar","Brindle Shoat","Brine Elemental","Brine Giant","Brine Hag","Brine Seer","Brine Shaman","Brineborn Cutthroat","Bring Down","Bring Low","Bring to Light","Bring to Trial","Bringer of the Black Dawn","Bringer of the Blue Dawn","Bringer of the Green Dawn","Bringer of the Red Dawn","Bringer of the White Dawn","Brink of Disaster","Brink of Madness","Brion Stoutarm","Brisela, Voice of Nightmares","Bristling Boar","Bristling Hydra","Brittle Effigy","Broken Ambitions","Broken Bond","Broken Concentration","Broken Dam","Broken Fall","Broken Visage","Broken Wings","Brokkos, Apex of Forever","Brontotherium","Bronze Bombshell","Bronze Calendar","Bronze Horse","Bronze Sable","Bronze Sword","Bronze Tablet","Bronzebeak Moa","Bronzehide Lion","Brood Birthing","Brood Butcher","Brood Keeper","Brood Monitor","Brood Sliver","Brood of Cockroaches","Broodbirth Viper","Broodhatch Nantuko","Broodhunter Wurm","Brooding Saurian","Broodmate Dragon","Broodstar","Broodwarden","Brothers Yamazaki","Brothers of Fire","Brought Back","Browbeat","Brown Ouphe","Browse","Brudiclad, Telchor Engineer","Bruna, Light of Alabaster","Bruna, the Fading Light","Bruse Tarl, Boorish Herder","Brush with Death","Brushfire Elemental","Brushland","Brushstrider","Brushstroke Paintermage","Brushwagg","Brutal Deceiver","Brutal Expulsion","Brutal Hordechief","Brutal Nightstalker","Brutal Suppression","Brutalizer Exarch","Brute Force","Brute Strength","Bruvac the Grandiloquent","Bubble Matrix","Bubble Snare","Bubbling Beebles","Bubbling Cauldron","Bubbling Muck","Buccaneer\'s Bravado","Bucket List","Budoka Gardener // Dokai, Weaver of Life","Budoka Pupil // Ichiga, Who Topples Oaks","Builder\'s Bane","Builder\'s Blessing","Built to Last","Built to Smash","Bull Aurochs","Bull Cerodon","Bull Elephant","Bull Hippo","Bull Rush","Bull-Rush Bruiser","Bullwhip","Bulwark","Bulwark Giant","Bumbling Pangolin","Bump in the Night","Buoyancy","Burden of Greed","Burden of Guilt","Bureaucracy","Burgeoning","Burglar Rat","Buried Alive","Buried Ogre","Buried Ruin","Burlfist Oak","Burn Away","Burn Bright","Burn Trail","Burn at the Stake","Burn from Within","Burn the Impure","Burning Anger","Burning Cinder Fury of Crimson Chaos Fire","Burning Cloak","Burning Earth","Burning Fields","Burning Inquiry","Burning Oil","Burning Palm Efreet","Burning Prophet","Burning Sands","Burning Shield Askari","Burning Sun\'s Avatar","Burning Vengeance","Burning Wish","Burning of Xinye","Burning-Eye Zubera","Burning-Fist Minotaur","Burning-Tree Bloodscale","Burning-Tree Emissary","Burning-Tree Shaman","Burning-Tree Vandal","Burning-Yard Trainer","Burnished Hart","Burnout","Burnt Offering","Burr Grafter","Burrenton Bombardier","Burrenton Forge-Tender","Burrenton Shield-Bearers","Burrowing","Burst Lightning","Burst of Energy","Burst of Speed","Burst of Strength","Bursting Beebles","Bushi Tenderfoot // Kenzo the Hardhearted","Bushmeat Poacher","Butcher Ghoul","Butcher Orgg","Butcher of Malakir","Butcher of the Horde","Butcher\'s Cleaver","Butcher\'s Glee","Buzz Buggy","Buzzing Whack-a-Doodle","By Force","By Gnome Means","Bygone Bishop","Byway Courier","Bösium Strip","Cabal Archon","Cabal Coffers","Cabal Conditioning","Cabal Evangel","Cabal Executioner","Cabal Inquisitor","Cabal Interrogator","Cabal Paladin","Cabal Patriarch","Cabal Pit","Cabal Ritual","Cabal Shrine","Cabal Slaver","Cabal Stronghold","Cabal Surgeon","Cabal Therapist","Cabal Therapy","Cabal Torturer","Cabal Trainee","Cache Raiders","Cached Defenses","Cackling Counterpart","Cackling Fiend","Cackling Flames","Cackling Imp","Cackling Witch","Cacophodon","Cadaver Imp","Cadaverous Bloom","Cadaverous Knight","Cage of Hands","Caged Sun","Caged Zombie","Cagemail","Cairn Wanderer","Calciderm","Calciform Pools","Calcite Snapper","Calculated Dismissal","Calculating Lich","Caldera Hellion","Caldera Kavu","Caldera Lake","Caligo Skin-Witch","Calix, Destiny\'s Hand","Call for Blood","Call for Unity","Call from the Grave","Call of the Conclave","Call of the Death-Dweller","Call of the Full Moon","Call of the Herd","Call of the Nightwing","Call of the Wild","Call the Bloodline","Call the Cavalry","Call the Coppercoats","Call the Gatewatch","Call the Scions","Call the Skybreaker","Call to Arms","Call to Glory","Call to Heel","Call to Mind","Call to Serve","Call to the Feast","Call to the Grave","Call to the Kindred","Call to the Netherworld","Callaphe, Beloved of the Sea","Caller of Gales","Caller of the Claw","Caller of the Hunt","Caller of the Pack","Caller of the Untamed","Callous Deceiver","Callous Dismissal","Callous Giant","Callous Oppressor","Callow Jushi // Jaraku the Interloper","Calming Licid","Calming Verse","Caltrops","Camaraderie","Camato Scout","Camel","Camouflage","Campaign of Vengeance","Canal Courier","Canal Dredger","Canal Monitor","Cancel","Candelabra of Tawnos","Candlelight Vigil","Candles of Leng","Candles\' Glow","Canker Abomination","Cankerous Thirst","Cannibalize","Canopy Baloth","Canopy Claws","Canopy Cover","Canopy Crawler","Canopy Dragon","Canopy Gorger","Canopy Spider","Canopy Stalker","Canopy Surge","Canopy Vista","Cantivore","Canyon Drake","Canyon Jerboa","Canyon Lurkers","Canyon Minotaur","Canyon Slough","Canyon Wildcat","Cao Cao, Lord of Wei","Cao Ren, Wei Commander","Capashen Knight","Capashen Standard","Capashen Templar","Capashen Unicorn","Capital Punishment","Capricious Efreet","Capricious Sorcerer","Capricopian","Capsize","Captain Lannery Storm","Captain Sisay","Captain of the Mists","Captain of the Watch","Captain\'s Call","Captain\'s Claws","Captain\'s Hook","Captain\'s Maneuver","Captivating Crew","Captivating Glance","Captivating Gyre","Captivating Unicorn","Captivating Vampire","Captive Audience","Captive Flame","Capture Sphere","Capture of Jingzhou","Captured Sunlight","Captured by the Consulate","Carapace","Carapace Forger","Caravan Escort","Caravan Hurda","Caravan Vigil","Carbonize","Cardboard Carapace","Cardpecker","Careful Consideration","Careful Study","Caregiver","Careless Celebrant","Caress of Phyrexia","Caribou Range","Carnage Altar","Carnage Gladiator","Carnage Tyrant","Carnage Wurm","Carnassid","Carnifex Demon","Carnival // Carnage","Carnival Hellsteed","Carnival of Souls","Carnivorous Death-Parrot","Carnivorous Moss-Beast","Carnivorous Plant","Carnophage","Carom","Carpet of Flowers","Carrier Pigeons","Carrier Thrall","Carrion","Carrion Ants","Carrion Beetles","Carrion Call","Carrion Crow","Carrion Feeder","Carrion Grub","Carrion Howler","Carrion Imp","Carrion Rats","Carrion Screecher","Carrion Thrash","Carrion Wall","Carrion Wurm","Carrionette","Carry Away","Cartel Aristocrat","Cartographer","Cartographer\'s Hawk","Cartouche of Ambition","Cartouche of Knowledge","Cartouche of Solidarity","Cartouche of Strength","Cartouche of Zeal","Carven Caryatid","Cascade Bluffs","Cascade Seer","Cascading Cataracts","Cast Down","Cast Out","Cast Through Time","Cast into Darkness","Castaway\'s Despair","Castigate","Casting of Bones","Castle","Castle Ardenvale","Castle Embereth","Castle Garenbrig","Castle Locthwain","Castle Raptors","Castle Sengir","Castle Vantress","Casualties of War","Cat Burglar","Cat Warriors","Cataclysm","Cataclysmic Gearhulk","Catacomb Crocodile","Catacomb Dragon","Catacomb Sifter","Catacomb Slug","Catalog","Catalyst Elemental","Catalyst Stone","Catapult Master","Catapult Squad","Catastrophe","Catch // Release","Cateran Brute","Cateran Enforcer","Cateran Kidnappers","Cateran Overlord","Cateran Persuader","Cateran Slaver","Cateran Summons","Caterwauling Boggart","Cathar\'s Companion","Cathar\'s Shield","Cathars\' Crusade","Cathartic Adept","Cathartic Reunion","Cathedral Membrane","Cathedral Sanctifier","Cathedral of Serra","Cathedral of War","Cathodion","Caught in the Brights","Cauldron Dance","Cauldron Familiar","Cauldron Haze","Cauldron of Souls","Cauldron\'s Gift","Caustic Caterpillar","Caustic Crawler","Caustic Hound","Caustic Rain","Caustic Tar","Caustic Wasps","Cautery Sliver","Cavalcade of Calamity","Cavalier of Dawn","Cavalier of Flame","Cavalier of Gales","Cavalier of Night","Cavalier of Thorns","Cavalry Drillmaster","Cavalry Master","Cavalry Pegasus","Cave People","Cave Sense","Cave Tiger","Cave of Temptation","Cave-In","Cavern Crawler","Cavern Harpy","Cavern Lampad","Cavern Thoctar","Cavern Whisperer","Cavern of Souls","Caverns of Despair","Caves of Koilos","Cazur, Ruthless Stalker","Cease-Fire","Ceaseless Searblades","Celestial Ancient","Celestial Archon","Celestial Colonnade","Celestial Convergence","Celestial Crusader","Celestial Dawn","Celestial Enforcer","Celestial Flare","Celestial Force","Celestial Gatekeeper","Celestial Kirin","Celestial Mantle","Celestial Messenger","Celestial Prism","Celestial Purge","Celestial Sword","Celestine Cave Witch","Celestine Reef","Cellar Door","Cemetery Gate","Cemetery Puca","Cemetery Reaper","Cemetery Recruitment","Cenn\'s Enlistment","Cenn\'s Heir","Cenn\'s Tactician","Censor","Censorship","Centaur Archer","Centaur Battlemaster","Centaur Chieftain","Centaur Courser","Centaur Garden","Centaur Glade","Centaur Healer","Centaur Nurturer","Centaur Omenreader","Centaur Peacemaker","Centaur Rootcaster","Centaur Safeguard","Centaur Veteran","Centaur Vinecrasher","Centaur\'s Herald","Center Soul","Cephalid Aristocrat","Cephalid Broker","Cephalid Coliseum","Cephalid Constable","Cephalid Illusionist","Cephalid Inkshrouder","Cephalid Looter","Cephalid Pathmage","Cephalid Retainer","Cephalid Sage","Cephalid Scout","Cephalid Shrine","Cephalid Snitch","Cephalid Vandal","Cerebral Eruption","Cerebral Vortex","Ceremonial Guard","Ceremonious Rejection","Cerodon Yearling","Certain Death","Cerulean Drake","Cerulean Sphinx","Cerulean Wisps","Cerulean Wyvern","Cessation","Ceta Disciple","Ceta Sanctuary","Cetavolver","Chain Lightning","Chain Reaction","Chain Stasis","Chain of Acid","Chain of Plasma","Chain of Silence","Chain of Smog","Chain of Vapor","Chain to Memory","Chainbreaker","Chained Brute","Chained Throatseeker","Chained to the Rocks","Chainer\'s Edict","Chainer\'s Torment","Chainer, Dementia Master","Chainer, Nightmare Adept","Chainflinger","Chains of Mephistopheles","Chainweb Aracnir","Chainwhip Cyclops","Chakram Retriever","Chakram Slinger","Chalice of Life // Chalice of Death","Chalice of the Void","Challenger Troll","Chamber Sentry","Chamber of Manipulation","Chambered Nautilus","Chameleon Blur","Chameleon Colossus","Chameleon Spirit","Champion Lancer","Champion of Arashin","Champion of Dusk","Champion of Lambholt","Champion of Rhonas","Champion of Stray Souls","Champion of Wits","Champion of the Flame","Champion of the Parish","Champion\'s Drake","Champion\'s Helm","Champion\'s Victory","Chance Encounter","Chance for Glory","Chancellor of the Annex","Chancellor of the Dross","Chancellor of the Forge","Chancellor of the Spires","Chancellor of the Tangle","Chandler","Chandra Ablaze","Chandra Nalaar","Chandra\'s Defeat","Chandra\'s Embercat","Chandra\'s Firemaw","Chandra\'s Flame Wave","Chandra\'s Fury","Chandra\'s Ignition","Chandra\'s Incinerator","Chandra\'s Magmutt","Chandra\'s Outburst","Chandra\'s Outrage","Chandra\'s Phoenix","Chandra\'s Pyreling","Chandra\'s Pyrohelix","Chandra\'s Regulator","Chandra\'s Revolution","Chandra\'s Spitfire","Chandra\'s Triumph","Chandra, Acolyte of Flame","Chandra, Awakened Inferno","Chandra, Bold Pyromancer","Chandra, Fire Artisan","Chandra, Fire of Kaladesh // Chandra, Roaring Flame","Chandra, Flame\'s Catalyst","Chandra, Flame\'s Fury","Chandra, Flamecaller","Chandra, Gremlin Wrangler","Chandra, Heart of Fire","Chandra, Novice Pyromancer","Chandra, Pyrogenius","Chandra, Pyromaster","Chandra, Torch of Defiance","Chandra, the Firebrand","Change of Heart","Changeling Berserker","Changeling Hero","Changeling Outcast","Changeling Sentinel","Changeling Titan","Channel","Channel Harm","Channel the Suns","Channeled Force","Channeler Initiate","Chant of Vitu-Ghazi","Chant of the Skifsang","Chaos Charm","Chaos Confetti","Chaos Harlequin","Chaos Imps","Chaos Lord","Chaos Maw","Chaos Moon","Chaos Orb","Chaos Wand","Chaos Warp","Chaoslace","Chaosphere","Chaotic Aether","Chaotic Backlash","Chaotic Goo","Chaotic Strike","Chapel Geist","Chaplain\'s Blessing","Char","Char-Rumbler","Charcoal Diamond","Charge","Charge Across the Araba","Charge of the Forever-Beast","Charging Badger","Charging Bandits","Charging Binox","Charging Cinderhorn","Charging Griffin","Charging Monstrosaur","Charging Paladin","Charging Rhino","Charging Slateback","Charging Troll","Charging Tuskodon","Charging War Boar","Chariot of Victory","Chariot of the Sun","Charisma","Charity Extractor","Charix, the Raging Isle","Charm Peddler","Charm School","Charmbreaker Devils","Charmed Griffin","Charmed Pendant","Charmed Sleep","Charmed Stray","Charming Prince","Charnel Troll","Charnelhoard Wurm","Chart a Course","Chartooth Cougar","Chasm Drake","Chasm Guide","Chasm Skulker","Chastise","Chatter of the Squirrel","Cheap Ass","Cheatyface","Checkpoint Officer","Checks and Balances","Cheering Fanatic","Chemister\'s Insight","Chemister\'s Trick","Cherished Hatchling","Chevill, Bane of Monsters","Chicken Egg","Chicken à la King","Chief Engineer","Chief of the Edge","Chief of the Foundry","Chief of the Scale","Chieftain en-Dal","Child of Alara","Child of Gaea","Child of Night","Child of Thorns","Childhood Horror","Children of Korlis","Chill","Chill Haunting","Chill of Foreboding","Chill to the Bone","Chillbringer","Chillerpillar","Chilling Apparition","Chilling Grasp","Chilling Shade","Chilling Trap","Chime of Night","Chimeric Coils","Chimeric Egg","Chimeric Idol","Chimeric Mass","Chimeric Sphere","Chimeric Staff","Chimney Goyf","Chimney Imp","Chipper Chopper","Chisei, Heart of Oceans","Chitinous Cloak","Chittering Doom","Chittering Harvester","Chittering Host","Chittering Rats","Chittering Witch","Chivalrous Chevalier","Chlorophant","Cho-Arrim Alchemist","Cho-Arrim Bruiser","Cho-Arrim Legate","Cho-Manno\'s Blessing","Cho-Manno, Revolutionary","Choice of Damnations","Choke","Choked Estuary","Choking Fumes","Choking Restraints","Choking Sands","Choking Tethers","Choking Vines","Choose Your Champion","Choose Your Demise","Chord of Calling","Chorus of Might","Chorus of Woe","Chorus of the Conclave","Chorus of the Tides","Chosen by Heliod","Chosen of Markov // Markov\'s Servant","Chromanticore","Chromatic Armor","Chromatic Lantern","Chromatic Orrery","Chromatic Sphere","Chromatic Star","Chrome Mox","Chrome Replicator","Chrome Steed","Chromescale Drake","Chromeshell Crab","Chromium","Chromium, the Mutable","Chronatog","Chronatog Avatar","Chronatog Totem","Chronic Flooding","Chronicler of Heroes","Chronobot","Chronomantic Escape","Chronomaton","Chronosavant","Chronostutter","Chronozoa","Chub Toad","Chulane, Teller of Tales","Churning Eddy","Cinder Barrens","Cinder Cloud","Cinder Crawler","Cinder Elemental","Cinder Giant","Cinder Glade","Cinder Hellion","Cinder Marsh","Cinder Pyromancer","Cinder Seer","Cinder Shade","Cinder Storm","Cinder Wall","Cinderbones","Cinderclasm","Cinderhaze Wretch","Cindervines","Circle of Affliction","Circle of Despair","Circle of Elders","Circle of Flame","Circle of Protection: Art","Circle of Protection: Artifacts","Circle of Protection: Black","Circle of Protection: Blue","Circle of Protection: Green","Circle of Protection: Red","Circle of Protection: Shadow","Circle of Protection: White","Circle of Solace","Circling Vultures","Circu, Dimir Lobotomist","Circuitous Route","Circular Logic","Citadel Castellan","Citadel Siege","Citadel of Pain","Citanul Centaurs","Citanul Druid","Citanul Flute","Citanul Hierophants","Citanul Woodreaders","City in a Bottle","City of Ass","City of Brass","City of Shadows","City of Solitude","City of Traitors","Citywatch Sphinx","Citywide Bust","Civic Guildmage","Civic Saber","Civic Stalwart","Civic Wayfinder","Civilized Scholar // Homicidal Brute","Clackbridge Troll","Claim // Fame","Claim of Erebos","Claim the Firstborn","Clairvoyance","Clam Session","Clam-I-Am","Clambassadors","Clamor Shaman","Clan Defiance","Clan Guildmage","Clarion Ultimatum","Clash of Realities","Clash of Titans","Clash of Wills","Claustrophobia","Claws of Gix","Claws of Valakut","Claws of Wirewood","Clay Pigeon","Clay Statue","Cleanfall","Cleanse","Cleansing","Cleansing Beam","Cleansing Meditation","Cleansing Nova","Cleansing Ray","Cleansing Screech","Cleansing Wildfire","Clear","Clear Shot","Clear a Path","Clear the Land","Clear the Mind","Clear the Stage","Clearwater Goblet","Clearwater Pathway // Murkwater Pathway","Cleaver Riot","Cleaving Sliver","Clergy en-Vec","Clergy of the Holy Nimbus","Cleric of Chill Depths","Cleric of Life\'s Bond","Cleric of the Forward Order","Clever Combo","Clever Impersonator","Clickslither","Cliff Threader","Cliffhaven Kitesail","Cliffhaven Sell-Sword","Cliffhaven Vampire","Cliffrunner Behemoth","Cliffside Lookout","Cliffside Market","Cliffside Rescuer","Clifftop Retreat","Cling to Dust","Clinging Anemones","Clinging Darkness","Clinging Mists","Clip Wings","Cloak and Dagger","Cloak of Confusion","Cloak of Feathers","Cloak of Invisibility","Cloak of Mists","Cloak of the Philosopher","Cloaked Siren","Clock of DOOOOOOOOOOOOM!","Clock of Omens","Clocknapper","Clockspinning","Clockwork Avian","Clockwork Beast","Clockwork Beetle","Clockwork Condor","Clockwork Dragon","Clockwork Gnomes","Clockwork Hydra","Clockwork Servant","Clockwork Steed","Clockwork Swarm","Clockwork Vorrac","Cloistered Youth // Unholy Fiend","Clone","Clone Legion","Clone Shell","Close Quarters","Clot Sliver","Cloud Cover","Cloud Crusader","Cloud Djinn","Cloud Dragon","Cloud Elemental","Cloud Key","Cloud Manta","Cloud Pirates","Cloud Spirit","Cloud Sprite","Cloud of Faeries","Cloudblazer","Cloudchaser Eagle","Cloudchaser Kestrel","Cloudcrest Lake","Cloudcrown Oak","Cloudfin Raptor","Cloudform","Cloudgoat Ranger","Cloudheath Drake","Cloudhoof Kirin","Cloudkin Seer","Cloudpiercer","Cloudpost","Cloudreach Cavalry","Cloudreader Sphinx","Cloudseeder","Cloudshift","Cloudshredder Sliver","Cloudskate","Cloudstone Curio","Cloudthresher","Clout of the Dominus","Cloven Casting","Clutch of Currents","Clutch of Undeath","Clutch of the Undercity","Coal Golem","Coal Stoker","Coalhauler Swine","Coalition Flag","Coalition Honor Guard","Coalition Relic","Coalition Victory","Coast Watcher","Coastal Breach","Coastal Discovery","Coastal Drake","Coastal Hornclaw","Coastal Piracy","Coastal Tower","Coastal Wizard","Coastline Chimera","Coat of Arms","Coat with Venom","Coax from the Blind Eternities","Cobalt Golem","Cobblebrute","Cobbled Wings","Cobra Trap","Cockatrice","Cocoon","Code of Constraint","Codex Shredder","Coerced Confession","Coercion","Coercive Portal","Coffin Puppets","Coffin Purge","Coffin Queen","Cogmentor","Cognivore","Cogwork Assembler","Cogwork Grinder","Cogwork Librarian","Cogwork Spy","Cogwork Tracker","Cogworker\'s Puzzleknot","Coiled Tinviper","Coiling Oracle","Coiling Woodworm","Coils of the Medusa","Cold Snap","Cold Storage","Cold-Eyed Selkie","Cold-Water Snapper","Coldsteel Heart","Colfenor\'s Plans","Colfenor\'s Urn","Collapsing Borders","Collar the Culprit","Collateral Damage","Collected Company","Collected Conjuring","Collective Blessing","Collective Brutality","Collective Defiance","Collective Effort","Collective Restraint","Collective Unconscious","Collective Voyage","Collector Ouphe","Collector Protector","Collision // Colossus","Colorful Feiyi Sparrow","Colos Yearling","Colossal Dreadmaw","Colossal Heroics","Colossal Majesty","Colossal Might","Colossal Whale","Colossapede","Colossification","Colossodon Yearling","Colossus Hammer","Colossus of Akros","Colossus of Sardia","Coma Veil","Combat Celebrant","Combat Medic","Combine Guildmage","Combo Attack","Combust","Combustible Gearhulk","Comet Storm","Comeuppance","Command Beacon","Command Tower","Command of Unsummoning","Command the Chaff","Command the Dreadhorde","Command the Storm","Commandeer","Commander Eesha","Commander Greven il-Vec","Commander\'s Authority","Commander\'s Insignia","Commander\'s Sphere","Commanding Presence","Commando Raid","Commence the Endgame","Commencement of Festivities","Commit // Memory","Common Bond","Common Cause","Common Courtesy","Common Iguana","Commune with Dinosaurs","Commune with Lava","Commune with Nature","Commune with the Gods","Companion of the Trials","Comparative Analysis","Compelling Argument","Compelling Deterrence","Complete Disregard","Complex Automaton","Complicate","Composite Golem","Compost","Compound Fracture","Compulsion","Compulsive Research","Compulsory Rest","Concealed Courtyard","Concentrate","Concerted Defense","Concerted Effort","Conch Horn","Conclave Cavalier","Conclave Equenaut","Conclave Guildmage","Conclave Mentor","Conclave Naturalists","Conclave Phalanx","Conclave Tribunal","Conclave\'s Blessing","Concordant Crossroads","Concordia Pegasus","Concussive Bolt","Condemn","Condescend","Conduit of Ruin","Conduit of Storms // Conduit of Emrakul","Cone of Flame","Confessor","Confidence from Strength","Confirm Suspicions","Confiscate","Confiscation Coup","Conflagrate","Conflux","Confound","Confounding Conundrum","Confront the Assault","Confront the Unknown","Confusion in the Ranks","Congregate","Congregation at Dawn","Conifer Strider","Conifer Wurm","Conjured Currency","Conjurer\'s Ban","Conjurer\'s Bauble","Conjurer\'s Closet","Connive // Concoct","Conquer","Conquering Manticore","Conqueror\'s Flail","Conqueror\'s Galleon // Conqueror\'s Foothold","Conqueror\'s Pledge","Consecrate // Consume","Consecrate Land","Consecrated Sphinx","Consecrated by Blood","Conservator","Consign // Oblivion","Consign to Dream","Consign to Dust","Consign to the Pit","Conspicuous Snoop","Conspiracy","Constant Mists","Constricting Sliver","Constricting Tendrils","Consul\'s Lieutenant","Consul\'s Shieldguard","Consulate Crackdown","Consulate Dreadnought","Consulate Skygate","Consulate Surveillance","Consulate Turret","Consult the Necrosages","Consume Spirit","Consume Strength","Consume the Meek","Consuming Aberration","Consuming Bonfire","Consuming Ferocity","Consuming Fervor","Consuming Rage","Consuming Sinkhole","Consuming Vapors","Consuming Vortex","Consumptive Goo","Contagion","Contagion Clasp","Contagion Engine","Contagious Nim","Containment Membrane","Containment Priest","Contaminated Bond","Contaminated Ground","Contamination","Contemplation","Contempt","Contentious Plan","Contested Cliffs","Contested War Zone","Contingency Plan","Contraband Kingpin","Contract Killing","Contract from Below","Contradict","Contraption Cannon","Control Magic","Control Win Condition","Control of the Court","Controlled Instincts","Controvert","Conundrum Sphinx","Convalescence","Convalescent Care","Conversion","Conversion Chamber","Convicted Killer // Branded Howler","Conviction","Convincing Mirage","Convolute","Convulsing Licid","Cooperation","Coordinated Assault","Coordinated Barrage","Coordinated Charge","Copper Carapace","Copper Gnomes","Copper Myr","Copper Tablet","Copper-Leaf Angel","Copperhoof Vorrac","Copperhorn Scout","Copperline Gorge","Copy Artifact","Copy Enchantment","Coral Atoll","Coral Barrier","Coral Commando","Coral Eel","Coral Fighters","Coral Helm","Coral Merfolk","Coral Net","Coral Reef","Coral Trickster","Coralhelm Chronicler","Coralhelm Commander","Coralhelm Guide","Cordial Vampire","Core Prowler","Coretapper","Cornered Market","Corpse Augur","Corpse Blockade","Corpse Churn","Corpse Connoisseur","Corpse Cur","Corpse Dance","Corpse Harvester","Corpse Hauler","Corpse Knight","Corpse Lunge","Corpse Traders","Corpsehatch","Corpsejack Menace","Corpseweft","Corpulent Corpse","Corridor Monitor","Corrosion","Corrosive Gale","Corrosive Mentor","Corrosive Ooze","Corrupt","Corrupt Court Official","Corrupt Eunuchs","Corrupt Official","Corrupted Conscience","Corrupted Crossroads","Corrupted Grafstone","Corrupted Harvester","Corrupted Key","Corrupted Resolve","Corrupted Roots","Corrupted Zendikon","Corrupting Licid","Corsair Captain","Cosi\'s Ravager","Cosi\'s Trickster","Cosmic Horror","Cosmic Larva","Cosmotronic Wave","Costly Plunder","Council Guardian","Council of Advisors","Council of the Absolute","Council\'s Judgment","Counsel of the Soratami","Counterbalance","Counterbore","Counterflux","Counterintelligence","Counterlash","Countermand","Counterspell","Countersquall","Countervailing Winds","Countless Gears Renegade","Countryside Crusher","Courage in Crisis","Courageous Outrider","Courier Griffin","Courier Hawk","Courier\'s Capsule","Courser of Kruphix","Coursers\' Accord","Court Archers","Court Cleric","Court Homunculus","Court Hussar","Court Street Denizen","Courtly Provocateur","Covenant of Blood","Covenant of Minds","Cover of Darkness","Cover of Winter","Covert Operative","Coveted Jewel","Coveted Peacock","Coveted Prize","Covetous Dragon","Covetous Urge","Cowardice","Cowed by Wisdom","Cower in Fear","Cowl Prowler","Crab Umbra","Crabapple Cohort","Crack the Earth","Crackdown","Crackdown Construct","Crackleburr","Crackling Club","Crackling Doom","Crackling Drake","Crackling Perimeter","Crackling Triton","Cradle Guard","Cradle of Vitality","Cradle of the Accursed","Cradle to Grave","Crafty Cutpurse","Crafty Octopus","Crafty Pathmage","Crag Puca","Crag Saurian","Cragcrown Pathway // Timbercrown Pathway","Cragganwick Cremator","Cragplate Baloth","Cramped Bunker","Cranial Archive","Cranial Extraction","Cranial Plating","Crash","Crash Landing","Crash Through","Crash of Rhino Beetles","Crash of Rhinos","Crash the Ramparts","Crashing Boars","Crashing Centaur","Crashing Drawbridge","Crashing Footfalls","Crashing Tide","Crater Elemental","Crater Hellion","Crater\'s Claws","Craterhoof Behemoth","Craterize","Craven Giant","Craven Knight","Craw Giant","Craw Wurm","Crawling Barrens","Crawling Filth","Crawling Sensation","Crawlspace","Crazed Armodon","Crazed Firecat","Crazed Goblin","Crazed Skirge","Creakwood Ghoul","Creakwood Liege","Cream of the Crop","Creature Bond","Creature Guy","Credit Voucher","Creeperhulk","Creeping Chill","Creeping Corrosion","Creeping Dread","Creeping Mold","Creeping Renaissance","Creeping Tar Pit","Creeping Trailblazer","Creepy Doll","Cremate","Crenellated Wall","Crescendo of War","Crested Craghorn","Crested Herdcaller","Crested Sunmare","Crevasse","Crib Swap","Crime // Punishment","Crimson Acolyte","Crimson Hellkite","Crimson Honor Guard","Crimson Kobolds","Crimson Mage","Crimson Manticore","Crimson Muckwader","Crimson Roc","Crimson Wisps","Crippling Blight","Crippling Chill","Crippling Fatigue","Crocanura","Crocodile of the Crossing","Cromat","Crook of Condemnation","Crookclaw Elder","Crookclaw Transmuter","Crooked Scales","Crookshank Kobolds","Crop Rotation","Crop Sigil","Crosis\'s Attendant","Crosis\'s Catacombs","Crosis\'s Charm","Crosis, the Purger","Crossbow Ambush","Crossbow Infantry","Crossroads Consecrator","Crosstown Courier","Crossway Vampire","Crosswinds","Crovax","Crovax the Cursed","Crovax, Ascendant Hero","Crow Storm","Crow of Dark Tidings","Crowd Favorites","Crowd of Cinders","Crowd\'s Favor","Crown of Ascension","Crown of Awe","Crown of Convergence","Crown of Doom","Crown of Empires","Crown of Flames","Crown of Fury","Crown of Suspicion","Crown of Vigor","Crown of the Ages","Crown-Hunter Hireling","Crowned Ceratok","Crucible of Fire","Crucible of Worlds","Crucible of the Spirit Dragon","Crude Rampart","Cruel Bargain","Cruel Celebrant","Cruel Cut","Cruel Deceiver","Cruel Edict","Cruel Entertainment","Cruel Fate","Cruel Feeding","Cruel Finality","Cruel Reality","Cruel Revival","Cruel Sadist","Cruel Tutor","Cruel Ultimatum","Crumble","Crumble to Dust","Crumbling Ashes","Crumbling Colossus","Crumbling Necropolis","Crumbling Sanctuary","Crumbling Vestige","Crusade","Crusader of Odric","Crusading Knight","Crush","Crush Contraband","Crush Dissent","Crush Underfoot","Crush of Tentacles","Crush of Wurms","Crusher Zendikon","Crushing Canopy","Crushing Pain","Crushing Vines","Crux of Fate","Cry of Contrition","Cry of the Carnarium","Cryoclasm","Crypsis","Crypt Angel","Crypt Champion","Crypt Cobra","Crypt Creeper","Crypt Ghast","Crypt Incursion","Crypt Lurker","Crypt Rats","Crypt Ripper","Crypt Sliver","Crypt of Agadeem","Crypt of the Eternals","Cryptborn Horror","Cryptbreaker","Cryptic Annelid","Cryptic Caves","Cryptic Command","Cryptic Cruiser","Cryptic Gateway","Cryptic Serpent","Cryptic Trilobite","Cryptolith Fragment // Aurora of Emrakul","Cryptolith Rite","Cryptoplasm","Cryptwailing","Crystacean","Crystal Ball","Crystal Chimes","Crystal Golem","Crystal Quarry","Crystal Rod","Crystal Seer","Crystal Shard","Crystal Slipper","Crystal Spray","Crystal Vein","Crystalline Crawler","Crystalline Giant","Crystalline Nautilus","Crystalline Resonance","Crystalline Sliver","Crystallization","Cubwarden","Cudgel Troll","Culling Dais","Culling Drone","Culling Mark","Culling Scales","Culling Sun","Culling the Weak","Cult Guildmage","Cult of the Waxing Moon","Cultbrand Cinder","Cultist\'s Staff","Cultivate","Cultivator Drone","Cultivator of Blades","Cultivator\'s Caravan","Cultural Exchange","Cumber Stone","Cunning","Cunning Advisor","Cunning Bandit // Azamuki, Treachery Incarnate","Cunning Breezedancer","Cunning Evasion","Cunning Geysermage","Cunning Giant","Cunning Lethemancer","Cunning Nightbonder","Cunning Sparkmage","Cunning Strike","Cunning Survivor","Cunning Wish","Cuombajj Witches","Curator of Mysteries","Curator\'s Ward","Curfew","Curio Vendor","Curiosity","Curious Herd","Curious Homunculus // Voracious Reader","Curious Killbot","Curious Obsession","Curious Pair // Treats to Share","Curse Artifact","Curse of Bloodletting","Curse of Bounty","Curse of Chains","Curse of Chaos","Curse of Death\'s Hold","Curse of Disturbance","Curse of Echoes","Curse of Exhaustion","Curse of Fool\'s Wisdom","Curse of Inertia","Curse of Marit Lage","Curse of Misfortunes","Curse of Oblivion","Curse of Opulence","Curse of Predation","Curse of Shallow Graves","Curse of Stalked Prey","Curse of Thirst","Curse of Vengeance","Curse of Verbosity","Curse of Vitality","Curse of Wizardry","Curse of the Bloody Tome","Curse of the Cabal","Curse of the Fire Penguin // Curse of the Fire Penguin Creature","Curse of the Forsaken","Curse of the Nightly Hunt","Curse of the Pierced Heart","Curse of the Swine","Cursebreak","Cursecatcher","Cursed Flesh","Cursed Land","Cursed Minotaur","Cursed Monstrosity","Cursed Rack","Cursed Ronin","Cursed Scroll","Cursed Totem","Curtain of Light","Curtains\' Call","Custodi Lich","Custodi Peacekeeper","Custodi Soulbinders","Custodi Soulcaller","Custodi Squire","Custodian of the Trove","Custody Battle","Customs Depot","Cut // Ribbons","Cut the Earthly Bond","Cut the Tethers","Cutthroat Maneuver","Cutthroat il-Dal","Cycle of Life","Cyclical Evolution","Cyclone","Cyclone Sire","Cyclonic Rift","Cyclopean Giant","Cyclopean Mummy","Cyclopean Snare","Cyclopean Titan","Cyclopean Tomb","Cyclops Electromancer","Cyclops Gladiator","Cyclops Tyrant","Cyclops of Eternal Fury","Cyclops of One-Eyed Pass","Cylian Elf","Cylian Sunsinger","Cystbearer","Cytoplast Manipulator","Cytoplast Root-Kin","Cytoshape","Cytospawn Shambler","D\'Avenant Archer","D\'Avenant Healer","D\'Avenant Trapper","Dack Fayden","Dack\'s Duplicate","Dagger Caster","Dagger of the Worthy","Daggerback Basilisk","Daggerclaw Imp","Daggerdrome Imp","Daggersail Aeronaut","Daghatar the Adamant","Daily Regimen","Dakkon Blackblade","Dakkon Blackblade Avatar","Dakmor Bat","Dakmor Ghoul","Dakmor Lancer","Dakmor Plague","Dakmor Salvage","Dakmor Scorpion","Dakmor Sorceress","Dakra Mystic","Dalakos, Crafter of Wonders","Damia, Sage of Stone","Damnable Pact","Damnation","Dampen Thought","Dampening Pulse","Damping Engine","Damping Field","Damping Matrix","Damping Sphere","Dance of Flame","Dance of Many","Dance of Panic","Dance of Shadows","Dance of the Dead","Dance of the Manse","Dance of the Skywise","Dance with Devils","Dance, Pathetic Marionette","Dancing Scimitar","Dandân","Dangerous Wager","Danitha Capashen, Paragon","Daraja Griffin","Darba","Daredevil Dragster","Daretti, Ingenious Iconoclast","Daretti, Scrap Savant","Darien, King of Kjeldor","Darigaaz Reincarnated","Darigaaz\'s Attendant","Darigaaz\'s Caldera","Darigaaz\'s Charm","Darigaaz, the Igniter","Daring Apprentice","Daring Archaeologist","Daring Buccaneer","Daring Demolition","Daring Fiendbonder","Daring Leap","Daring Saboteur","Daring Skyjek","Daring Sleuth // Bearer of Overwhelming Truths","Daring Thief","Dark Banishing","Dark Bargain","Dark Betrayal","Dark Confidant","Dark Dabbling","Dark Deal","Dark Depths","Dark Favor","Dark Hatchling","Dark Heart of the Wood","Dark Impostor","Dark Inquiry","Dark Intimations","Dark Maze","Dark Nourishment","Dark Offering","Dark Petition","Dark Privilege","Dark Prophecy","Dark Remedy","Dark Revenant","Dark Ritual","Dark Salvation","Dark Sphere","Dark Supplicant","Dark Suspicions","Dark Temper","Dark Triumph","Dark Tutelage","Dark Withering","Dark-Dweller Oracle","Darkblade Agent","Darkblast","Darkest Hour","Darkheart Sliver","Darkling Stalker","Darklit Gargoyle","Darkness","Darkpact","Darkslick Drake","Darkslick Shores","Darksteel Axe","Darksteel Brute","Darksteel Citadel","Darksteel Colossus","Darksteel Forge","Darksteel Gargoyle","Darksteel Garrison","Darksteel Ingot","Darksteel Juggernaut","Darksteel Mutation","Darksteel Myr","Darksteel Pendant","Darksteel Plate","Darksteel Reactor","Darksteel Relic","Darksteel Sentinel","Darkthicket Wolf","Darkwatch Elves","Darkwater Catacombs","Darkwater Egg","Darting Merfolk","Daru Cavalier","Daru Encampment","Daru Healer","Daru Lancer","Daru Mender","Daru Sanctifier","Daru Spiritualist","Daru Stinger","Daru Warchief","Daryl, Hunter of Walkers","Dash Hopes","Daughter of Autumn","Daunting Defender","Dauntless Aven","Dauntless Bodyguard","Dauntless Cathar","Dauntless Dourbark","Dauntless Escort","Dauntless Escort Avatar","Dauntless Onslaught","Dauntless River Marshal","Dauntless Survivor","Dauntless Unity","Dauthi Cutthroat","Dauthi Embrace","Dauthi Ghoul","Dauthi Horror","Dauthi Jackal","Dauthi Marauder","Dauthi Mercenary","Dauthi Mindripper","Dauthi Slayer","Dauthi Trapper","Dauthi Warlord","Davriel\'s Shadowfugue","Davriel, Rogue Shadowmage","Dawn Charm","Dawn Elemental","Dawn Evangel","Dawn Gryff","Dawn of Hope","Dawn of the Dead","Dawn to Dusk","Dawn\'s Reflection","Dawnbreak Reclaimer","Dawnbringer Charioteers","Dawnfeather Eagle","Dawnfluke","Dawnglare Invoker","Dawnglow Infusion","Dawning Angel","Dawning Purist","Dawnray Archer","Dawnstrider","Dawnstrike Paladin","Dawntreader Elk","Daxos of Meletis","Daxos the Returned","Daxos\'s Torment","Daxos, Blessed by the Sun","Day of Destiny","Day of Judgment","Day of the Dragons","Day\'s Undoing","Daybreak Chaplain","Daybreak Charger","Daybreak Chimera","Daybreak Coronet","Daybreak Ranger // Nightfall Predator","Daysquad Marshal","Daze","Dazzling Beauty","Dazzling Lights","Dazzling Ramparts","Dazzling Reflection","Dead // Gone","Dead Drop","Dead Man\'s Chest","Dead Reckoning","Dead Reveler","Dead Revels","Dead Ringers","Dead Weight","Dead of Winter","Dead-Iron Sledge","Deadapult","Deadbridge Chant","Deadbridge Goliath","Deadbridge Shaman","Deadeye Brawler","Deadeye Harpooner","Deadeye Navigator","Deadeye Plunderers","Deadeye Quartermaster","Deadeye Rig-Hauler","Deadeye Tormentor","Deadeye Tracker","Deadfall","Deadhead","Deadlock Trap","Deadly Alliance","Deadly Allure","Deadly Designs","Deadly Grub","Deadly Insect","Deadly Poison Sampler","Deadly Recluse","Deadly Rollick","Deadly Tempest","Deadly Visit","Deadly Wanderings","Deadshot","Deadshot Minotaur","Deadwood Treefolk","Deafening Clarion","Deafening Silence","Deal Broker","Deal Damage","Dearly Departed","Death Baron","Death Bomb","Death Charmer","Death Cloud","Death Cultist","Death Denied","Death Frenzy","Death Grasp","Death Match","Death Mutation","Death Pit Offering","Death Pits of Rath","Death Pulse","Death Rattle","Death Spark","Death Speakers","Death Stroke","Death Ward","Death Watch","Death Wind","Death Wish","Death by Dragons","Death of a Thousand Stings","Death or Glory","Death\'s Approach","Death\'s Caress","Death\'s Duet","Death\'s Oasis","Death\'s Presence","Death\'s Shadow","Death\'s-Head Buzzard","Death-Hood Cobra","Death-Mask Duplicant","Deathbellow Raider","Deathbellow War Cry","Deathbloom Thallid","Deathbringer Liege","Deathbringer Regent","Deathbringer Thoctar","Deathcap Cultivator","Deathcoil Wurm","Deathcult Rogue","Deathcurse Ogre","Deathforge Shaman","Deathgaze Cockatrice","Deathgazer","Deathgorge Scavenger","Deathgreeter","Deathgrip","Deathknell Kami","Deathlace","Deathless Ancient","Deathless Angel","Deathless Behemoth","Deathless Knight","Deathmark","Deathmark Prelate","Deathmask Nezumi","Deathmist Raptor","Deathpact Angel","Deathreap Ritual","Deathrender","Deathrite Shaman","Deathspore Thallid","Deathsprout","Debilitating Injury","Debt of Loyalty","Debt to the Deathless","Debtor\'s Pulpit","Debtors\' Knell","Debtors\' Transport","Decaying Soil","Deceiver Exarch","Deceiver of Form","Deception","Decimate","Decimator Beetle","Decimator Web","Decimator of the Provinces","Decision Paralysis","Declaration in Stone","Declaration of Naught","Declare Dominance","Decoction Module","Decommission","Decompose","Decomposition","Deconstruct","Decorated Champion","Decorated Griffin","Decorated Knight // Present Arms","Decoy Gambit","Decree of Annihilation","Decree of Justice","Decree of Pain","Decree of Savagery","Decree of Silence","Dedicated Martyr","Deem Worthy","Deep Analysis","Deep Forest Hermit","Deep Freeze","Deep Reconnaissance","Deep Spawn","Deep Water","Deep Wood","Deep-Sea Kraken","Deep-Sea Serpent","Deep-Sea Terror","Deep-Slumber Titan","Deepcavern Imp","Deepchannel Mentor","Deepfathom Skulker","Deepfire Elemental","Deepglow Skate","Deeproot Champion","Deeproot Elite","Deeproot Warrior","Deeproot Waters","Deeptread Merrow","Deepwater Hypnotist","Deepwood Drummer","Deepwood Elder","Deepwood Ghoul","Deepwood Legate","Deepwood Tantiv","Deepwood Wolverine","Deface","Defang","Defeat","Defective Detective","Defend the Hearth","Defender en-Vec","Defender of Chaos","Defender of Law","Defender of the Order","Defense Grid","Defense of the Heart","Defensive Formation","Defensive Maneuvers","Defensive Stance","Defiant Bloodlord","Defiant Elf","Defiant Falcon","Defiant Greatmaw","Defiant Khenra","Defiant Ogre","Defiant Salvager","Defiant Stand","Defiant Strike","Defiant Vanguard","Defile","Defiler of Souls","Defiling Tears","Deflecting Palm","Deflecting Swat","Deflection","Deft Dismissal","Deft Duelist","Deftblade Elite","Defy Death","Defy Gravity","Dega Disciple","Dega Sanctuary","Degavolver","Deglamer","Dehydration","Deicide","Deity of Scars","Delay","Delaying Shield","Deliberate","Delif\'s Cone","Delif\'s Cube","Delight in the Hunt","Delighted Killbot","Delirium","Delirium Skeins","Deliver Unto Evil","Delraich","Deluge","Delusions of Mediocrity","Delver of Secrets // Insectile Aberration","Demanding Dragon","Dematerialize","Dementia Bat","Dementia Sliver","Demigod of Revenge","Demolish","Demolition Stomper","Demon of Catastrophes","Demon of Dark Schemes","Demon of Death\'s Gate","Demon of Loathing","Demon of Wailing Agonies","Demon\'s Disciple","Demon\'s Grasp","Demon\'s Herald","Demon\'s Horn","Demon\'s Jester","Demonfire","Demonic Appetite","Demonic Attorney","Demonic Collusion","Demonic Consultation","Demonic Dread","Demonic Embrace","Demonic Hordes","Demonic Pact","Demonic Rising","Demonic Taskmaster","Demonic Torment","Demonic Tutor","Demonic Vigor","Demonlord Belzenlok","Demonlord of Ashmouth","Demonmail Hauberk","Demonspine Whip","Demoralize","Demotion","Demystify","Den Protector","Denied!","Denizen of the Deep","Dense Canopy","Dense Foliage","Deny Existence","Deny Reality","Deny the Divine","Denying Wind","Depala, Pilot Exemplar","Departed Deckhand","Deploy the Gatewatch","Deploy to the Front","Depose // Deploy","Deprive","Depths of Desire","Deputized Protester","Deputy of Acquittals","Deputy of Detention","Deranged Assistant","Deranged Hermit","Deranged Outcast","Deranged Whelp","Derelor","Derevi, Empyrial Tactician","Dermoplasm","Descend on the Prey","Descend upon the Sinful","Descendant of Kiyomaro","Descendant of Masumaro","Descendant of Soramaro","Descendants\' Path","Descent into Madness","Descent of the Dragons","Desecrated Earth","Desecrated Tomb","Desecration Demon","Desecration Elemental","Desecration Plague","Desecrator Hag","Desert","Desert Cerodon","Desert Drake","Desert Nomads","Desert Sandstorm","Desert Twister","Desert of the Fervent","Desert of the Glorified","Desert of the Indomitable","Desert of the Mindful","Desert of the True","Desert\'s Hold","Deserted Temple","Deserter\'s Quarters","Desertion","Desiccated Naga","Desolate Lighthouse","Desolation","Desolation Angel","Desolation Giant","Desolation Twin","Despark","Desperate Castaways","Desperate Charge","Desperate Gambit","Desperate Lunge","Desperate Ravings","Desperate Research","Desperate Ritual","Desperate Sentry","Desperate Stand","Despise","Despoil","Despoiler of Souls","Despondency","Despondent Killbot","Despotic Scepter","Destined // Lead","Destiny Spinner","Destroy the Evidence","Destructive Digger","Destructive Flow","Destructive Force","Destructive Revelry","Destructive Tampering","Destructive Urge","Destructor Dragon","Detainment Spell","Detection Tower","Detention Sphere","Detonate","Detritivore","Deus of Calamity","Devastate","Devastating Dreams","Devastating Summons","Devastation","Devastation Tide","Deviant Glee","Devil\'s Play","Devils\' Playground","Devilthorn Fox","Devious Cover-Up","Devkarin Dissident","Devoted Caretaker","Devoted Crop-Mate","Devoted Druid","Devoted Hero","Devoted Retainer","Devotee of Strength","Devour Flesh","Devour in Flames","Devour in Shadow","Devourer of Memory","Devouring Deep","Devouring Greed","Devouring Hellion","Devouring Light","Devouring Rage","Devouring Strossus","Devouring Swarm","Devout Chaplain","Devout Decree","Devout Harpist","Devout Invocation","Devout Lightcaster","Devout Monk","Devout Witness","Dewdrop Spy","Dhund Operative","Diabolic Edict","Diabolic Intent","Diabolic Machine","Diabolic Revelation","Diabolic Servitude","Diabolic Tutor","Diabolic Vision","Diabolical Salvation","Diamond Faerie","Diamond Faerie Avatar","Diamond Kaleidoscope","Diamond Knight","Diamond Mare","Diamond Valley","Diaochan, Artful Beauty","Dichotomancy","Dictate of Erebos","Dictate of Heliod","Dictate of Karametra","Dictate of Kruphix","Dictate of the Twin Gods","Dictation Quillograph","Didgeridoo","Didn\'t Say Please","Die Young","Diffusion Sliver","Dig Through Time","Diligent Excavator","Diligent Farmhand","Diluvian Primordial","Dimensional Breach","Dimensional Infiltrator","Diminish","Diminishing Returns","Dimir Aqueduct","Dimir Charm","Dimir Cluestone","Dimir Cutpurse","Dimir Doppelganger","Dimir Guildgate","Dimir Guildmage","Dimir House Guard","Dimir Infiltrator","Dimir Informant","Dimir Keyrune","Dimir Locket","Dimir Machinations","Dimir Signet","Dimir Spybug","Din of the Fireherd","Dingus Egg","Dingus Staff","Dinosaur Hunter","Dinosaur Stampede","Dinrova Horror","Diplomacy of the Wastes","Diplomatic Escort","Diplomatic Immunity","Dire Fleet Captain","Dire Fleet Daredevil","Dire Fleet Hoarder","Dire Fleet Interloper","Dire Fleet Neckbreaker","Dire Fleet Poisoner","Dire Fleet Ravager","Dire Fleet Warmonger","Dire Tactics","Dire Undercurrents","Dire Wolves","Direct Current","Diregraf Captain","Diregraf Colossus","Diregraf Escort","Diregraf Ghoul","Dirge Bat","Dirge of Dread","Dirgur Nemesis","Dirtcowl Wurm","Dirtwater Wraith","Dirty Rat","Dirty Wererat","Disallow","Disappear","Disappearing Act","Disarm","Disaster Radius","Disciple of Bolas","Disciple of Deceit","Disciple of Grace","Disciple of Griselbrand","Disciple of Kangee","Disciple of Law","Disciple of Malice","Disciple of Phenax","Disciple of Tevesh Szat","Disciple of the Old Ways","Disciple of the Ring","Disciple of the Vault","Discombobulate","Discontinuity","Discordant Dirge","Discordant Piper","Discordant Spirit","Discovery // Dispersal","Disdainful Stroke","Disease Carriers","Diseased Vermin","Disembowel","Disempower","Disenchant","Disentomb","Disfigure","Disharmony","Disinformation Campaign","Disintegrate","Dismal Backwater","Dismal Failure","Dismantle","Dismantling Blow","Dismantling Wave","Dismember","Dismiss","Dismiss into Dream","Dismissive Pyromancer","Disorder","Disorient","Disorienting Glower","Disowned Ancestor","Dispatch","Dispatch Dispensary","Dispel","Dispeller\'s Capsule","Dispense Justice","Dispersal Shield","Dispersal Technician","Disperse","Dispersing Orb","Displace","Displacement Wave","Display of Dominance","Disposal Mummy","Dispossess","Disrupt","Disrupt Decorum","Disrupting Scepter","Disrupting Shoal","Disruption Aura","Disruptive Pitmage","Disruptive Student","Dissension in the Ranks","Dissenter\'s Deliverance","Dissipate","Dissipation Field","Dissolve","Distant Melody","Distant Memories","Distemper of the Blood","Distended Mindbender","Distorting Lens","Distorting Wake","Distortion Strike","Distract the Hydra","Distress","District Guide","Disturbed Burial","Disturbing Plot","Dive Bomber","Dive Down","Divebomber Griffin","Divergent Growth","Divergent Transformations","Diversionary Tactics","Divert","Divest","Divination","Divine Arrow","Divine Congregation","Divine Deflection","Divine Favor","Divine Intervention","Divine Light","Divine Offering","Divine Presence","Divine Reckoning","Divine Retribution","Divine Sacrament","Divine Transformation","Divine Verdict","Divine Visitation","Diviner Spirit","Diviner\'s Lockbox","Diviner\'s Wand","Diving Griffin","Divining Witch","Divinity of Pride","Division Table","Dizzy Spell","Dizzying Gaze","Djeru\'s Renunciation","Djeru\'s Resolve","Djeru, With Eyes Open","Djinn Illuminatus","Djinn of Infinite Deceits","Djinn of Wishes","Djinn of the Lamp","Do or Die","Do-It-Yourself Seraph","Do-Over","Docent of Perfection // Final Iteration","Dockside Extortionist","Dodecapod","Dogged Hunter","Dogpile","Dogsnail Engine","Dolmen Gate","Domesticated Hydra","Domesticated Mammoth","Domesticated Watercourse","Domestication","Dominaria\'s Judgment","Dominate","Dominating Licid","Dominator Drone","Domineer","Domineering Will","Dominus of Fealty","Domri Rade","Domri\'s Ambush","Domri\'s Nodorog","Domri, Anarch of Bolas","Domri, Chaos Bringer","Domri, City Smasher","Donate","Dong Zhou, the Tyrant","Doom Blade","Doom Cannon","Doom Foretold","Doom Whisperer","Doomed Artisan","Doomed Dissenter","Doomed Necromancer","Doomed Traveler","Doomfall","Doomgape","Doomsday","Doomsday Specter","Doomwake Giant","Door of Destinies","Door to Nothingness","Doorkeeper","Doran, the Siege Tower","Dormant Gomazoa","Dormant Sliver","Dormant Volcano","Dosan the Falling Leaf","Dosan\'s Oldest Chant","Double Cleave","Double Cross","Double Deal","Double Dip","Double Header","Double Negative","Double Play","Double Stroke","Double Take","Double Vision","Doublecast","Doubling Chant","Doubling Cube","Doubling Season","Doubtless One","Douse","Douse in Gloom","Douser of Lights","Dovescape","Dovin Baan","Dovin\'s Acuity","Dovin\'s Automaton","Dovin\'s Dismissal","Dovin\'s Veto","Dovin, Architect of Law","Dovin, Grand Arbiter","Dovin, Hand of Control","Down // Dirty","Downdraft","Downhill Charge","Downpour","Downsize","Dowsing Dagger // Lost Vale","Dowsing Shaman","Dr. Julius Jumblemorph","Draco","Draconian Cylix","Draconic Disciple","Draconic Roar","Dracoplasm","Drafna\'s Restoration","Drag Down","Drag Under","Drag to the Underworld","Dragon Appeasement","Dragon Arch","Dragon Bell Monk","Dragon Blood","Dragon Breath","Dragon Broodmother","Dragon Egg","Dragon Engine","Dragon Fangs","Dragon Fodder","Dragon Grip","Dragon Hatchling","Dragon Hunter","Dragon Mage","Dragon Mantle","Dragon Mask","Dragon Roost","Dragon Scales","Dragon Shadow","Dragon Tempest","Dragon Throne of Tarkir","Dragon Tyrant","Dragon Whelp","Dragon Whisperer","Dragon Wings","Dragon\'s Claw","Dragon\'s Eye Savants","Dragon\'s Eye Sentry","Dragon\'s Herald","Dragon\'s Hoard","Dragon\'s Presence","Dragon-Scarred Bear","Dragon-Style Twins","Dragonlair Spider","Dragonloft Idol","Dragonlord Atarka","Dragonlord Dromoka","Dragonlord Kolaghan","Dragonlord Ojutai","Dragonlord Silumgar","Dragonlord\'s Prerogative","Dragonlord\'s Servant","Dragonmaster Outcast","Dragonrage","Dragonscale Boon","Dragonscale General","Dragonshift","Dragonskull Summit","Dragonsoul Knight","Dragonspeaker Shaman","Dragonstalker","Dragonstorm","Drain Life","Drain Power","Drain the Well","Draining Whelk","Drainpipe Vermin","Drake Familiar","Drake Hatchling","Drake Haven","Drake Umbra","Drake-Skull Cameo","Drakestown Forgotten","Drakewing Krasis","Drakuseth, Maw of Flames","Dralnu\'s Crusade","Dralnu\'s Pet","Dralnu, Lich Lord","Dramatic Entrance","Dramatic Rescue","Dramatic Reversal","Drana\'s Chosen","Drana\'s Emissary","Drana\'s Silencer","Drana, Kalastria Bloodchief","Drana, Liberator of Malakir","Drana, the Last Bloodchief","Drannith Healer","Drannith Magistrate","Drannith Stinger","Drastic Revelation","Drawn Together","Drawn from Dreams","Dread","Dread Cacodemon","Dread Charge","Dread Defiler","Dread Drone","Dread Presence","Dread Reaper","Dread Return","Dread Shade","Dread Slag","Dread Slaver","Dread Specter","Dread Statuary","Dread Summons","Dread Wanderer","Dread Warlock","Dread Wight","Dread of Night","Dreadbore","Dreadbringer Lampads","Dreadful Apathy","Dreadhorde Arcanist","Dreadhorde Butcher","Dreadhorde Invasion","Dreadhorde Twins","Dreadmalkin","Dreadship Reef","Dreadwaters","Dreadwing","Dreadwurm","Dream Cache","Dream Chisel","Dream Coat","Dream Eater","Dream Fighter","Dream Fracture","Dream Halls","Dream Leash","Dream Pillager","Dream Prowler","Dream Salvage","Dream Stalker","Dream Thief","Dream Thrush","Dream Tides","Dream Trawler","Dream Twist","Dream\'s Grip","Dreamborn Muse","Dreamcaller Siren","Dreamcatcher","Dreampod Druid","Dreams of the Dead","Dreamscape Artist","Dreamshaper Shaman","Dreamspoiler Witches","Dreamstalker Manticore","Dreamstealer","Dreamstone Hedron","Dreamtail Heron","Dreamwinder","Dredge","Dredge the Mire","Dreg Mangler","Dreg Reaver","Dregs of Sorrow","Dregscape Sliver","Dregscape Zombie","Drekavac","Drelnoch","Drench the Soil in Their Blood","Drift of Phantasms","Drift of the Dead","Drifter il-Dal","Drifting Djinn","Drifting Meadow","Drifting Shade","Drill Bit","Drill-Skimmer","Drinker of Sorrow","Dripping Dead","Dripping-Tongue Zubera","Driven // Despair","Driver of the Dead","Drogskol Captain","Drogskol Cavalry","Drogskol Reaver","Drogskol Shieldmate","Dromad Purebred","Dromar\'s Attendant","Dromar\'s Cavern","Dromar\'s Charm","Dromar, the Banisher","Dromoka Captain","Dromoka Dunecaster","Dromoka Monument","Dromoka Warrior","Dromoka\'s Command","Dromoka\'s Gift","Dromoka, the Eternal","Dromosaur","Droning Bureaucrats","Drooling Groodion","Drooling Ogre","Drop of Honey","Dross Crocodile","Dross Golem","Dross Harvester","Dross Hopper","Dross Prowler","Dross Ripper","Dross Scorpion","Drought","Drove of Elves","Drover of the Mighty","Drown in Filth","Drown in Shapelessness","Drown in Sorrow","Drown in the Loch","Drowned","Drowned Catacomb","Drowned Rusalka","Drowned Secrets","Drowner Initiate","Drowner of Hope","Drowner of Secrets","Drownyard Behemoth","Drownyard Explorers","Drownyard Temple","Drowsing Tyrannodon","Drudge Beetle","Drudge Reavers","Drudge Sentinel","Drudge Skeletons","Drudge Spell","Druid Lyrist","Druid of Horns","Druid of the Anima","Druid of the Cowl","Druid of the Sacred Beaker","Druid\'s Call","Druid\'s Deliverance","Druid\'s Familiar","Druidic Satchel","Druids\' Repository","Drumhunter","Drunau Corpse Trawler","Dry Spell","Dryad Arbor","Dryad Greenseeker","Dryad Militant","Dryad Sophisticate","Dryad of the Ilysian Grove","Dryad\'s Caress","Dryad\'s Favor","Dual Casting","Dual Doomsuits","Dual Nature","Dual Shot","Dualcaster Mage","Dub","Dubious Challenge","Duct Crawler","Due Respect","Dueling Grounds","Duelist\'s Heritage","Duergar Assailant","Duergar Cave-Guard","Duergar Hedge-Mage","Duergar Mine-Captain","Duh","Dukhara Peafowl","Dukhara Scavenger","Dulcet Sirens","Dumb Ass","Dune Beetle","Dune Diviner","Dune-Brood Nephilim","Duneblast","Dunerider Outlaw","Dunes of the Dead","Dungeon Geists","Dungeon Master","Dungeon Shade","Dungrove Elder","Duplicant","Duplication Device","Duplicity","Durable Coilbug","Durable Handicraft","Duress","Durkwood Baloth","Durkwood Boars","Durkwood Tracker","Dusk // Dawn","Dusk Charger","Dusk Feaster","Dusk Imp","Dusk Legion Dreadnought","Dusk Legion Zealot","Dusk Urchins","Duskborne Skymarcher","Duskdale Wurm","Duskfang Mentor","Duskhunter Bat","Duskmantle Guildmage","Duskmantle Operative","Duskmantle Prowler","Duskmantle Seer","Duskmantle, House of Shadow","Duskrider Falcon","Duskrider Peregrine","Duskwalker","Duskwatch Recruiter // Krallenhorde Howler","Duskworker","Dust Bowl","Dust Corona","Dust Elemental","Dust Stalker","Dust of Moments","Dust to Dust","Dutiful Attendant","Dutiful Return","Dutiful Servants","Dutiful Thrull","Duty-Bound Dead","Dwarven Armorer","Dwarven Armory","Dwarven Berserker","Dwarven Blastminer","Dwarven Bloodboiler","Dwarven Catapult","Dwarven Demolition Team","Dwarven Driller","Dwarven Grunt","Dwarven Hold","Dwarven Landslide","Dwarven Lieutenant","Dwarven Lightsmith","Dwarven Mine","Dwarven Miner","Dwarven Nomad","Dwarven Patrol","Dwarven Pony","Dwarven Priest","Dwarven Recruiter","Dwarven Ruins","Dwarven Scorcher","Dwarven Sea Clan","Dwarven Shrine","Dwarven Soldier","Dwarven Song","Dwarven Strike Force","Dwarven Thaumaturgist","Dwarven Trader","Dwarven Vigilantes","Dwarven Warriors","Dwarven Weaponsmith","Dwell on the Past","Dwindle","Dwynen\'s Elite","Dwynen, Gilt-Leaf Daen","Dying Wail","Dying Wish","Dynacharge","Dynavolt Tower","Dystopia","Déjà Vu","Eager Beaver","Eager Cadet","Eager Construct","Eagle of the Watch","Earl of Squirrel","Early Frost","Early Harvest","Earnest Fellowship","Earsplitting Rats","Earth Elemental","Earth Rift","Earth Servant","Earth Surge","Earth-Origin Yak","Earthbind","Earthblighter","Earthbrawn","Earthcraft","Earthen Arms","Earthen Goo","Earthlink","Earthlore","Earthquake","Earthshaker","Earthshaker Giant","Earthshaker Khenra","Earthshaking Si","Earwig Squad","Eastern Paladin","Easy Prey","Eat to Extinction","Eaten by Spiders","Eater of Days","Eater of Hope","Eater of the Dead","Ebon Dragon","Ebon Drake","Ebon Praetor","Ebon Stronghold","Ebonblade Reaper","Ebony Charm","Ebony Horse","Ebony Owl Netsuke","Ebony Rhino","Ebony Treefolk","Echo Chamber","Echo Circlet","Echo Mage","Echo Storm","Echo Tracer","Echo of Eons","Echoes of the Kin Tree","Echoing Boon","Echoing Calm","Echoing Courage","Echoing Decay","Echoing Ruin","Echoing Truth","Eddytrail Hawk","Edgar Markov","Edge of Autumn","Edge of Malacol","Edge of the Divinity","Edgewalker","Edgewall Innkeeper","Edifice of Authority","Edric, Spymaster of Trest","Eel Umbra","Eerie Interlude","Eerie Procession","Eerie Ultimatum","Efficient Construction","Efreet Weaponmaster","Ego Erasure","Eidolon of Blossoms","Eidolon of Countless Battles","Eidolon of Inspiration","Eidolon of Obstruction","Eidolon of Philosophy","Eidolon of Rhetoric","Eidolon of the Great Revel","Eiganjo Castle","Eiganjo Free-Riders","Eight-and-a-Half-Tails","Eight-and-a-Half-Tails Avatar","Eightfold Maze","Ekundu Cyclops","Ekundu Griffin","El-Hajjâj","Elaborate Firecannon","Eladamri","Eladamri\'s Call","Eladamri\'s Vineyard","Eladamri, Lord of Leaves","Eladamri, Lord of Leaves Avatar","Eland Umbra","Elbrus, the Binding Blade // Withengar Unbound","Elder Cathar","Elder Deep-Fiend","Elder Druid","Elder Gargaroth","Elder Land Wurm","Elder Mastery","Elder Pine of Jukai","Elder Spawn","Elder of Laurels","Elderscale Wurm","Elderwood Scion","Eldrazi Aggressor","Eldrazi Conscription","Eldrazi Devastator","Eldrazi Displacer","Eldrazi Mimic","Eldrazi Monument","Eldrazi Obligator","Eldrazi Skyspawner","Eldrazi Temple","Eldritch Evolution","Electric Eel","Electrickery","Electrify","Electrodominance","Electrolyze","Electropotence","Electrostatic Bolt","Electrostatic Field","Electrostatic Pummeler","Electryte","Elegant Edgecrafters","Elemental Appeal","Elemental Augury","Elemental Bond","Elemental Mastery","Elemental Resonance","Elemental Uprising","Elenda, the Dusk Rose","Elephant Ambush","Elephant Grass","Elephant Graveyard","Elephant Guide","Elephant Resurgence","Elesh Norn, Grand Cenobite","Elf Replica","Elfhame Druid","Elfhame Palace","Elfhame Sanctuary","Elgaud Inquisitor","Elgaud Shieldmate","Eliminate","Eliminate the Competition","Elite Arcanist","Elite Archers","Elite Arrester","Elite Cat Warrior","Elite Guardmage","Elite Headhunter","Elite Inquisitor","Elite Instructor","Elite Javelineer","Elite Scaleguard","Elite Skirmisher","Elite Vanguard","Elixir of Immortality","Elixir of Vitality","Elkin Bottle","Elkin Lair","Eloren Wilds","Elsewhere Flask","Elsha of the Infinite","Elspeth Conquers Death","Elspeth Tirel","Elspeth\'s Devotee","Elspeth\'s Nightmare","Elspeth, Knight-Errant","Elspeth, Sun\'s Champion","Elspeth, Sun\'s Nemesis","Elspeth, Undaunted Hero","Elusive Krasis","Elusive Spellfist","Elusive Tormentor // Insidious Mist","Elven Cache","Elven Fortress","Elven Lyre","Elven Palisade","Elven Riders","Elven Rite","Elven Warhounds","Elves of Deep Shadow","Elvish Aberration","Elvish Archdruid","Elvish Archers","Elvish Bard","Elvish Berserker","Elvish Branchbender","Elvish Champion","Elvish Champion Avatar","Elvish Clancaller","Elvish Eulogist","Elvish Farmer","Elvish Fury","Elvish Guidance","Elvish Handservant","Elvish Harbinger","Elvish Healer","Elvish Herder","Elvish Hexhunter","Elvish House Party","Elvish Hunter","Elvish Impersonators","Elvish Lookout","Elvish Lyrist","Elvish Mystic","Elvish Pathcutter","Elvish Pioneer","Elvish Piper","Elvish Promenade","Elvish Ranger","Elvish Reclaimer","Elvish Rejuvenator","Elvish Scout","Elvish Scrapper","Elvish Skysweeper","Elvish Soultiller","Elvish Spirit Guide","Elvish Vanguard","Elvish Visionary","Elvish Warrior","Emancipation Angel","Embalmed Brawler","Embalmer\'s Tools","Embargo","Ember Beast","Ember Gale","Ember Hauler","Ember Shot","Ember Swallower","Ember Weaver","Ember-Eye Wolf","Ember-Fist Zubera","Embercleave","Embereth Paladin","Embereth Shieldbreaker // Battle Display","Embereth Skyblazer","Emberhorn Minotaur","Embermage Goblin","Embermaw Hellion","Embersmith","Emberstrike Duo","Emberwilde Augur","Emberwilde Caliph","Emberwilde Djinn","Emblazoned Golem","Emblem of the Warmind","Embodiment of Agonies","Embodiment of Fury","Embodiment of Insight","Embodiment of Spring","Embolden","Embraal Bruiser","Embraal Gear-Smasher","Embrace My Diabolical Vision","Emcee","Emerald Charm","Emerald Dragonfly","Emerald Medallion","Emerald Oryx","Emerge Unscathed","Emergence Zone","Emergency Powers","Emergent Growth","Emergent Ultimatum","Emeria Angel","Emeria Captain","Emeria Shepherd","Emeria\'s Call // Emeria, Shattered Skyclave","Emeria, the Sky Ruin","Emiel the Blessed","Emissary of Despair","Emissary of Grudges","Emissary of Hope","Emissary of Sunrise","Emissary of the Sleepless","Emissary\'s Ploy","Emmara Tandris","Emmara, Soul of the Accord","Emmessi Tome","Emperor Crocodile","Emperor\'s Vanguard","Empowered Autogenerator","Empress Galina","Empty City Ruse","Empty the Catacombs","Empty the Pits","Empty the Warrens","Empty-Shrine Kannushi","Empyreal Voyager","Empyrean Eagle","Empyrial Archangel","Empyrial Armor","Empyrial Plate","Empyrial Storm","Emrakul\'s Evangel","Emrakul\'s Hatcher","Emrakul\'s Influence","Emrakul, the Aeons Torn","Emrakul, the Promised End","Emry, Lurker of the Loch","Enatu Golem","Encampment Keeper","Encase in Ice","Enchanted Being","Enchanted Carriage","Enchanted Evening","Enchanted Prairie","Enchanter\'s Bane","Enchantment Alteration","Enchantmentize","Enchantress\'s Presence","Encircling Fissure","Enclave Cryptologist","Enclave Elite","Encroach","Encroaching Wastes","Encrust","End Hostilities","End-Raze Forerunners","Endangered Armodon","Endbringer","Endbringer\'s Revel","Endemic Plague","Endless Atlas","Endless Cockroaches","Endless Horizons","Endless Obedience","Endless One","Endless Ranks of the Dead","Endless Sands","Endless Scream","Endless Swarm","Endless Whispers","Endless Wurm","Endling","Endoskeleton","Endrek Sahr, Master Breeder","Endure","Enduring Ideal","Enduring Renewal","Enduring Scalelord","Enduring Sliver","Enduring Victory","Enemy of Enlightenment","Enemy of the Guildpact","Energizer","Energy Arc","Energy Bolt","Energy Chamber","Energy Field","Energy Flux","Energy Storm","Energy Tap","Energy Vortex","Enervate","Enfeeblement","Enforcer Griffin","Engineered Explosives","Engineered Might","Engineered Plague","Engulf the Shore","Engulfing Eruption","Engulfing Flames","Engulfing Slagwurm","Enhanced Awareness","Enhanced Surveillance","Enigma Drake","Enigma Eidolon","Enigma Sphinx","Enigma Sphinx Avatar","Enigma Thief","Enigmatic Incarnation","Enlarge","Enlightened Ascetic","Enlightened Maniac","Enlightened Tutor","Enlisted Wurm","Enlistment Officer","Enormous Baloth","Enrage","Enraged Ceratok","Enraged Giant","Enraged Killbot","Enraged Revolutionary","Enraging Licid","Enroll in the Coalition","Enshrined Memories","Enshrouding Mist","Enslave","Enslaved Dwarf","Enslaved Horror","Enslaved Scout","Ensnare","Ensnaring Bridge","Ensoul Artifact","Ensouled Scimitar","Entangler","Entangling Trap","Entangling Vines","Enter the Dungeon","Enter the God-Eternals","Enter the Infinite","Enter the Unknown","Enthralling Hold","Enthralling Victor","Entirely Normal Armchair","Entomb","Entomber Exarch","Entourage of Trest","Entrails Feaster","Entrancing Lyre","Entrancing Melody","Entrapment Maneuver","Entreat the Angels","Entreat the Dead","Entropic Eidolon","Entropic Specter","Envelop","Eon Frolicker","Eon Hub","Ephara\'s Enlightenment","Ephara\'s Radiance","Ephara\'s Warden","Ephara, God of the Polis","Ephemeral Shields","Ephemerate","Ephemeron","Epic Confrontation","Epic Downfall","Epic Experiment","Epic Proportions","Epic Struggle","Epicenter","Epicure of Blood","Epiphany Storm","Epiphany at the Drownyard","Epitaph Golem","Epochrasite","Equal Treatment","Equestrian Skill","Equilibrium","Equinox","Equipoise","Era of Innovation","Eradicate","Erase","Erase (Not the Urza\'s Legacy One)","Erayo, Soratami Ascendant // Erayo\'s Essence","Erdwal Illuminator","Erdwal Ripper","Erebos\'s Emissary","Erebos\'s Intervention","Erebos\'s Titan","Erebos, Bleak-Hearted","Erebos, God of the Dead","Erg Raiders","Erhnam Djinn","Erhnam Djinn Avatar","Erithizon","Eron the Relentless","Erosion","Errand of Duty","Errant Doomsayers","Errant Ephemeron","Errant Minion","Errantry","Erratic Cyclops","Erratic Explosion","Erratic Mutation","Erratic Portal","Erratic Visionary","Ersatz Gnomes","Erstwhile Trooper","Ertai","Ertai\'s Familiar","Ertai\'s Meddling","Ertai\'s Trickery","Ertai, Wizard Adept","Ertai, the Corrupted","Escape Artist","Escape Protocol","Escape Routes","Escape Velocity","Escape to the Wilds","Escaped Null","Escaped Shapeshifter","Esper Battlemage","Esper Charm","Esper Cormorants","Esper Panorama","Esper Sojourners","Esper Stormblade","Esperzoa","Essence Backlash","Essence Bottle","Essence Capture","Essence Depleter","Essence Drain","Essence Extraction","Essence Feed","Essence Filter","Essence Flare","Essence Flux","Essence Fracture","Essence Harvest","Essence Leak","Essence Scatter","Essence Sliver","Essence Symbiote","Essence Vortex","Essence Warden","Essence of the Wild","Estrid\'s Invocation","Estrid, the Masked","Etali, Primal Storm","Etched Champion","Etched Monstrosity","Etched Oracle","Etched Oracle Avatar","Etchings of the Chosen","Eternal Dominion","Eternal Dragon","Eternal Flame","Eternal Isolation","Eternal Scourge","Eternal Skylord","Eternal Taskmaster","Eternal Thirst","Eternal Warrior","Eternal Witness","Eternal of Harsh Truths","Eternity Snare","Eternity Vessel","Ether Well","Ethercaste Knight","Ethereal Absolution","Ethereal Ambush","Ethereal Armor","Ethereal Champion","Ethereal Elk","Ethereal Forager","Ethereal Guidance","Ethereal Haze","Ethereal Usher","Ethereal Whiskergill","Etherium Abomination","Etherium Astrolabe","Etherium Sculptor","Etherium-Horn Sorcerer","Ethersworn Adjudicator","Ethersworn Canonist","Ethersworn Shieldmage","Etherwrought Page","Etrata, the Silencer","Eunuchs\' Intrigues","Eureka","Eutropia the Twice-Favored","Evacuation","Evanescent Intellect","Evangel of Heliod","Evangelize","Evaporate","Evasive Action","Even the Odds","Ever After","Ever-Watching Threshold","Everbark Shaman","Everdawn Champion","Everdream","Everflame Eidolon","Everflowing Chalice","Everglades","Everglove Courier","Everlasting Lich","Everlasting Torment","Evermind","Evernight Shade","Everquill Phoenix","Evershrike","Every Dream a Nightmare","Every Hope Shall Vanish","Every Last Vestige Shall Rot","Everythingamajig","Evil Boros Charm","Evil Comes to Fruition","Evil Eye of Orms-by-Gore","Evil Eye of Urborg","Evil Presence","Evil Presents","Evil Twin","Evincar\'s Justice","Eviscerate","Eviscerator","Evolution Charm","Evolution Sage","Evolution Vat","Evolutionary Escalation","Evolutionary Leap","Evolving Wilds","Evra, Halcyon Witness","Exalted Angel","Exalted Dragon","Exava, Rakdos Blood Witch","Excavating Anurid","Excavation","Excavation Elephant","Excavation Mole","Excavator","Excise","Exclude","Exclusion Mage","Exclusion Ritual","Excommunicate","Excoriate","Excruciator","Execute","Executioner\'s Capsule","Executioner\'s Hood","Executioner\'s Swing","Exemplar of Strength","Exert Influence","Exhaustion","Exhume","Exhumer Thrull","Exile","Exile into Darkness","Exiled Boggart","Exiled Doomsayer","Exorcist","Exoskeletal Armor","Exotic Curse","Exotic Disease","Exotic Orchard","Expansion // Explosion","Expedite","Expedition Champion","Expedition Diviner","Expedition Envoy","Expedition Healer","Expedition Map","Expedition Raptor","Expedition Skulker","Expel from Orazca","Expendable Troops","Experiment Five","Experiment Kraj","Experiment One","Experimental Aviator","Experimental Frenzy","Experimental Overload","Exploding Borders","Exploration","Explore","Explorer\'s Scope","Explosive Apparatus","Explosive Growth","Explosive Impact","Explosive Revelation","Explosive Vegetation","Expose Evil","Expose to Daylight","Expropriate","Expunge","Exquisite Archangel","Exquisite Blood","Exquisite Firecraft","Exsanguinate","Extinction","Extinction Event","Extinguish","Extinguish All Hope","Extirpate","Extortion","Extra Arms","Extract","Extract from Darkness","Extractor Demon","Extraplanar Lens","Extravagant Spirit","Extremely Slow Zombie","Extricator of Sin // Extricator of Flesh","Extruder","Exuberant Firestoker","Exuberant Wolfbear","Exultant Cultist","Exultant Skymarcher","Eye Collector","Eye Gouge","Eye Spy","Eye for an Eye","Eye of Doom","Eye of Nowhere","Eye of Ramos","Eye of Singularity","Eye of Ugin","Eye of Yawgmoth","Eye of the Storm","Eye to Eye","Eyeblight Assassin","Eyeblight Massacre","Eyeblight\'s Ending","Eyekite","Eyeless Watcher","Eyes Everywhere","Eyes in the Skies","Eyes of the Watcher","Eyes of the Wisent","Ezuri\'s Archers","Ezuri\'s Brigade","Ezuri\'s Predation","Ezuri, Claw of Progress","Ezuri, Renegade Leader","Fa\'adiyah Seer","Fable of Wolf and Owl","Fabled Hero","Fabled Passage","Fabricate","Fabrication Module","Face of Divinity","Face of Fear","Face to Face","Faceless Butcher","Faceless Devourer","Faces of the Past","Facet Reader","Facevaulter","Fact or Fiction","Fade Away","Fade from Memory","Fade into Antiquity","Fae of Wishes // Granted","Faeburrow Elder","Faerie Aerie","Faerie Artisans","Faerie Conclave","Faerie Dragon","Faerie Duelist","Faerie Formation","Faerie Guidemother // Gift of the Fae","Faerie Harbinger","Faerie Impostor","Faerie Invaders","Faerie Macabre","Faerie Mechanist","Faerie Miscreant","Faerie Noble","Faerie Seer","Faerie Squadron","Faerie Swarm","Faerie Tauntings","Faerie Trickery","Faerie Vandal","Failed Inspection","Failure // Comply","Fairgrounds Trumpeter","Fairgrounds Warden","Faith Healer","Faith Unbroken","Faith of the Devoted","Faith\'s Fetters","Faith\'s Reward","Faith\'s Shield","Faithbearer Paladin","Faithful Squire // Kaiso, Memory of Loyalty","Faithless Looting","Falconer Adept","Falkenrath Aristocrat","Falkenrath Exterminator","Falkenrath Gorger","Falkenrath Marauders","Falkenrath Noble","Falkenrath Reaver","Falkenrath Torturer","Fall of the Gavel","Fall of the Hammer","Fall of the Thran","Fall of the Titans","Fallen Angel","Fallen Angel Avatar","Fallen Askari","Fallen Cleric","Fallen Ferromancer","Fallen Ideal","Fallen Shinobi","Falling Star","Falling Timber","Fallow Earth","Fallow Wurm","Fallowsage","False Cure","False Dawn","False Defeat","False Demise","False Memories","False Mourning","False Orders","False Peace","False Prophet","False Summoning","Falter","Familiar Ground","Familiar\'s Ruse","Famine","Famished Ghoul","Famished Paladin","Fan Bearer","Fan Favorite","Fanatic of Mogis","Fanatic of Xenagos","Fanatical Devotion","Fanatical Fever","Fanatical Firebrand","Fang Skulkin","Fang of the Pack","Fangren Firstborn","Fangren Hunter","Fangren Marauder","Fangren Pathcutter","Fanning the Flames","Far // Away","Far Wanderings","Farbog Boneflinger","Farbog Explorer","Farbog Revenant","Farewell to Arms","Farfinder","Farhaven Elf","Farm // Market","Farmstead","Farmstead Gleaner","Farrel\'s Mantle","Farrel\'s Zealot","Farrelite Priest","Farseek","Farsight Adept","Farsight Mask","Fascination","Fascist Art Director","Fastbond","Fasting","Fat Ass","Fatal Attraction","Fatal Blow","Fatal Frenzy","Fatal Fumes","Fatal Lore","Fatal Mutation","Fatal Push","Fate Foretold","Fate Forgotten","Fate Transfer","Fate Unraveler","Fated Conflagration","Fated Infatuation","Fated Intervention","Fated Retribution","Fated Return","Fateful End","Fateful Showdown","Fatespinner","Fatestitcher","Fathom Feeder","Fathom Fleet Boarder","Fathom Fleet Captain","Fathom Fleet Cutthroat","Fathom Fleet Firebrand","Fathom Mage","Fathom Seer","Fathom Trawl","Fatigue","Fault Line","Fault Riders","Faultgrinder","Fauna Shaman","Favor of the Mighty","Favor of the Overbeing","Favor of the Woods","Favorable Destiny","Favorable Winds","Favored Hoplite","Favored of Iroas","Fblthp, the Lost","Fear","Fearless Fledgling","Fearless Halberdier","Fearsome Awakening","Fearsome Temper","Feast of Blood","Feast of Dreams","Feast of Flesh","Feast of Worms","Feast of the Unicorn","Feast on the Fallen","Feast or Famine","Feaster of Fools","Feasting Troll King","Feat of Resistance","Feather, the Redeemed","Fecundity","Feebleness","Feed the Clan","Feed the Machine","Feed the Pack","Feed the Swarm","Feedback","Feedback Bolt","Feeding Frenzy","Feeding Grounds","Feeling of Dread","Feint","Feisty Stegosaurus","Feiyi Snake","Feldon of the Third Path","Feldon\'s Cane","Felhide Brawler","Felhide Minotaur","Felhide Petrifier","Felhide Spiritbinder","Felidar Cub","Felidar Guardian","Felidar Retreat","Felidar Sovereign","Felidar Umbra","Feline Sovereign","Fell Flagship","Fell Shepherd","Fell Specter","Fell the Mighty","Fell the Pheasant","Fellwar Stone","Femeref Archers","Femeref Enchantress","Femeref Healer","Femeref Knight","Femeref Scouts","Fen Hauler","Fen Stalker","Fencer Clique","Fencer\'s Magemark","Fencing Ace","Fend Off","Fendeep Summoner","Feral Abomination","Feral Animist","Feral Contest","Feral Deceiver","Feral Hydra","Feral Incarnation","Feral Instinct","Feral Invocation","Feral Krushok","Feral Lightning","Feral Maaka","Feral Prowler","Feral Ridgewolf","Feral Roar","Feral Shadow","Feral Thallid","Feral Throwback","Ferocious Charge","Ferocious Pup","Ferocious Tigorilla","Ferocious Zheng","Ferocity","Ferocity of the Wilds","Feroz\'s Ban","Ferropede","Ferrovore","Fertile Ground","Fertile Imagination","Fertile Thicket","Fertilid","Fervent Cathar","Fervent Champion","Fervent Charge","Fervent Denial","Fervent Paincaster","Fervent Strike","Fervor","Festercreep","Festergloom","Festerhide Boar","Festering Evil","Festering Goblin","Festering March","Festering Mummy","Festering Newt","Festering Wound","Festival","Festival of Trokin","Festival of the Guildpact","Festive Funeral","Fetid Heath","Fetid Horror","Fetid Imp","Fetid Pools","Fettergeist","Feudkiller\'s Verdict","Fever Charm","Fevered Convulsions","Fevered Strength","Fevered Visions","Fickle Efreet","Fiddlehead Kami","Field Creeper","Field Marshal","Field Research","Field Surgeon","Field of Dreams","Field of Reality","Field of Ruin","Field of Souls","Field of the Dead","Fieldmist Borderpost","Fields of Summer","Fiend Artisan","Fiend Binder","Fiend Hunter","Fiend of the Shadows","Fiendish Duo","Fiendslayer Paladin","Fierce Empath","Fierce Guardianship","Fierce Invocation","Fierce Witchstalker","Fiery Bombardment","Fiery Cannonade","Fiery Conclusion","Fiery Confluence","Fiery Emancipation","Fiery Fall","Fiery Finish","Fiery Gambit","Fiery Hellhound","Fiery Impulse","Fiery Intervention","Fiery Islet","Fiery Justice","Fiery Mantle","Fiery Temper","Fight as One","Fight or Flight","Fight to the Death","Fight with Fire","Fighting Chance","Fighting Drake","Figure of Destiny","Figure of Destiny Avatar","Filigree Angel","Filigree Crawler","Filigree Familiar","Filigree Fracture","Filigree Sages","Fill with Fright","Filth","Filthy Cur","Final Death","Final Flare","Final Fortune","Final Judgment","Final Parting","Final Payment","Final Punishment","Final Revels","Final Reward","Final Strike","Final-Sting Faerie","Finale of Devastation","Finale of Eternity","Finale of Glory","Finale of Promise","Finale of Revelation","Find // Finality","Finders, Keepers","Finest Hour","Finishing Blow","Fire // Ice","Fire Ambush","Fire Ants","Fire Bowman","Fire Covenant","Fire Diamond","Fire Dragon","Fire Drake","Fire Elemental","Fire Imp","Fire Juggler","Fire Prophecy","Fire Servant","Fire Shrine Keeper","Fire Snake","Fire Sprites","Fire Tempest","Fire Urchin","Fire Whip","Fire and Brimstone","Fire at Will","Fire-Belly Changeling","Fire-Field Ogre","Fire-Lit Thicket","Fire-Omen Crane","Fireball","Fireblade Artist","Fireblade Charger","Fireblast","Firebolt","Fireborn Knight","Firebrand Archer","Firebrand Ranger","Firebreathing","Firecannon Blast","Firecat Blitz","Firedrinker Satyr","Firefiend Elemental","Firefist Adept","Firefist Striker","Fireflux Squad","Firefly","Fireforger\'s Puzzleknot","Firefright Mage","Firehoof Cavalry","Firemane Angel","Firemane Avenger","Firemantle Mage","Firemaw Kavu","Firemind Vessel","Firemind\'s Foresight","Firemind\'s Research","Fires of Invention","Fires of Undeath","Fires of Yavimaya","Firescreamer","Fireshrieker","Fireslinger","Firesong and Sunspeaker","Firespout","Firestorm","Firestorm Hellkite","Firestorm Phoenix","Firewake Sliver","Firewild Borderpost","Firewing Phoenix","First Come, First Served","First Pick","First Response","First Sliver\'s Chosen","First Volley","First-Sphere Gargantua","Fishliver Oil","Fissure","Fissure Vent","Fissure Wizard","Fist of Suns","Fistful of Force","Fists of Flame","Fists of Ironwood","Fists of the Anvil","Fists of the Demigod","Fit of Rage","Five Kids in a Trenchcoat","Five-Alarm Fire","Five-Finger Discount","Flaccify","Flagstones of Trokair","Flailing Drake","Flailing Manticore","Flailing Ogre","Flailing Soldier","Flame Burst","Flame Elemental","Flame Fusillade","Flame Jab","Flame Javelin","Flame Jet","Flame Lash","Flame Rift","Flame Slash","Flame Spill","Flame Spirit","Flame Sweep","Flame Wave","Flame-Kin War Scout","Flame-Kin Zealot","Flame-Wreathed Phoenix","Flameblade Adept","Flameblade Angel","Flameblast Dragon","Flameborn Hellion","Flameborn Viron","Flamebreak","Flamecast Wheel","Flamecore Elemental","Flamekin Bladewhirl","Flamekin Brawler","Flamekin Harbinger","Flamekin Spitfire","Flamekin Village","Flamerush Rider","Flames of the Blood Hand","Flames of the Firebrand","Flames of the Raze-Boar","Flameshadow Conjuring","Flameshot","Flamespeaker Adept","Flamespeaker\'s Will","Flamestick Courier","Flametongue Kavu","Flametongue Kavu Avatar","Flamewake Phoenix","Flamewave Invoker","Flamewright","Flaming Gambit","Flaming Sword","Flanking Troops","Flare","Flaring Flame-Kin","Flaring Pain","Flash","Flash Conscription","Flash Counter","Flash Flood","Flash Foliage","Flash of Defiance","Flash of Insight","Flashfires","Flashfreeze","Flatten","Flavor Judge","Flawless Maneuver","Flaxen Intruder // Welcome Home","Flay","Flayed Nim","Flayer Drone","Flayer Husk","Flayer of the Hatebound","Flaying Tendrils","Fledgling Djinn","Fledgling Dragon","Fledgling Griffin","Fledgling Imp","Fledgling Mawcor","Fledgling Osprey","Fleecemane Lion","Fleet Swallower","Fleet-Footed Monk","Fleetfeather Cockatrice","Fleetfeather Sandals","Fleetfoot Panther","Fleeting Aven","Fleeting Distraction","Fleeting Image","Fleeting Memories","Fleetwheel Cruiser","Flensermite","Flesh // Blood","Flesh Allergy","Flesh Carver","Flesh Reaver","Flesh to Dust","Flesh-Eater Imp","Fleshbag Marauder","Fleshformer","Fleshgrafter","Fleshmad Steed","Fleshpulper Giant","Fleshwrither","Flicker","Flicker of Fate","Flickerform","Flickering Spirit","Flickering Ward","Flickerwisp","Flight","Flight Spellbomb","Flight of Equenauts","Flight of Fancy","Fling","Flint Golem","Flinthoof Boar","Flitterstep Eidolon","Floating Shield","Floating-Dream Zubera","Flock of Rabid Sheep","Flood","Flood Plain","Flood of Recollection","Flood of Tears","Floodbringer","Floodchaser","Flooded Grove","Flooded Shoreline","Flooded Strand","Flooded Woodlands","Floodgate","Floodtide Serpent","Floodwater Dam","Floodwaters","Floral Spuzzem","Flourishing Defenses","Flourishing Fox","Flow of Ideas","Flow of Maggots","Flower // Flourish","Flowering Field","Flowering Lumberknot","Flowstone Armor","Flowstone Blade","Flowstone Channeler","Flowstone Charger","Flowstone Crusher","Flowstone Embrace","Flowstone Flood","Flowstone Giant","Flowstone Hellion","Flowstone Mauler","Flowstone Overseer","Flowstone Salamander","Flowstone Sculpture","Flowstone Shambler","Flowstone Slide","Flowstone Strike","Flowstone Surge","Flowstone Thopter","Flowstone Wall","Flowstone Wyvern","Fluctuator","Flummoxed Cyclops","Flurry of Horns","Flurry of Wings","Flusterstorm","Flutterfox","Flux","Flux Channeler","Fluxcharger","Flycatcher Giraffid","Flying Carpet","Flying Crane Technique","Flying Men","Fodder Cannon","Fodder Launch","Foe-Razer Regent","Fog","Fog Bank","Fog Elemental","Fog Patch","Fog of Gnats","Fogwalker","Foil","Fold into Aether","Folio of Fancies","Folk Medicine","Folk of An-Havva","Folk of the Pines","Followed Footsteps","Fomori Nomad","Font of Agonies","Font of Fertility","Font of Fortunes","Font of Ire","Font of Mythos","Font of Return","Font of Vigor","Food Chain","Fool\'s Demise","Fool\'s Tome","Foot Soldiers","Footbottom Feast","Footfall Crater","Foothill Guide","Footlight Fiend","Footsteps of the Goryo","For Each of You, a Gift","Foratog","Forbid","Forbidden Alchemy","Forbidden Crypt","Forbidden Friendship","Forbidden Lore","Forbidden Orchard","Forbidden Ritual","Forbidding Spirit","Forbidding Watchtower","Force Away","Force Bubble","Force Spike","Force Void","Force of Despair","Force of Nature","Force of Negation","Force of Rage","Force of Savagery","Force of Vigor","Force of Virtue","Force of Will","Forced Adaptation","Forced Fruition","Forced Landing","Forced March","Forced Retreat","Forced Worship","Forcefield","Forcemage Advocate","Forebear\'s Blade","Foreboding Fruit","Foreboding Ruins","Forerunner of Slaughter","Forerunner of the Coalition","Forerunner of the Empire","Forerunner of the Heralds","Forerunner of the Legion","Foresee","Foreshadow","Foresight","Forest","Forest Bear","Forethought Amulet","Forever Young","Forfend","Forge Armor","Forge Devil","Forge of Heroes","Forgeborn Oreads","Forgestoker Dragon","Forget","Forgotten Ancient","Forgotten Cave","Forgotten Creation","Forgotten Harvest","Forgotten Lore","Forgotten Sentinel","Foriysian Brigade","Foriysian Interceptor","Foriysian Totem","Fork","Fork in the Road","Forked Bolt","Forked Lightning","Forked-Branch Garami","Forlorn Pseudamma","Form of the Dinosaur","Form of the Dragon","Form of the Mulldrifter","Form of the Squirrel","Formation","Formless Nurturing","Forsake the Worldly","Forsaken City","Forsaken Drifters","Forsaken Monument","Forsaken Sanctuary","Forsaken Wastes","Fortified Area","Fortified Rampart","Fortified Village","Fortify","Fortifying Provisions","Fortitude","Fortress Crab","Fortress Cyclops","Fortuitous Find","Fortunate Few","Fortune Thief","Fortune\'s Favor","Fossil Find","Foster","Foul Emissary","Foul Familiar","Foul Imp","Foul Orchard","Foul Presence","Foul Renewal","Foul Spirit","Foul-Tongue Invocation","Foul-Tongue Shriek","Foulmire Knight // Profane Insight","Foundry Assembler","Foundry Champion","Foundry Hornet","Foundry Inspector","Foundry Screecher","Foundry Street Denizen","Foundry of the Consuls","Fountain Watch","Fountain of Cho","Fountain of Ichor","Fountain of Renewal","Fountain of Youth","Fourth Bridge Prowler","Fowl Play","Foxfire","Foxfire Oak","Fraction Jackson","Fractured Identity","Fractured Loyalty","Fractured Powerstone","Fracturing Gust","Fragmentize","Framed!","Frankenstein\'s Monster","Frankie Peanuts","Frantic Inventory","Frantic Purification","Frantic Salvage","Frantic Search","Fraternal Exaltation","Fraying Omnipotence","Fraying Sanity","Frazzle","Frazzled Editor","Free-Range Chicken","Free-for-All","Freed from the Real","Freejam Regent","Freewind Equenaut","Freewind Falcon","Frenemy of the Guildpact","Frenetic Efreet","Frenetic Efreet Avatar","Frenetic Ogre","Frenetic Raptor","Frenetic Sliver","Frenzied Arynx","Frenzied Fugue","Frenzied Goblin","Frenzied Rage","Frenzied Raptor","Frenzied Tilling","Frenzy Sliver","Fresh Meat","Fresh Volunteers","Fresh-Faced Recruit","Fretwork Colony","Freyalise Supplicant","Freyalise\'s Charm","Freyalise\'s Radiance","Freyalise\'s Winds","Freyalise, Llanowar\'s Fury","Friendly Fire","Frightcrawler","Frightful Delusion","Frightshroud Courier","Frilled Deathspitter","Frilled Mystic","Frilled Oculus","Frilled Sandwalla","Frilled Sea Serpent","Frillscare Mentor","Frog Tongue","Frogify","Frogkin Kidnapper","Frogmite","Frogtosser Banneret","From Beyond","From Under the Floorboards","From the Ashes","Frondland Felidar","Frontier Bivouac","Frontier Explorer","Frontier Guide","Frontier Mastodon","Frontier Siege","Frontier Warmonger","Frontline Devastator","Frontline Medic","Frontline Rebel","Frontline Sage","Frontline Strategist","Frost Breath","Frost Giant","Frost Lynx","Frost Marsh","Frost Ogre","Frost Raptor","Frost Titan","Frost Walker","Frostburn Weird","Frostling","Frostveil Ambush","Frostwalk Bastion","Frostwalla","Frostweb Spider","Frostwielder","Frostwind Invoker","Frozen Aether","Frozen Shade","Frozen Solid","Fruit of Tizerus","Fruit of the First Tree","Fruitcake Elemental","Fruition","Fry","Fuel for the Cause","Fugitive Druid","Fugitive Wizard","Fugue","Fulgent Distraction","Full Flowering","Full Moon\'s Rise","Fully Grown","Fulminator Mage","Fumarole","Fumble","Fume Spitter","Fumigate","Fumiko the Lowblood","Funeral Charm","Funeral March","Funeral Pyre","Funeral Rites","Fungal Behemoth","Fungal Bloom","Fungal Infection","Fungal Plots","Fungal Reaches","Fungal Rebirth","Fungal Shambler","Fungal Sprouting","Fungus Elemental","Fungus Sliver","Fungusaur","Furious Assault","Furious Reprisal","Furious Resistance","Furious Rise","Furnace Brood","Furnace Celebration","Furnace Dragon","Furnace Layer","Furnace Scamp","Furnace Spirit","Furnace Whelp","Furnace of Rath","Furor of the Bitten","Furtive Homunculus","Fury Charm","Fury Sliver","Fury Storm","Fury of the Horde","Furyblade Vampire","Furyborn Hellkite","Furystoke Giant","Fusion Elemental","Future Sight","Fylamarid","Fylgja","Fyndhorn Bow","Fyndhorn Brownie","Fyndhorn Druid","Fyndhorn Elder","Fyndhorn Elves","Fyndhorn Pollen","GO TO JAIL","Gabriel Angelfire","Gaddock Teeg","Gadrak, the Crown-Scourge","Gadwick, the Wizened","Gaea\'s Anthem","Gaea\'s Avenger","Gaea\'s Balance","Gaea\'s Blessing","Gaea\'s Bounty","Gaea\'s Cradle","Gaea\'s Embrace","Gaea\'s Herald","Gaea\'s Liege","Gaea\'s Might","Gaea\'s Protector","Gaea\'s Revenge","Gaea\'s Skyfolk","Gaea\'s Touch","Gahiji, Honored One","Gainsay","Gale Force","Gale Swooper","Galecaster Colossus","Galepowder Mage","Galerider Sliver","Galestrike","Galina\'s Knight","Gallant Cavalry","Gallantry","Gallia of the Endless Dance","Galloping Lizrog","Gallowbraid","Gallows Warden","Gallows at Willow Hill","Galvanic Alchemist","Galvanic Arc","Galvanic Blast","Galvanic Bombardment","Galvanic Juggernaut","Galvanic Key","Galvanoth","Gamble","Game Plan","Game Preserve","Game Trail","Game of Chaos","Game-Trail Changeling","Gamekeeper","Gang Up","Gang of Devils","Gang of Elk","Gangrenous Goliath","Gangrenous Zombies","Garbage Elemental","Garbage Fire","Garenbrig Carver // Shield\'s Might","Garenbrig Paladin","Garenbrig Squire","Gargantuan Gorilla","Gargos, Vicious Watcher","Gargoyle Castle","Gargoyle Sentinel","Garna, the Bloodflame","Garrison Cat","Garrison Griffin","Garrison Sergeant","Garruk Relentless // Garruk, the Veil-Cursed","Garruk Wildspeaker","Garruk the Slayer","Garruk\'s Companion","Garruk\'s Gorehorn","Garruk\'s Harbinger","Garruk\'s Horde","Garruk\'s Packleader","Garruk\'s Uprising","Garruk\'s Warsteed","Garruk, Apex Predator","Garruk, Caller of Beasts","Garruk, Cursed Huntsman","Garruk, Primal Hunter","Garruk, Savage Herald","Garruk, Unleashed","Garrulous Sycophant","Garza Zol, Plague Queen","Garza\'s Assassin","Gaseous Form","Gate Colossus","Gate Hound","Gate Smasher","Gate to Phyrexia","Gate to the Aether","Gate to the Afterlife","Gatebreaker Ram","Gatecreeper Vine","Gatekeeper Gargoyle","Gatekeeper of Malakir","Gates Ablaze","Gateway Plaza","Gateway Shade","Gateway Sneak","Gathan Raiders","Gather Courage","Gather Specimens","Gather the Pack","Gather the Townsfolk","Gatherer of Graces","Gatstaf Arsonists // Gatstaf Ravagers","Gatstaf Shepherd // Gatstaf Howler","Gauntlet of Might","Gauntlet of Power","Gauntlets of Chaos","Gauntlets of Light","Gavi, Nest Warden","Gavony","Gavony Ironwright","Gavony Township","Gavony Unhallowed","Gaze of Adamaro","Gaze of Granite","Gaze of Justice","Gaze of Pain","Gaze of the Gorgon","Gearseeker Serpent","Gearshift Ace","Gearsmith Guardian","Gearsmith Prodigy","Geier Reach Bandit // Vildin-Pack Alpha","Geier Reach Sanitarium","Geist Snatch","Geist Trappers","Geist of Saint Traft","Geist of the Archives","Geist of the Lonely Vigil","Geist of the Moors","Geist-Fueled Scarecrow","Geist-Honored Monk","Geistblast","Geistcatcher\'s Rig","Geistflame","Gelatinous Genesis","Gelectrode","Gelid Shackles","Gem Bazaar","Gem of Becoming","Gemhide Sliver","Gemini Engine","Gempalm Avenger","Gempalm Incinerator","Gempalm Polluter","Gempalm Sorcerer","Gempalm Strider","Gemrazer","Gemstone Array","Gemstone Caverns","Gemstone Mine","General Jarkeld","General Kudro of Drannith","General Tazri","General\'s Enforcer","General\'s Kabuto","General\'s Regalia","Generated Horizons","Generator Servant","Generous Gift","Generous Patron","Generous Stray","Genesis","Genesis Chamber","Genesis Hydra","Genesis Storm","Genesis Ultimatum","Genesis Wave","Genetic Recombinator","Genju of the Cedars","Genju of the Falls","Genju of the Fens","Genju of the Fields","Genju of the Realm","Genju of the Spires","Geode Golem","Geode Rager","Geomancer\'s Gambit","Geometric Weird","Geosurge","Geothermal Crevice","Geralf\'s Masterpiece","Geralf\'s Messenger","Geralf\'s Mindcrusher","Gerrard","Gerrard Capashen","Gerrard\'s Battle Cry","Gerrard\'s Command","Gerrard\'s Irregulars","Gerrard\'s Verdict","Gerrard\'s Wisdom","Gerrard, Weatherlight Hero","Gerrymandering","Get a Life","Get the Point","Geth\'s Grimoire","Geth\'s Verdict","Geth, Lord of the Vault","Geyser Glider","Geyserfield Stalker","Ghalma\'s Warden","Ghalta, Primal Hunger","Ghastbark Twins","Ghastlord of Fugue","Ghastly Conscription","Ghastly Demise","Ghastly Discovery","Ghastly Gloomhunter","Ghastly Remains","Ghave, Guru of Spores","Ghazbán Ogre","Ghazbán Ogress","Ghirapur Aether Grid","Ghirapur Gearcrafter","Ghirapur Guide","Ghirapur Orrery","Ghirapur Osprey","Ghired\'s Belligerence","Ghired, Conclave Exile","Ghitu Chronicler","Ghitu Encampment","Ghitu Fire","Ghitu Fire-Eater","Ghitu Firebreathing","Ghitu Journeymage","Ghitu Lavarunner","Ghitu Slinger","Ghitu War Cry","Ghor-Clan Bloodscale","Ghor-Clan Rampager","Ghor-Clan Savage","Ghor-Clan Wrecker","Ghost Council of Orzhova","Ghost Hounds","Ghost Quarter","Ghost Ship","Ghost Tactician","Ghost Town","Ghost Warden","Ghost-Lit Nourisher","Ghost-Lit Raider","Ghost-Lit Redeemer","Ghost-Lit Stalker","Ghost-Lit Warder","Ghostblade Eidolon","Ghostfire","Ghostfire Blade","Ghostflame Sliver","Ghostform","Ghosthelm Courier","Ghostly Changeling","Ghostly Flame","Ghostly Flicker","Ghostly Pilferer","Ghostly Possession","Ghostly Prison","Ghostly Sentinel","Ghostly Touch","Ghostly Visit","Ghostly Wings","Ghosts of the Damned","Ghosts of the Innocent","Ghostway","Ghoul\'s Feast","Ghoulcaller Gisa","Ghoulcaller\'s Accomplice","Ghoulcaller\'s Bell","Ghoulcaller\'s Chant","Ghoulflesh","Ghoulraiser","Ghoulsteed","Ghoultree","Giant Adephage","Giant Albatross","Giant Ambush Beetle","Giant Badger","Giant Caterpillar","Giant Cockroach","Giant Crab","Giant Dustwasp","Giant Fan","Giant Growth","Giant Harbinger","Giant Killer // Chop Down","Giant Mantis","Giant Octopus","Giant Opportunity","Giant Oyster","Giant Scorpion","Giant Shark","Giant Slug","Giant Solifuge","Giant Spectacle","Giant Spider","Giant Strength","Giant Tortoise","Giant Trap Door Spider","Giant Turtle","Giant Warthog","Giant\'s Ire","Giant\'s Skewer","Giantbaiting","Gibbering Descent","Gibbering Fiend","Gibbering Hyenas","Gibbering Kami","Gideon Blackblade","Gideon Jura","Gideon of the Trials","Gideon\'s Avenger","Gideon\'s Battle Cry","Gideon\'s Company","Gideon\'s Defeat","Gideon\'s Intervention","Gideon\'s Lawkeeper","Gideon\'s Phalanx","Gideon\'s Reproach","Gideon\'s Resolve","Gideon\'s Sacrifice","Gideon\'s Triumph","Gideon, Ally of Zendikar","Gideon, Champion of Justice","Gideon, Martial Paragon","Gideon, the Oathsworn","Gift Horse","Gift of Doom","Gift of Estates","Gift of Granite","Gift of Growth","Gift of Immortality","Gift of Orzhova","Gift of Paradise","Gift of Strength","Gift of Tusks","Gift of the Deity","Gift of the Gargantuan","Gift of the Woods","Gifted Aetherborn","Gifts Given","Gifts Ungiven","Gigadrowse","Gigantiform","Gigantomancer","Gigantoplasm","Gigantosaurus","Gigapede","Gild","Gilded Cerodon","Gilded Drake","Gilded Goose","Gilded Light","Gilded Lotus","Gilded Sentinel","Gilder Bairn","Gilt-Leaf Ambush","Gilt-Leaf Archdruid","Gilt-Leaf Palace","Gilt-Leaf Seer","Gilt-Leaf Winnower","Giltgrove Stalker","Giltspire Avenger","Gimme Five","Gingerbread Cabin","Gingerbrute","Gird for Battle","Gisa and Geralf","Gisa\'s Bidding","Gisela, Blade of Goldnight","Gisela, the Broken Blade","Gishath, Sun\'s Avatar","Gitaxian Probe","Give // Take","Give No Ground","Giver of Runes","Gix","Glacial Chasm","Glacial Crasher","Glacial Crevasses","Glacial Fortress","Glacial Grasp","Glacial Plating","Glacial Ray","Glacial Revelation","Glacial Stalker","Glacial Wall","Glaciers","Glade Gnarr","Glade Watcher","Gladecover Scout","Gladehart Cavalry","Glademuse","Glaive of the Guildpact","Glamer Spinners","Glamerdye","Glare of Heresy","Glare of Subdual","Glarecaster","Glarewielder","Glaring Aegis","Glaring Spotlight","Glass Asp","Glass Casket","Glass Golem","Glass of the Guildpact","Glassblower\'s Puzzleknot","Glassdust Hulk","Glasses of Urza","Glasspool Mimic // Glasspool Shore","Glaze Fiend","Gleam of Authority","Gleam of Battle","Gleam of Resistance","Gleaming Barrier","Gleaming Overseer","Gleancrawler","Gleeful Sabotage","Gleemax","Gleemox","Glen Elendra","Glen Elendra Archmage","Glen Elendra Liege","Glen Elendra Pranksters","Glenn, the Voice of Calm","Gliding Licid","Glimmer of Genius","Glimmerbell","Glimmerdust Nap","Glimmering Angel","Glimmerpoint Stag","Glimmerpost","Glimmervoid","Glimmervoid Basin","Glimpse of Freedom","Glimpse of Nature","Glimpse the Future","Glimpse the Sun God","Glimpse the Unthinkable","Glint","Glint Hawk","Glint Hawk Idol","Glint-Eye Nephilim","Glint-Horn Buccaneer","Glint-Nest Crane","Glint-Sleeve Artisan","Glint-Sleeve Siphoner","Glintwing Invoker","Glissa Sunseeker","Glissa\'s Courier","Glissa\'s Scorn","Glissa, the Traitor","Glistener Elf","Glistening Oil","Glitterfang","Glittering Lion","Glittering Lynx","Glittering Wish","Global Ruin","Gloom","Gloom Pangolin","Gloom Sower","Gloom Surgeon","Gloomdrifter","Gloomhunter","Gloomlance","Gloomwidow","Gloomwidow\'s Feast","Glorifier of Dusk","Glorious Anthem","Glorious Charge","Glorious End","Glory","Glory Bearers","Glory Seeker","Glory of Warfare","Glory-Bound Initiate","Glorybringer","Gloryscale Viashino","Glowering Rogon","Glowing Anemone","Glowrider","Glowspore Shaman","Glowstone Recluse","Gluetius Maximus","Gluttonous Cyclops","Gluttonous Slime","Gluttonous Slug","Gluttonous Troll","Gluttonous Zombie","Glyph Keeper","Glyph of Delusion","Glyph of Destruction","Glyph of Doom","Glyph of Life","Glyph of Reincarnation","Gnarlback Rhino","Gnarled Effigy","Gnarled Mass","Gnarled Sage","Gnarled Scarhide","Gnarlid Colony","Gnarlid Pack","Gnarlroot Trapper","Gnarlwood Dryad","Gnat Alley Creeper","Gnat Miser","Gnathosaur","Gnaw to the Bone","Gnawing Zombie","Gnome-Made Engine","Gnomeball Machine","Go for Blood","Go for the Throat","Goatnap","Goatnapper","Gobbling Ooze","Gobhobbler Rats","Goblin Archaeologist","Goblin Arsonist","Goblin Artillery","Goblin Artisans","Goblin Assailant","Goblin Assassin","Goblin Assault","Goblin Assault Team","Goblin Balloon Brigade","Goblin Bangchuckers","Goblin Banneret","Goblin Barrage","Goblin Battle Jester","Goblin Berserker","Goblin Bird-Grabber","Goblin Bomb","Goblin Bombardment","Goblin Bookie","Goblin Boom Keg","Goblin Bowling Team","Goblin Brawler","Goblin Brigand","Goblin Bruiser","Goblin Bully","Goblin Burrows","Goblin Bushwhacker","Goblin Cadets","Goblin Cannon","Goblin Cavaliers","Goblin Caves","Goblin Chainwhirler","Goblin Champion","Goblin Charbelcher","Goblin Chariot","Goblin Chieftain","Goblin Chirurgeon","Goblin Clearcutter","Goblin Cohort","Goblin Commando","Goblin Cratermaker","Goblin Dark-Dwellers","Goblin Deathraiders","Goblin Digging Team","Goblin Diplomats","Goblin Dirigible","Goblin Dynamo","Goblin Electromancer","Goblin Elite Infantry","Goblin Engineer","Goblin Festival","Goblin Fire Fiend","Goblin Firebug","Goblin Fireslinger","Goblin Firestarter","Goblin Flectomancer","Goblin Flotilla","Goblin Freerunner","Goblin Furrier","Goblin Game","Goblin Gang Leader","Goblin Gardener","Goblin Gathering","Goblin Gaveleer","Goblin General","Goblin Glider","Goblin Glory Chaser","Goblin Goliath","Goblin Goon","Goblin Grappler","Goblin Grenade","Goblin Grenadiers","Goblin Guide","Goblin Haberdasher","Goblin Heelcutter","Goblin Hero","Goblin Instigator","Goblin Kaboomist","Goblin King","Goblin Kites","Goblin Lackey","Goblin Legionnaire","Goblin Locksmith","Goblin Lookout","Goblin Lore","Goblin Lyre","Goblin Machinist","Goblin Marshal","Goblin Masons","Goblin Matron","Goblin Medics","Goblin Mime","Goblin Motivator","Goblin Mountaineer","Goblin Mutant","Goblin Offensive","Goblin Oriflamme","Goblin Outlander","Goblin Patrol","Goblin Piker","Goblin Piledriver","Goblin Polka Band","Goblin Psychopath","Goblin Pyromancer","Goblin Rabblemaster","Goblin Racketeer","Goblin Raider","Goblin Rally","Goblin Razerunners","Goblin Recruiter","Goblin Replica","Goblin Rimerunner","Goblin Ringleader","Goblin Rock Sled","Goblin Roughrider","Goblin Ruinblaster","Goblin S.W.A.T. Team","Goblin Sappers","Goblin Scouts","Goblin Secret Agent","Goblin Settler","Goblin Sharpshooter","Goblin Shortcutter","Goblin Shrine","Goblin Ski Patrol","Goblin Sky Raider","Goblin Skycutter","Goblin Sledder","Goblin Sleigh Ride","Goblin Slingshot","Goblin Smuggler","Goblin Snowman","Goblin Soothsayer","Goblin Spelunkers","Goblin Spy","Goblin Spymaster","Goblin Striker","Goblin Swine-Rider","Goblin Taskmaster","Goblin Test Pilot","Goblin Tinkerer","Goblin Trailblazer","Goblin Trashmaster","Goblin Trenches","Goblin Tunneler","Goblin Turncoat","Goblin Tutor","Goblin Vandal","Goblin War Buggy","Goblin War Cry","Goblin War Drums","Goblin War Paint","Goblin War Party","Goblin War Strike","Goblin War Wagon","Goblin Warchief","Goblin Warchief Avatar","Goblin Wardriver","Goblin Warrens","Goblin Welder","Goblin Wizard","Goblin Wizardry","Goblins of the Flarg","Goblinslide","God-Eternal Bontu","God-Eternal Kefnet","God-Eternal Oketra","God-Eternal Rhonas","God-Favored General","God-Pharaoh\'s Faithful","God-Pharaoh\'s Gift","God-Pharaoh\'s Statue","Godhead of Awe","Godhunter Octopus","Godless Shrine","Godo\'s Irregulars","Godo, Bandit Warlord","Gods Willing","Gods\' Eye, Gate to the Reikai","Godsend","Godsire","Godtoucher","Godtracker of Jund","Goham Djinn","Gold Mine","Gold Myr","Gold-Forged Sentinel","Golden Bear","Golden Demise","Golden Egg","Golden Guardian // Gold-Forge Garrison","Golden Hind","Golden Urn","Golden Wish","Goldenglow Moth","Goldenhide Ox","Goldmane Griffin","Goldmeadow","Goldmeadow Dodger","Goldmeadow Harrier","Goldmeadow Lookout","Goldmeadow Stalwart","Goldnight Castigator","Goldnight Commander","Goldnight Redeemer","Golem Artisan","Golem Foundry","Golem\'s Heart","Golem-Skin Gauntlets","Golgari Brownscale","Golgari Charm","Golgari Cluestone","Golgari Death Swarm","Golgari Decoy","Golgari Findbroker","Golgari Germination","Golgari Grave-Troll","Golgari Guildgate","Golgari Guildmage","Golgari Keyrune","Golgari Locket","Golgari Longlegs","Golgari Raiders","Golgari Rot Farm","Golgari Rotwurm","Golgari Signet","Golgari Thug","Golgothian Sylex","Goliath Beetle","Goliath Sphinx","Goliath Spider","Golos, Tireless Pilgrim","Goma Fada Vanguard","Gomazoa","Gone Missing","Gonti\'s Aether Heart","Gonti\'s Machinations","Gonti, Lord of Luxury","Good-Fortune Unicorn","Gore Swine","Gore Vassal","Gore-House Chainwalker","Goreclaw, Terror of Qal Sisma","Gorehorn Minotaurs","Goremand","Goretusk Firebeast","Gorger Wurm","Gorging Vulture","Gorgon Flail","Gorgon Recluse","Gorgon\'s Head","Gorilla Berserkers","Gorilla Chieftain","Gorilla Pack","Gorilla Shaman","Gorilla Tactics","Gorilla Titan","Gorilla War Cry","Gorilla Warrior","Goring Ceratops","Gorm the Great","Goryo\'s Vengeance","Gossamer Chains","Gossamer Phantasm","Gosta Dirk","Govern the Guildless","Grab the Reins","Graceblade Artisan","Graceful Adept","Graceful Antelope","Graceful Cat","Graceful Reprieve","Graf Harvest","Graf Mole","Graf Rats","Grafdigger\'s Cage","Grafted Exoskeleton","Grafted Skullcap","Grafted Wargear","Grakmaw, Skyclave Ravager","Grand Abolisher","Grand Arbiter Augustin IV","Grand Architect","Grand Coliseum","Grand Melee","Grand Ossuary","Grand Warlord Radha","Grandmother Sengir","Granger Guildmage","Granite Gargoyle","Granite Grip","Granite Shard","Granitic Titan","Granny\'s Payback","Granulate","Grapeshot","Grapeshot Catapult","Graphic Violence","Grapple with the Past","Grappler Spider","Grappling Hook","Grappling Sundew","Grasp of Darkness","Grasp of Fate","Grasp of Phantoms","Grasp of the Hieromancer","Grasping Current","Grasping Dunes","Grasping Giant","Grasping Scoundrel","Grasping Thrull","Grassland Crusader","Grasslands","Grateful Apparition","Gratuitous Violence","Grave Betrayal","Grave Birthing","Grave Bramble","Grave Consequences","Grave Defiler","Grave Exchange","Grave Pact","Grave Peril","Grave Robbers","Grave Scrabbler","Grave Servitude","Grave Sifter","Grave Strength","Grave Titan","Grave Upheaval","Grave-Shell Scarab","Gravebane Zombie","Gravebind","Graveblade Marauder","Graveborn Muse","Gravebreaker Lamia","Gravecrawler","Gravedigger","Gravegouger","Gravel Slinger","Gravel-Hide Goblin","Gravelgill Axeshark","Gravelgill Duo","Graven Abomination","Graven Cairns","Graven Dominator","Gravepurge","Graverobber Spider","Graveshifter","Gravespawn Sovereign","Gravestorm","Gravetiller Wurm","Gravewaker","Graveyard Busybody","Graveyard Dig","Graveyard Marshal","Graveyard Shovel","Gravitational Shift","Gravitic Punch","Gravity Negator","Gravity Sphere","Gravity Well","Graxiplon","Gray Merchant of Asphodel","Gray Ogre","Graypelt Hunter","Graypelt Refuge","Grayscaled Gharial","Grazing Gladehart","Grazing Kelpie","Grazing Whiptail","Great Defender","Great Furnace","Great Hart","Great Oak Guardian","Great Sable Stag","Great Teacher\'s Decree","Great Wall","Great Whale","Great-Horn Krushok","Greatbow Doyen","Greater Auramancy","Greater Basilisk","Greater Forgeling","Greater Gargadon","Greater Good","Greater Harvester","Greater Morphling","Greater Mossdog","Greater Realm of Preservation","Greater Sandwurm","Greater Stone Spirit","Greater Werewolf","Greatsword","Greed","Greel\'s Caress","Greel, Mind Raker","Green Mana Battery","Green Scarab","Green Sun\'s Zenith","Green Ward","Greenbelt Rampager","Greener Pastures","Greenhilt Trainee","Greenseeker","Greenside Watcher","Greenwarden of Murasa","Greenweaver Druid","Greenwheel Liberator","Greenwood Sentinel","Gremlin Infestation","Gremlin Mine","Grenzo\'s Cutthroat","Grenzo\'s Rebuttal","Grenzo\'s Ruffians","Grenzo, Dungeon Warden","Grenzo, Havoc Raiser","Greven il-Vec","Greven, Predator Captain","Grid Monitor","Gridlock","Grief Tyrant","Griffin Aerie","Griffin Canyon","Griffin Dreamfinder","Griffin Guide","Griffin Protector","Griffin Rider","Griffin Sentinel","Grifter\'s Blade","Grim Affliction","Grim Backwoods","Grim Captain\'s Call","Grim Contest","Grim Discovery","Grim Feast","Grim Flayer","Grim Flowering","Grim Guardian","Grim Haruspex","Grim Harvest","Grim Initiate","Grim Lavamancer","Grim Monolith","Grim Physician","Grim Poppet","Grim Reminder","Grim Return","Grim Roustabout","Grim Strider","Grim Tutor","Grimclaw Bats","Grimdancer","Grimgrin, Corpse-Born","Grimlock, Dinobot Leader // Grimlock, Ferocious King","Grimoire Thief","Grimoire of the Dead","Grind // Dust","Grindclock","Grinding Station","Grindstone","Grinning Demon","Grinning Demon Avatar","Grinning Ignus","Grinning Totem","Grip of Amnesia","Grip of Chaos","Grip of Desolation","Grip of Phyresis","Grip of the Roil","Griptide","Griselbrand","Grisly Salvage","Grisly Spectacle","Grisly Survivor","Grisly Transformation","Grismold, the Dreadsower","Gristle Grinner","Gristleback","Grixis","Grixis Battlemage","Grixis Charm","Grixis Grimblade","Grixis Illusionist","Grixis Panorama","Grixis Slavedriver","Grixis Sojourners","Grizzled Angler // Grisly Anglerfish","Grizzled Leotau","Grizzled Outcasts // Krallenhorde Wantons","Grizzled Wolverine","Grizzly Bears","Grizzly Fate","Groffskithur","Grollub","Grotag Bug-Catcher","Grotag Night-Runner","Grotag Siege-Runner","Grotag Thrasher","Grotesque Demise","Grotesque Hybrid","Grotesque Mutation","Grothama, All-Devouring","Ground Assault","Ground Pounder","Ground Rift","Ground Seal","Groundbreaker","Grounded","Groundling Pouncer","Groundshaker Sliver","Groundskeeper","Groundswell","Grove Rumbler","Grove of the Burnwillows","Grove of the Dreampods","Grove of the Guardian","Grovetender Druids","Grow from the Ashes","Growing Ranks","Growing Rites of Itlimoc // Itlimoc, Cradle of the Sun","Grown from the Stump","Growth Charm","Growth Cycle","Growth Spasm","Growth Spiral","Growth Spurt","Growth-Chamber Guardian","Grozoth","Grudge Keeper","Gruesome Deformity","Gruesome Discovery","Gruesome Encore","Gruesome Fate","Gruesome Menagerie","Gruesome Scourger","Gruesome Slaughter","Grumgully, the Generous","Grunn, the Lonely King","Grusilda, Monster Masher","Gruul Beastmaster","Gruul Charm","Gruul Cluestone","Gruul Guildgate","Gruul Guildmage","Gruul Keyrune","Gruul Locket","Gruul Nodorog","Gruul Ragebeast","Gruul Scrapper","Gruul Signet","Gruul Spellbreaker","Gruul Turf","Gruul War Chant","Gruul War Plow","Gryff Vanguard","Gryff\'s Boon","Guan Yu\'s 1,000-Li March","Guan Yu, Sainted Warrior","Guard Dogs","Guard Duty","Guard Gomazoa","Guardian Angel","Guardian Automaton","Guardian Beast","Guardian Idol","Guardian Lions","Guardian Project","Guardian Seraph","Guardian Shield-Bearer","Guardian Zendikon","Guardian of Cloverdell","Guardian of Pilgrims","Guardian of Solitude","Guardian of Tazeem","Guardian of Vitu-Ghazi","Guardian of the Ages","Guardian of the Gateless","Guardian of the Great Conduit","Guardian of the Guildpact","Guardian\'s Magemark","Guardians of Akrasa","Guardians of Koilos","Guardians of Meletis","Guardians\' Pledge","Gudul Lurker","Guerrilla Tactics","Guest List","Guided Passage","Guided Strike","Guiding Spirit","Guild Feud","Guild Globe","Guild Summit","Guildmages\' Forum","Guildpact Informant","Guildscorn Ward","Guile","Guiltfeeder","Guilty Conscience","Guise of Fire","Gulf Squid","Guma","Gunk Slug","Gurmag Angler","Gurmag Drowner","Gurmag Swiftwing","Gurzigost","Gus","Gush","Gust Walker","Gust of Wind","Gust-Skimmer","Gustcloak Cavalier","Gustcloak Harrier","Gustcloak Runner","Gustcloak Savior","Gustcloak Sentinel","Gustcloak Skirmisher","Gustha\'s Scepter","Gustrider Exuberant","Gut Shot","Gutless Ghoul","Gutter Grime","Gutter Skulk","Gutterbones","Guttersnipe","Guttural Response","Gutwrencher Oni","Guul Draz Assassin","Guul Draz Mucklord","Guul Draz Overseer","Guul Draz Specter","Guul Draz Vampire","Gwafa Hazid, Profiteer","Gwendlyn Di Corci","Gwyllion Hedge-Mage","Gyre Engineer","Gyre Sage","Gyruda, Doom of Depths","Gyrus, Waker of Corpses","Haakon, Stromgald Scourge","Haakon, Stromgald Scourge Avatar","Haazda Exonerator","Haazda Marshal","Haazda Officer","Haazda Shield Mate","Haazda Snare Squad","Hackrobat","Hada Freeblade","Hada Spy Patrol","Hadana\'s Climb // Winged Temple of Orazca","Hag Hedge-Mage","Hagra Constrictor","Hagra Crocodile","Hagra Diabolist","Hagra Mauling // Hagra Broodpit","Hagra Sharpshooter","Hail Storm","Hail of Arrows","Hair-Strung Koto","Hakim, Loreweaver","Haktos the Unscarred","Halam Djinn","Halana, Kessig Ranger","Halberdier","Halcyon Glaze","Haldan, Avid Arcanist","Half-Kitten, Half-","Half-Orc, Half-","Half-Shark, Half-","Half-Squirrel, Half-","Halfdane","Halimar Depths","Halimar Excavator","Halimar Tidecaller","Halimar Wavewatch","Hall of Gemstone","Hall of Heliod\'s Generosity","Hall of Triumph","Hall of the Bandit Lord","Hallar, the Firefletcher","Hallow","Hallowed Burial","Hallowed Fountain","Hallowed Ground","Hallowed Healer","Hallowed Moonlight","Hallowed Priest","Hallowed Spiritkeeper","Halls of Mist","Halo Hunter","Halt Order","Hamlet Captain","Hamletback Goliath","Hammer Dropper","Hammer Helper","Hammer Jammer","Hammer Mage","Hammer of Bogardan","Hammer of Nazahn","Hammer of Purphoros","Hammer of Ruin","Hammerfest Boomtacular","Hammerfist Giant","Hammerhand","Hammerhead Shark","Hammerheim","Hammerheim Deadeye","Hampering Snare","Hana Kami","Hanabi Blast","Hand of Cruelty","Hand of Death","Hand of Emrakul","Hand of Honor","Hand of Justice","Hand of Silumgar","Hand of the Praetors","Hand to Hand","Handcuffs","Hands of Binding","Handy Dandy Clone Machine","Hangarback Walker","Hanged Executioner","Hangman","Hankyu","Hanna","Hanna\'s Custody","Hanna, Ship\'s Navigator","Hanweir Battlements","Hanweir Garrison","Hanweir Lancer","Hanweir Militia Captain // Westvale Cult Leader","Hanweir Watchkeep // Bane of Hanweir","Hanweir, the Writhing Township","Hapato\'s Might","Hapatra\'s Mark","Hapatra, Vizier of Poisons","Haphazard Bombardment","Hapless Researcher","Happily Ever After","Harabaz Druid","Harbinger of Night","Harbinger of Spring","Harbinger of the Hunt","Harbinger of the Tides","Harbor Bandit","Harbor Guardian","Harbor Serpent","Hard Cover","Hard Hat Area","Hardened Berserker","Hardened Scales","Hardened-Scale Armor","Hardy Veteran","Harm\'s Way","Harmattan Efreet","Harmless Assault","Harmless Offering","Harmonic Convergence","Harmonic Sliver","Harmonious Archon","Harmonize","Harmony of Nature","Harness by Force","Harness the Storm","Harnessed Lightning","Harpoon Sniper","Harrier Griffin","Harrier Naga","Harrow","Harrowing Journey","Harsh Deceiver","Harsh Judgment","Harsh Justice","Harsh Mentor","Harsh Mercy","Harsh Scrutiny","Harsh Sustenance","Haru-Onna","Harvest Gwyllion","Harvest Hand // Scrounged Scythe","Harvest Mage","Harvest Pyre","Harvest Season","Harvest Wurm","Harvester Druid","Harvester Troll","Harvester of Souls","Harvestguard Alseids","Hashep Oasis","Hasran Ogress","Hatchery Spider","Hatchet Bully","Hatching Plans","Hate Mirage","Hate Weaver","Hateflayer","Hateful Eidolon","Hatred","Haunted Angel","Haunted Cadaver","Haunted Cloak","Haunted Crossroads","Haunted Dead","Haunted Fengraf","Haunted Guardian","Haunted Plate Mail","Haunter of Nightveil","Haunting Apparition","Haunting Echoes","Haunting Hymn","Haunting Misery","Haunting Wind","Haven of the Spirit Dragon","Havengul Lich","Havengul Runebinder","Havengul Skaab","Havengul Vampire","Havenwood Battleground","Havenwood Wurm","Havoc","Havoc Demon","Havoc Devils","Havoc Festival","Havoc Jester","Havoc Sower","Hawkeater Moth","Hazardous Conditions","Hazduhr the Abbot","Haze Frog","Haze of Pollen","Haze of Rage","Hazerider Drake","Hazezon Tamar","Hazmat Suit (Used)","Hazoret the Fervent","Hazoret\'s Favor","Hazoret\'s Monument","Hazoret\'s Undying Fury","Hazy Homunculus","He Who Hungers","Head Banger","Head Games","Head to Head","Headhunter","Headless Horseman","Headless Skaab","Headless Specter","Headlong Rush","Headstone","Headstrong Brute","Headwater Sentries","Heal","Heal the Scars","Healer of the Glade","Healer of the Pride","Healer\'s Hawk","Healer\'s Headdress","Healing Grace","Healing Hands","Healing Leaves","Healing Salve","Heap Doll","Heart Sliver","Heart Warden","Heart Wolf","Heart of Bogardan","Heart of Kiran","Heart of Light","Heart of Ramos","Heart of Yavimaya","Heart-Piercer Bow","Heart-Piercer Manticore","Heartbeat of Spring","Heartfire","Heartfire Immolator","Hearth Charm","Hearth Kami","Hearthcage Giant","Hearthfire Hobgoblin","Heartlash Cinder","Heartless Act","Heartless Hidetsugu","Heartless Pillage","Heartless Summoning","Heartmender","Heartseeker","Heartstabber Mosquito","Heartstone","Heartwarming Redemption","Heartwood Dryad","Heartwood Giant","Heartwood Shard","Heartwood Storyteller","Heartwood Storyteller Avatar","Heartwood Treefolk","Heat Ray","Heat Shimmer","Heat Stroke","Heat Wave","Heat of Battle","Heaven // Earth","Heaven\'s Gate","Heavenly Blademaster","Heavenly Qilin","Heavy Arbalest","Heavy Ballista","Heavy Fog","Heavy Infantry","Heavy Mattock","Hecatomb","Heckling Fiends","Hedge Troll","Hedonist\'s Trove","Hedron Alignment","Hedron Archive","Hedron Blade","Hedron Crab","Hedron Crawler","Hedron Fields of Agadeem","Hedron Matrix","Hedron Rover","Hedron Scrabbler","Hedron-Field Purists","Heed the Mists","Heedless One","Heidar, Rimewind Master","Heightened Awareness","Heightened Reflexes","Heir of Falkenrath // Heir to the Night","Heir of the Wilds","Heirloom Blade","Heirs of Stromkirk","Hekma Sentinels","Helica Glider","Heliod\'s Emissary","Heliod\'s Intervention","Heliod\'s Pilgrim","Heliod\'s Punishment","Heliod, God of the Sun","Heliod, Sun-Crowned","Helionaut","Heliophial","Helium Squirter","Helix Pinnacle","Hell Swarm","Hell\'s Caretaker","Hell\'s Caretaker Avatar","Hell\'s Thunder","Hell-Bent Raider","Hellcarver Demon","Helldozer","Hellfire","Hellfire Mongrel","Hellhole Flailer","Hellhole Rats","Hellion Crucible","Hellion Eruption","Hellkite Charger","Hellkite Hatchling","Hellkite Igniter","Hellkite Overlord","Hellkite Punisher","Hellkite Tyrant","Hellkite Whelp","Hellraiser Goblin","Hellrider","Hellspark Elemental","Helm of Awakening","Helm of Chatzuk","Helm of Kaldra","Helm of Obedience","Helm of Possession","Helm of the Ghastlord","Helm of the Gods","Helm of the Host","Helvault","Hematite Golem","Hematite Talisman","Henchfiend of Ukor","Henge Guardian","Henge Walker","Henge of Ramos","Herald of Anafenza","Herald of Anguish","Herald of Dromoka","Herald of Faith","Herald of Kozilek","Herald of Leshrac","Herald of Secret Streams","Herald of Serra","Herald of Torment","Herald of War","Herald of the Dreadhorde","Herald of the Fair","Herald of the Forgotten","Herald of the Host","Herald of the Pantheon","Herald of the Sun","Herald\'s Horn","Heraldic Banner","Herbal Poultice","Herd Gnarr","Herdchaser Dragon","Heretic\'s Punishment","Heritage Druid","Hermetic Study","Hermit Druid","Hermit Druid Avatar","Hermit of the Natterknolls // Lone Wolf of the Natterknolls","Hero of Bladehold","Hero of Goma Fada","Hero of Iroas","Hero of Leina Tower","Hero of Oxid Ridge","Hero of Precinct One","Hero of the Games","Hero of the Nyxborn","Hero of the Pride","Hero of the Winds","Hero\'s Blade","Hero\'s Demise","Hero\'s Downfall","Hero\'s Resolve","Heroes Remembered","Heroes of the Revel","Heroes\' Bane","Heroes\' Podium","Heroes\' Reunion","Heroic Defiance","Heroic Intervention","Heroic Reinforcements","Heroism","Heron\'s Grace Champion","Hesitation","Hewed Stone Retainers","Hex","Hex Parasite","Hexdrinker","Hexplate Golem","Hibernation","Hibernation Sliver","Hibernation\'s End","Hickory Woodlot","Hidden Ancients","Hidden Dragonslayer","Hidden Gibbons","Hidden Guerrillas","Hidden Herbalists","Hidden Herd","Hidden Horror","Hidden Path","Hidden Predators","Hidden Retreat","Hidden Spider","Hidden Stag","Hidden Stockpile","Hidden Strings","Hide // Seek","Hideous End","Hideous Laughter","Hideous Visage","Hidetsugu\'s Second Rite","Hieroglyphic Illumination","Hieromancer\'s Cage","Hierophant\'s Chalice","High Alert","High Ground","High Market","High Priest of Penance","High Seas","High Sentinels of Arashin","High Tide","High Troller","Highborn Ghoul","Highborn Vampire","Highcliff Felidar","Highland Berserker","Highland Game","Highland Giant","Highland Lake","Highland Weald","Highspire Artisan","Highspire Infusion","Highspire Mantis","Hightide Hermit","Highway Robber","Higure, the Still Wind","Higure, the Still Wind Avatar","Hijack","Hikari, Twilight Guardian","Hill Giant","Hillcomber Giant","Hinder","Hindering Light","Hindering Touch","Hindervines","Hint of Insanity","Hinterland Drake","Hinterland Harbor","Hinterland Hermit // Hinterland Scourge","Hinterland Logger // Timber Shredder","Hipparion","Hired Blade","Hired Giant","Hired Heist","Hired Muscle // Scarmaker","Hired Poisoner","Hired Torturer","Hisoka\'s Defiance","Hisoka\'s Guard","Hisoka, Minamo Sensei","Hissing Iguanar","Hissing Miasma","Hissing Quagmire","Historian of Zhalfir","History of Benalia","Hit // Run","Hitchclaw Recluse","Hive Mind","Hive Stirrings","Hivestone","Hivis of the Scale","Hixus, Prison Warden","Hoar Shade","Hoard-Smelter Dragon","Hoarder\'s Greed","Hoarding Dragon","Hobble","Hobblefiend","Hobgoblin Dragoon","Hogaak, Arisen Necropolis","Hoisted Hireling","Hokori, Dust Drinker","Hold at Bay","Hold the Gates","Hold the Line","Hold the Perimeter","Holdout Settlement","Holistic Wisdom","Hollow Dogs","Hollow One","Hollow Specter","Hollow Trees","Hollow Warrior","Hollowborn Barghest","Hollowhead Sliver","Hollowhenge Beast","Hollowhenge Scavenger","Hollowhenge Spirit","Hollowsage","Holy Armor","Holy Day","Holy Justiciar","Holy Light","Holy Mantle","Holy Strength","Homarid","Homarid Explorer","Homarid Shaman","Homarid Spawning Bed","Homarid Warrior","Homeward Path","Homicidal Seclusion","Homing Lightning","Homing Sliver","Homura, Human Ascendant // Homura\'s Essence","Honden of Cleansing Fire","Honden of Infinite Rage","Honden of Life\'s Web","Honden of Night\'s Reach","Honden of Seeing Winds","Honed Khopesh","Honey Mammoth","Honor Guard","Honor of the Pure","Honor the Fallen","Honor the God-Pharaoh","Honor\'s Reward","Honor-Worn Shaku","Honorable Passage","Honorable Scout","Honored Crop-Captain","Honored Hierarch","Honored Hydra","Hooded Assassin","Hooded Blightfang","Hooded Brawler","Hooded Horror","Hooded Hydra","Hooded Kavu","Hoodwink","Hoof Skulkin","Hoofprints of the Stag","Hooting Mandrills","Hope Against Hope","Hope Charm","Hope Tender","Hope and Glory","Hope of Ghirapur","Hopeful Eidolon","Hopping Automaton","Horde Ambusher","Horde of Boggarts","Horde of Notions","Hordeling Outburst","Horizon Boughs","Horizon Canopy","Horizon Chimera","Horizon Drake","Horizon Scholar","Horizon Seed","Horizon Spellbomb","Horn of Deafening","Horn of Greed","Horn of Plenty","Horn of Ramos","Hornbash Mentor","Horncaller\'s Chant","Horned Cheetah","Horned Helm","Horned Kavu","Horned Sliver","Horned Troll","Horned Turtle","Hornet Cannon","Hornet Cobra","Hornet Harasser","Hornet Nest","Hornet Queen","Hornet Sting","Hornswoggle","Horobi\'s Whisper","Horobi, Death\'s Wail","Horrible Hordes","Horribly Awry","Horrifying Revelation","Horror of Horrors","Horror of the Broken Lands","Horror of the Dim","Horseshoe Crab","Hostage Taker","Hostile Desert","Hostile Minotaur","Hostile Realm","Hostility","Hot Fix","Hot Soup","Hot Springs","Hotheaded Giant","Hound of Griselbrand","Hound of the Farbogs","Hour of Devastation","Hour of Eternity","Hour of Glory","Hour of Need","Hour of Promise","Hour of Reckoning","Hour of Revelation","House Guildmage","Hover Barrier","Hoverguard Observer","Hoverguard Sweepers","Hovermyr","How to Keep an Izzet Mage Busy","Howl from Beyond","Howl of the Horde","Howl of the Night Pack","Howlgeist","Howling Banshee","Howling Fury","Howling Gale","Howling Giant","Howling Golem","Howling Mine","Howling Wolf","Howlpack Resurgence","Howlpack Wolf","Howltooth Hollow","Hua Tuo, Honored Physician","Huang Zhong, Shu General","Huatli\'s Raptor","Huatli\'s Snubhorn","Huatli\'s Spurring","Huatli, Dinosaur Knight","Huatli, Radiant Champion","Huatli, Warrior Poet","Huatli, the Sun\'s Heart","Hubris","Huddle Up","Hulking Cyclops","Hulking Devil","Hulking Goblin","Hulking Ogre","Hull Breach","Hum of the Radix","Human Frailty","Humble","Humble Budoka","Humble Defector","Humble Naturalist","Humble the Brute","Humbler of Mortals","Humility","Humming-","Humongulus","Hunding Gjornersen","Hundred-Handed One","Hundred-Talon Kami","Hundred-Talon Strike","Hundroog","Hunger of the Howlpack","Hunger of the Nim","Hungering Hydra","Hungering Yeti","Hungry Flames","Hungry Hungry Heifer","Hungry Lynx","Hungry Mist","Hungry Spriggan","Hunt Down","Hunt the Hunter","Hunt the Weak","Hunted Dragon","Hunted Ghoul","Hunted Horror","Hunted Lammasu","Hunted Nightmare","Hunted Phantasm","Hunted Troll","Hunted Witness","Hunted Wumpus","Hunter Sliver","Hunter of Eyeblights","Hunter\'s Ambush","Hunter\'s Edge","Hunter\'s Insight","Hunter\'s Prowess","Hunters\' Feast","Hunting Cheetah","Hunting Drake","Hunting Grounds","Hunting Kavu","Hunting Moa","Hunting Pack","Hunting Triad","Hunting Wilds","Huntmaster Liger","Huntmaster of the Fells // Ravager of the Fells","Hurkyl\'s Recall","Hurloon Minotaur","Hurloon Shaman","Hurloon Wrangler","Hurly-Burly","Hurr Jackal","Hurricane","Hush","Hushbringer","Hushwing Gryff","Hussar Patrol","Hyalopterous Lemure","Hydra Broodmaster","Hydra Omnivore","Hydra\'s Growth","Hydra\'s Impenetrable Hide","Hydradoodle","Hydroblast","Hydroform","Hydroid Krasis","Hydrolash","Hydromorph Guardian","Hydromorph Gull","Hydrosurge","Hyena Pack","Hyena Umbra","Hymn of Rebirth","Hymn of the Wilds","Hymn to Tourach","Hypergenesis","Hyperion Blacksmith","Hypersonic Dragon","Hypervolt Grasp","Hypnotic Cloud","Hypnotic Siren","Hypnotic Specter","Hypnotic Sprite // Mesmeric Glare","Hypnotic Swirly Disc","Hypnox","Hypochondria","Hypothesizzle","Hyrax Tower Scout","Hysterical Blindness","Hystrodon","Hythonia the Cruel","I Bask in Your Silent Awe","I Call on the Ancient Magics","I Delight in Your Convulsions","I Know All, I See All","I\'m Rubber, You\'re Glue","Ib Halfheart, Goblin Tactician","Icatian Crier","Icatian Infantry","Icatian Javelineers","Icatian Lieutenant","Icatian Moneychanger","Icatian Phalanx","Icatian Priest","Icatian Scout","Icatian Skirmishers","Icatian Store","Icatian Town","Ice Cage","Ice Cauldron","Ice Cave","Ice Floe","Ice Over","Ice Storm","Ice-Fang Coatl","Iceberg","Iceberg Cancrix","Icefall","Icefall Regent","Icefeather Aven","Icehide Golem","Icequake","Ichneumon Druid","Ichor Explosion","Ichor Rats","Ichor Slick","Ichor Wellspring","Ichorclaw Myr","Ichorid","Ichthyomorphosis","Icon of Ancestry","Icy Blast","Icy Manipulator","Icy Prison","Ideas Unbound","Identity Crisis","Identity Thief","Idle Thoughts","Idol of Endurance","Idol of Oblivion","Idyllic Grange","Idyllic Tutor","Ifh-Bíff Efreet","Ifnir Deadlands","Igneous Cur","Igneous Elemental","Igneous Golem","Igneous Pouncer","Ignite Disorder","Ignite Memories","Ignite the Beacon","Ignite the Cloneforge!","Ignite the Future","Ignition Team","Ignoble Soldier","Ignorant Bliss","Ihsan\'s Shade","Iizuka the Ruthless","Ikiral Outrider","Ikra Shidiqi, the Usurper","Ilharg, the Raze-Boar","Ill-Gotten Gains","Ill-Gotten Inheritance","Ill-Tempered Cyclops","Illicit Auction","Illness in the Ranks","Illuminate","Illuminated Folio","Illuminated Wings","Illumination","Illuna, Apex of Wishes","Illusion // Reality","Illusion of Choice","Illusionary Armor","Illusionary Forces","Illusionary Informant","Illusionary Mask","Illusionary Presence","Illusionary Servant","Illusionary Terrain","Illusionary Wall","Illusionist\'s Bracers","Illusionist\'s Gambit","Illusionist\'s Stratagem","Illusions of Grandeur","Illusory Ambusher","Illusory Angel","Illusory Demon","Illusory Gains","Illusory Wrappings","Ilysian Caryatid","Imagecrafter","Imaginary Friends","Imaginary Pet","Imaginary Threats","Imi Statue","Immaculate Magistrate","Immediate Action","Immersturm","Immerwolf","Imminent Doom","Immobilizer Eldrazi","Immobilizing Ink","Immolating Glare","Immolating Gyre","Immolating Souleater","Immolation","Immolation Shaman","Immortal Coil","Immortal Phoenix","Immortal Servitude","Imp\'s Mischief","Impact Resonance","Impact Tremors","Impale","Impaler Shrike","Impassioned Orator","Impatience","Impatient Iguana","Impeccable Timing","Impelled Giant","Impending Disaster","Impending Doom","Imperial Aerosaur","Imperial Ceratops","Imperial Edict","Imperial Hellkite","Imperial Lancer","Imperial Mask","Imperial Outrider","Imperial Recruiter","Imperial Seal","Imperiosaur","Imperious Oligarch","Imperious Perfect","Impervious Greatwurm","Impetuous Devils","Impetuous Protege","Impetuous Sunchaser","Implement of Combustion","Implement of Examination","Implement of Ferocity","Implement of Improvement","Implement of Malice","Implements of Sacrifice","Implode","Imposing Sovereign","Imposing Vantasaur","Imposing Visage","Impostor of the Sixth Pride","Imprison","Imprison This Insolent Wretch","Imprisoned in the Moon","Improbable Alliance","Impromptu Raid","Improvised Armor","Imps\' Taunt","Impulse","Impulsive Charge","Impulsive Destruction","Impulsive Maneuvers","Impulsive Return","In Bolas\'s Clutches","In Garruk\'s Wake","In Oketra\'s Name","In the Eye of Chaos","In the Web of War","Inaction Injunction","Inalla, Archmage Ritualist","Iname as One","Iname, Death Aspect","Iname, Life Aspect","Incandescent Soulstoke","Incendiary","Incendiary Command","Incendiary Dissent","Incendiary Flow","Incendiary Oracle","Incendiary Sabotage","Incinerate","Incite","Incite Hysteria","Incite Insight","Incite Rebellion","Incite War","Incoming!","Incorrigible Youths","Increasing Ambition","Increasing Confusion","Increasing Devotion","Increasing Savagery","Increasing Vengeance","Incremental Blight","Incremental Growth","Incubation // Incongruity","Incubation Druid","Incubator Drone","Incurable Ogre","Incursion Specialist","Indatha Crystal","Indatha Triome","Indebted Samurai","Indentured Djinn","Indentured Oaf","Independent Troops","Indestructibility","Indestructible Aura","Index","Indigo Faerie","Indomitable Ancients","Indomitable Archangel","Indomitable Creativity","Indomitable Will","Indrik Stomphowler","Indrik Umbra","Induce Despair","Induce Paranoia","Induced Amnesia","Indulgent Aristocrat","Indulgent Tormentor","Indulging Patrician","Ineffable Blessing","Inertia Bubble","Inescapable Blaze","Inescapable Brute","Inevitable End","Inexorable Blob","Inexorable Tide","Infantry Veteran","Infected Vermin","Infectious Bloodlust","Infectious Horror","Infectious Host","Infectious Rage","Infernal Caretaker","Infernal Contract","Infernal Darkness","Infernal Denizen","Infernal Genesis","Infernal Harvest","Infernal Kirin","Infernal Medusa","Infernal Offering","Infernal Plunge","Infernal Reckoning","Infernal Scarring","Infernal Spawn of Evil","Infernal Spawn of Infernal Spawn of Evil","Infernal Tribute","Infernal Tutor","Infernius Spawnington III, Esq.","Inferno","Inferno Elemental","Inferno Fist","Inferno Hellion","Inferno Jet","Inferno Titan","Inferno Trap","Infest","Infested Roothold","Infiltrate","Infiltration Lens","Infiltrator il-Kor","Infiltrator\'s Magemark","Infinite Authority","Infinite Hourglass","Infinite Obliteration","Infinite Reflection","Infinity Elemental","Inflame","Inflation Station","Information Dealer","Infuriate","Infuse","Infuse with the Elements","Infused Arrows","Ingenious Infiltrator","Ingenious Skaab","Ingenious Thief","Ingot Chewer","Inheritance","Inhumaniac","Initiate of Blood // Goka the Unjust","Initiate\'s Companion","Initiates of the Ebon Hand","Ink Dissolver","Ink-Eyes, Servant of Oni","Ink-Eyes, Servant of Oni Avatar","Ink-Treader Nephilim","Inkfathom Divers","Inkfathom Infiltrator","Inkfathom Witch","Inkmoth Nexus","Inkwell Leviathan","Inner Calm, Outer Strength","Inner Demon","Inner Fire","Inner Sanctum","Inner Struggle","Inner-Chamber Guard","Inner-Flame Acolyte","Inner-Flame Igniter","Inniaz, the Gale Force","Innocence Kami","Innocent Blood","Innocuous Insect","Inordinate Rage","Inquisition","Inquisition of Kozilek","Inquisitive Puppet","Inquisitor Exarch","Inquisitor\'s Flail","Inquisitor\'s Ox","Inquisitor\'s Snare","Insatiable Appetite","Insatiable Gorgers","Insatiable Harpy","Insatiable Hemophage","Insatiable Souleater","Inscription of Abundance","Inscription of Insight","Inscription of Ruin","Inside Out","Insidious Bookworms","Insidious Dreams","Insidious Will","Insight","Insist","Insolence","Insolent Neonate","Inspiration","Inspirational Antelope","Inspire Awe","Inspired Charge","Inspired Sphinx","Inspired Sprite","Inspired Ultimatum","Inspiring Call","Inspiring Captain","Inspiring Cleric","Inspiring Commander","Inspiring Roar","Inspiring Statuary","Inspiring Unicorn","Inspiring Vantage","Inspiring Veteran","Inspirit","Instigator","Instigator Gang // Wildblood Pack","Instill Energy","Instill Furor","Instill Infection","Insubordination","Insufferable Syphon","Insult // Injury","Insurrection","Intangible Virtue","Integrity // Intervention","Intellectual Offering","Interdict","Interplanar Beacon","Interplanar Brushwagg","Interplanar Tunnel","Interpret the Signs","Intervene","Intervention Pact","Intervention of Keranos","Intet, the Dreamer","Intimidation","Intimidation Bolt","Intimidator Initiate","Into Thin Air","Into the Core","Into the Earthen Maw","Into the Fray","Into the Maw of Hell","Into the North","Into the Roil","Into the Story","Into the Void","Into the Wilds","Intrepid Hero","Intrepid Provisioner","Introductions Are in Order","Intruder Alarm","Intrusive Packbeast","Intuition","Inundate","Invade the City","Invader Parasite","Invading Manticore","Invasion Plans","Invasive Species","Invasive Surgery","Inventor\'s Apprentice","Inventor\'s Goggles","Inventors\' Fair","Invert // Invent","Invert the Skies","Inverter of Truth","Invigorate","Invigorated Rampage","Invigorating Boon","Invigorating Falls","Invigorating Surge","Invincible Hymn","Inviolability","Invisibility","Invisible Stalker","Invocation of Saint Traft","Invoke Prejudice","Invoke the Divine","Invoke the Firemind","Invulnerability","Inzerva, Master of Insights","Ion Storm","Iona\'s Blessing","Iona\'s Judgment","Iona, Shield of Emeria","Ionize","Ior Ruin Expedition","Ipnu Rivulet","Ire Shaman","Ire of Kaminari","Irencrag Feat","Irencrag Pyromancer","Iridescent Angel","Iridescent Drake","Iridescent Hornbeetle","Irini Sengir","Iroas\'s Blessing","Iroas\'s Champion","Iroas, God of Victory","Iron Bully","Iron Lance","Iron League Steed","Iron Maiden","Iron Myr","Iron Star","Iron Tusk Elephant","Iron Will","Iron-Barb Hellion","Iron-Heart Chimera","Ironclad Krovod","Ironclad Revolutionary","Ironclad Slayer","Ironclaw Buzzardiers","Ironclaw Curse","Ironclaw Orcs","Ironfist Crusher","Ironhoof Ox","Ironroot Treefolk","Ironroot Warlord","Ironscale Hydra","Ironshell Beetle","Irontread Crusher","Ironwright\'s Cleansing","Irradiate","Irregular Cohort","Irresistible Prey","Irreverent Revelers","Irrigated Farmland","Irrigation Ditch","Isamaru, Hound of Konda","Isao, Enlightened Bushi","Isareth the Awakener","Ishai, Ojutai Dragonspeaker","Ishi-Ishi, Akki Crackshot","Ishkanah, Grafwidow","Island","Island Fish Jasconius","Island Sanctuary","Island of Wak-Wak","Isle of Vesuva","Isleback Spawn","Isochron Scepter","Isolate","Isolated Chapel","Isolated Watchtower","Isolation Cell","Isolation Zone","Isperia the Inscrutable","Isperia\'s Skywatch","Isperia, Supreme Judge","It That Betrays","It That Gets Left Hanging","It of the Horrid Swarm","Iterative Analysis","Ith, High Arcanist","Ivory Charm","Ivory Crane Netsuke","Ivory Cup","Ivory Gargoyle","Ivory Giant","Ivory Guardians","Ivory Mask","Ivory Tower","Ivorytusk Fortress","Ivy Dancer","Ivy Elemental","Ivy Lane Denizen","Ivy Seer","Iwamori of the Open Fist","Ixalan\'s Binding","Ixalli\'s Diviner","Ixalli\'s Keeper","Ixidor\'s Will","Ixidor, Reality Sculptor","Ixidron","Izoni, Thousand-Eyed","Izzet Boilerworks","Izzet Charm","Izzet Chemister","Izzet Chronarch","Izzet Cluestone","Izzet Guildgate","Izzet Guildmage","Izzet Keyrune","Izzet Locket","Izzet Signet","Izzet Staticaster","Izzet Steam Maze","Jabari\'s Banner","Jabari\'s Influence","Jace Beleren","Jace\'s Archivist","Jace\'s Defeat","Jace\'s Erasure","Jace\'s Ingenuity","Jace\'s Mindseeker","Jace\'s Phantasm","Jace\'s Projection","Jace\'s Ruse","Jace\'s Sanctum","Jace\'s Scrutiny","Jace\'s Sentinel","Jace\'s Triumph","Jace, Arcane Strategist","Jace, Architect of Thought","Jace, Cunning Castaway","Jace, Ingenious Mind-Mage","Jace, Memory Adept","Jace, Mirror Mage","Jace, Unraveler of Secrets","Jace, Vryn\'s Prodigy // Jace, Telepath Unbound","Jace, Wielder of Mysteries","Jace, the Living Guildpact","Jace, the Mind Sculptor","Jack-in-the-Mox","Jackal Familiar","Jackal Pup","Jackalope Herd","Jackknight","Jacques le Vert","Jaddi Lifestrider","Jaddi Offshoot","Jade Bearer","Jade Guardian","Jade Idol","Jade Leech","Jade Mage","Jade Monolith","Jade Statue","Jadecraft Artisan","Jaded Response","Jadelight Ranger","Jagged Lightning","Jagged Poppet","Jagged-Scar Archers","Jagwasp Swarm","Jalira, Master Polymorphist","Jalum Grifter","Jalum Tome","Jamming Device","Jamuraan Lion","Jandor\'s Ring","Jandor\'s Saddlebags","Jangling Automaton","Janjeet Sentry","Jar of Eyeballs","Jarad\'s Orders","Jarad, Golgari Lich Lord","Jareth, Leonine Titan","Jasconian Isle","Jasmine Boreal","Jasmine Seer","Jawbone Skulkin","Jaws of Stone","Jaya Ballard","Jaya Ballard Avatar","Jaya Ballard, Task Mage","Jaya\'s Greeting","Jaya\'s Immolating Inferno","Jaya, Venerated Firemage","Jayemdae Tome","Jazal Goldmane","Jedit Ojanen","Jedit Ojanen of Efrava","Jedit\'s Dragoons","Jeering Homunculus","Jeering Instigator","Jegantha, the Wellspring","Jelenn Sphinx","Jeleva, Nephalia\'s Scourge","Jenara, Asura of War","Jerrard of the Closed Fist","Jeska, Warrior Adept","Jeskai Ascendancy","Jeskai Banner","Jeskai Barricade","Jeskai Charm","Jeskai Elder","Jeskai Infiltrator","Jeskai Runemark","Jeskai Sage","Jeskai Student","Jeskai Windscout","Jester\'s Cap","Jester\'s Mask","Jester\'s Scepter","Jester\'s Sombrero","Jet Medallion","Jetting Glasskite","Jeweled Amulet","Jeweled Bird","Jeweled Spirit","Jeweled Torque","Jhessian Balmgiver","Jhessian Infiltrator","Jhessian Lookout","Jhessian Thief","Jhessian Zombies","Jhoira of the Ghitu","Jhoira of the Ghitu Avatar","Jhoira\'s Familiar","Jhoira\'s Timebug","Jhoira\'s Toolbox","Jhoira, Weatherlight Captain","Jhovall Queen","Jhovall Rider","Jiang Yanggu","Jiang Yanggu, Wildcrafter","Jihad","Jilt","Jin-Gitaxias, Core Augur","Jinx","Jinxed Choker","Jinxed Idol","Jinxed Ring","Jirina Kudro","Jiwari, the Earth Aflame","Jodah\'s Avenger","Jodah, Archmage Eternal","Johan","Johnny, Combo Player","Johtull Wurm","Join Shields","Join the Ranks","Joiner Adept","Joint Assault","Jokulhaups","Jokulmorder","Jolrael\'s Centaur","Jolrael\'s Favor","Jolrael, Empress of Beasts","Jolrael, Mwonvuli Recluse","Jolt","Jolting Merfolk","Jor Kadeen, the Prevailer","Joraga Auxiliary","Joraga Bard","Joraga Invocation","Joraga Treespeaker","Joraga Visionary","Joraga Warcaller","Jori En, Ruin Diver","Jorubai Murk Lurker","Josu Vess, Lich Knight","Journey for the Elixir","Journey of Discovery","Journey to Eternity // Atzal, Cave of Eternity","Journey to Nowhere","Journey to Oblivion","Journeyer\'s Kite","Joust","Jousting Dummy","Jousting Lance","Joven","Joven\'s Ferrets","Joven\'s Tools","Jovial Evil","Joyous Respite","Joyride Rigger","Jubilant Mascot","Jubilant Skybonder","Judge Unworthy","Judge of Currents","Judge\'s Familiar","Judith, the Scourge Diva","Jugan, the Rising Star","Juggernaut","Juju Bubble","Jukai Messenger","Jumbo Imp","Jump","Jund","Jund Battlemage","Jund Charm","Jund Hackblade","Jund Panorama","Jund Sojourners","Jungle Barrier","Jungle Basin","Jungle Creeper","Jungle Delver","Jungle Hollow","Jungle Lion","Jungle Patrol","Jungle Shrine","Jungle Troll","Jungle Wayfinder","Jungle Weaver","Jungle Wurm","Jungleborn Pioneer","Juniper Order Advocate","Juniper Order Druid","Juniper Order Ranger","Junk Diver","Junk Golem","Junktroller","Junkyo Bell","Juntu Stakes","Junún Efreet","Jushi Apprentice // Tomoya the Revealer","Just Desserts","Just Fate","Just the Wind","Justice","Justice Strike","Justiciar\'s Portal","Juvenile Gloomwidow","Juxtapose","Juzám Djinn","Jwar Isle Avenger","Jwar Isle Refuge","Jwari Disruption // Jwari Ruins","Jwari Scuttler","Jwari Shapeshifter","Jötun Grunt","Jötun Owl Keeper","K\'rrik, Son of Yawgmoth","Kaalia of the Vast","Kaalia, Zenith Seeker","Kabira Crossroads","Kabira Evangel","Kabira Outrider","Kabira Takedown // Kabira Plateau","Kabira Vindicator","Kaboom!","Kabuto Moth","Kadena\'s Silencer","Kadena, Slinking Sorcerer","Kaervek the Merciless","Kaervek\'s Hex","Kaervek\'s Purge","Kaervek\'s Spite","Kaervek\'s Torch","Kaervek, the Spiteful","Kagemaro\'s Clutch","Kagemaro, First to Suffer","Kaheera, the Orphanguard","Kaho, Minamo Historian","Kaijin of the Vanishing Touch","Kalamax, the Stormsire","Kalastria Healer","Kalastria Highborn","Kalastria Nightwatch","Kaleidostone","Kalemne\'s Captain","Kalemne, Disciple of Iroas","Kalitas, Bloodchief of Ghet","Kalitas, Traitor of Ghet","Kalonian Behemoth","Kalonian Hydra","Kalonian Tusker","Kalonian Twingrove","Kamahl\'s Desire","Kamahl\'s Druidic Vow","Kamahl\'s Sledge","Kamahl\'s Summons","Kamahl, Fist of Krosa","Kamahl, Pit Fighter","Kambal, Consul of Allocation","Kami of Ancient Law","Kami of Empty Graves","Kami of False Hope","Kami of Fire\'s Roar","Kami of Lunacy","Kami of Old Stone","Kami of Tattered Shoji","Kami of Twisted Reflection","Kami of the Crescent Moon","Kami of the Honored Dead","Kami of the Hunt","Kami of the Painted Road","Kami of the Palace Fields","Kami of the Tended Garden","Kami of the Waning Moon","Kangee, Aerie Keeper","Kapsho Kitefins","Karador, Ghost Chieftain","Karakas","Karametra\'s Acolyte","Karametra\'s Blessing","Karametra\'s Favor","Karametra, God of Harvests","Kargan Dragonlord","Kargan Dragonrider","Kargan Intimidator","Kargan Warleader","Kari Zev\'s Expertise","Kari Zev, Skyship Raider","Karlov of the Ghost Council","Karma","Karmic Guide","Karmic Justice","Karn","Karn Liberated","Karn\'s Bastion","Karn\'s Temporal Sundering","Karn\'s Touch","Karn, Scion of Urza","Karn, Silver Golem","Karn, the Great Creator","Karona\'s Zealot","Karona, False God","Karona, False God Avatar","Karoo","Karoo Meerkat","Karplusan Forest","Karplusan Giant","Karplusan Hound","Karplusan Minotaur","Karplusan Strider","Karplusan Wolverine","Karplusan Yeti","Karrthus, Tyrant of Jund","Karstoderm","Kaseto, Orochi Archmage","Kashi-Tribe Elite","Kashi-Tribe Reaver","Kashi-Tribe Warriors","Kasimir the Lone Wolf","Kasmina\'s Transmutation","Kasmina, Enigmatic Mentor","Katabatic Winds","Kataki, War\'s Wage","Kathari Bomber","Kathari Remnant","Kathari Screecher","Kathril, Aspect Warper","Kavu Aggressor","Kavu Chameleon","Kavu Climber","Kavu Glider","Kavu Howler","Kavu Lair","Kavu Mauler","Kavu Monarch","Kavu Predator","Kavu Primarch","Kavu Recluse","Kavu Runner","Kavu Scout","Kavu Titan","Kaya\'s Ghostform","Kaya\'s Guile","Kaya\'s Wrath","Kaya, Bane of the Dead","Kaya, Ghost Assassin","Kaya, Ghost Haunter","Kaya, Orzhov Usurper","Kaysa","Kaza, Roil Chaser","Kazandu Blademaster","Kazandu Mammoth // Kazandu Valley","Kazandu Nectarpot","Kazandu Refuge","Kazandu Stomper","Kazandu Tuskcaller","Kazarov, Sengir Pureblood","Kazuul Warlord","Kazuul\'s Fury // Kazuul\'s Cliffs","Kazuul\'s Toll Collector","Kazuul, Tyrant of the Cliffs","Kederekt Creeper","Kederekt Leviathan","Kederekt Parasite","Keen Glidemaster","Keen Sense","Keen-Eyed Archers","Keeneye Aven","Keening Apparition","Keening Banshee","Keening Stone","Keensight Mentor","Keep Safe","Keep Watch","Keeper of Fables","Keeper of Keys","Keeper of Kookus","Keeper of Progenitus","Keeper of Tresserhorn","Keeper of the Accord","Keeper of the Beasts","Keeper of the Dead","Keeper of the Flame","Keeper of the Lens","Keeper of the Light","Keeper of the Mind","Keeper of the Nine Gales","Keeper of the Sacred Word","Keepers of the Faith","Keepsake Gorgon","Kefnet the Mindful","Kefnet\'s Last Word","Kefnet\'s Monument","Kei Takahashi","Keiga, the Tide Star","Keldon Arsonist","Keldon Battlewagon","Keldon Berserker","Keldon Champion","Keldon Firebombers","Keldon Halberdier","Keldon Mantle","Keldon Marauders","Keldon Megaliths","Keldon Necropolis","Keldon Overseer","Keldon Raider","Keldon Twilight","Keldon Vandals","Keldon Warcaller","Keldon Warlord","Kelinore Bat","Kels, Fight Fixer","Kelsien, the Plague","Kelsinko Ranger","Kemba\'s Legion","Kemba\'s Skyguard","Kemba, Kha Regent","Kemuri-Onna","Kenrith\'s Transformation","Kenrith, the Returned King","Kentaro, the Smiling Cat","Keral Keep Disciples","Keranos, God of Storms","Keruga, the Macrosage","Kess, Dissident Mage","Kessig","Kessig Cagebreakers","Kessig Dire Swine","Kessig Forgemaster // Flameheart Werewolf","Kessig Malcontents","Kessig Prowler // Sinuous Predator","Kessig Recluse","Kessig Wolf","Kessig Wolf Run","Kestia, the Cultivator","Kethis, the Hidden Hand","Ketria Crystal","Ketria Triome","Key to the City","Keymaster Rogue","Kezzerdrix","Khabál Ghoul","Khalni Ambush // Khalni Territory","Khalni Garden","Khalni Gem","Khalni Heart Expedition","Khalni Hydra","Kharasha Foothills","Kharis & The Beholder","Khenra Charioteer","Khenra Eternal","Khenra Scrapper","Kher Keep","Kheru Bloodsucker","Kheru Dreadmaw","Kheru Lich Lord","Kheru Mind-Eater","Kheru Spellsnatcher","Khod, Etlan Shiis Envoy","Khorvath Brightflame","Khorvath\'s Fury","Kiki-Jiki, Mirror Breaker","Kiku\'s Shadow","Kiku, Night\'s Flower","Kill Shot","Kill Switch","Kill! Destroy!","Kill-Suit Cultist","Killer Bees","Killer Instinct","Killer Whale","Killing Glare","Killing Wave","Kiln Fiend","Kiln Walker","Kilnmouth Dragon","Kilnspire District","Kin-Tree Invocation","Kin-Tree Warden","Kindercatch","Kindle","Kindle the Carnage","Kindled Fury","Kindly Cognician","Kindly Stranger // Demon-Possessed Witch","Kindred Boon","Kindred Charge","Kindred Discovery","Kindred Dominance","Kindred Summons","Kindslaver","Kinetic Augur","King Cheetah","King Crab","King Macar, the Gold-Cursed","King Suleiman","King of the Pride","King\'s Assassin","Kingfisher","Kingpin\'s Pet","Kinjalli\'s Caller","Kinjalli\'s Sunwing","Kinnan, Bonder Prodigy","Kinsbaile Balloonist","Kinsbaile Borderguard","Kinsbaile Cavalier","Kinsbaile Skirmisher","Kinscaer Harpoonist","Kiora Bests the Sea God","Kiora\'s Dambreaker","Kiora\'s Dismissal","Kiora\'s Follower","Kiora, Behemoth Beckoner","Kiora, Master of the Depths","Kiora, the Crashing Wave","Kira, Great Glass-Spinner","Kird Ape","Kird Chieftain","Kiri-Onna","Kirtar\'s Desire","Kirtar\'s Wrath","Kismet","Kiss of Death","Kiss of the Amesha","Kitchen Finks","Kite Shield","Kitesail","Kitesail Apprentice","Kitesail Cleric","Kitesail Corsair","Kitesail Freebooter","Kitesail Scout","Kithkin Armor","Kithkin Daggerdare","Kithkin Greatheart","Kithkin Harbinger","Kithkin Healer","Kithkin Mourncaller","Kithkin Rabble","Kithkin Shielddare","Kithkin Spellduster","Kithkin Zealot","Kithkin Zephyrnaut","Kitsune Blademaster","Kitsune Bonesetter","Kitsune Dawnblade","Kitsune Diviner","Kitsune Healer","Kitsune Loreweaver","Kitsune Mystic // Autumn-Tail, Kitsune Sage","Kitsune Palliator","Kitsune Riftwalker","Kiyomaro, First to Stand","Kjeldoran Dead","Kjeldoran Elite Guard","Kjeldoran Escort","Kjeldoran Frostbeast","Kjeldoran Gargoyle","Kjeldoran Guard","Kjeldoran Home Guard","Kjeldoran Javelineer","Kjeldoran Knight","Kjeldoran Outpost","Kjeldoran Outrider","Kjeldoran Phalanx","Kjeldoran Pride","Kjeldoran Royal Guard","Kjeldoran Skycaptain","Kjeldoran Skyknight","Kjeldoran War Cry","Kjeldoran Warrior","Klothys\'s Design","Klothys, God of Destiny","Knacksaw Clique","Knight Errant","Knight Exemplar","Knight Watch","Knight of Autumn","Knight of Cliffhaven","Knight of Dawn","Knight of Dusk","Knight of Glory","Knight of Grace","Knight of Infamy","Knight of Malice","Knight of Meadowgrain","Knight of New Alara","Knight of New Benalia","Knight of Obligation","Knight of Old Benalia","Knight of Sorrows","Knight of Stromgald","Knight of Sursi","Knight of Valor","Knight of the Ebon Legion","Knight of the Hokey Pokey","Knight of the Holy Nimbus","Knight of the Keep","Knight of the Kitchen Sink","Knight of the Last Breath","Knight of the Mists","Knight of the Pilgrim\'s Road","Knight of the Reliquary","Knight of the Skyward Eye","Knight of the Stampede","Knight of the Tusk","Knight of the White Orchid","Knight of the Widget","Knight\'s Pledge","Knight-Captain of Eos","Knighthood","Knightly Valor","Knights of Thorn","Knights of the Black Rose","Knights\' Charge","Knollspine Dragon","Knollspine Invocation","Knotvine Mystic","Knotvine Paladin","Know Evil","Know Naught but Fire","Knowledge Exploitation","Knowledge Pool","Knowledge Vault","Knowledge and Power","Knucklebone Witch","Kobold Drill Sergeant","Kobold Overlord","Kobold Taskmaster","Kobolds of Kher Keep","Kodama of the Center Tree","Kodama of the North Tree","Kodama of the South Tree","Kodama\'s Might","Kodama\'s Reach","Kogla, the Titan Ape","Kokusho, the Evening Star","Kolaghan Aspirant","Kolaghan Forerunners","Kolaghan Monument","Kolaghan Skirmisher","Kolaghan Stormsinger","Kolaghan\'s Command","Kolaghan, the Storm\'s Fury","Konda\'s Banner","Konda\'s Hatamoto","Konda, Lord of Eiganjo","Kongming\'s Contraptions","Kongming, \\"Sleeping Dragon\\"","Kookus","Kopala, Warden of Waves","Kor Aeronaut","Kor Blademaster","Kor Bladewhirl","Kor Cartographer","Kor Castigator","Kor Celebrant","Kor Chant","Kor Dirge","Kor Duelist","Kor Entanglers","Kor Firewalker","Kor Haven","Kor Hookmaster","Kor Line-Slinger","Kor Outfitter","Kor Sanctifiers","Kor Scythemaster","Kor Sky Climber","Kor Skyfisher","Kor Spiritdancer","Korlash, Heir to Blackblade","Kormus Bell","Korozda Gorgon","Korozda Guildmage","Korozda Monitor","Korvold, Fae-Cursed King","Koskun Falls","Koskun Keep","Koth of the Hammer","Koth\'s Courier","Kothophed, Soul Hoarder","Kozilek\'s Channeler","Kozilek\'s Pathfinder","Kozilek\'s Predator","Kozilek\'s Return","Kozilek\'s Sentinel","Kozilek\'s Shrieker","Kozilek\'s Translator","Kozilek, Butcher of Truth","Kozilek, the Great Distortion","Kragma Butcher","Kragma Warcaller","Kraken Hatchling","Kraken of the Straits","Kraken\'s Eye","Krakilin","Kranioceros","Krark\'s Other Thumb","Krark\'s Thumb","Krark-Clan Engineers","Krark-Clan Grunt","Krark-Clan Ironworks","Krark-Clan Ogre","Krark-Clan Shaman","Krark-Clan Stoker","Krasis Incubation","Kraul Foragers","Kraul Harpooner","Kraul Raider","Kraul Stinger","Kraul Swarm","Kraul Warrior","Kraum, Ludevic\'s Opus","Krav, the Unredeemed","Krazy Kow","Krenko\'s Command","Krenko\'s Enforcer","Krenko, Mob Boss","Krenko, Tin Street Kingpin","Kresh the Bloodbraided","Kresh the Bloodbraided Avatar","Kris Mage","Kronch Wrangler","Krond the Dawn-Clad","Krosa","Krosan Adaptation","Krosan Archer","Krosan Avenger","Krosan Beast","Krosan Cloudscraper","Krosan Colossus","Krosan Constrictor","Krosan Drover","Krosan Druid","Krosan Grip","Krosan Groundshaker","Krosan Reclamation","Krosan Restorer","Krosan Tusker","Krosan Verge","Krosan Vorine","Krosan Warchief","Krosan Wayfarer","Krovikan Elementalist","Krovikan Fetish","Krovikan Horror","Krovikan Mist","Krovikan Plague","Krovikan Rot","Krovikan Scoundrel","Krovikan Sorcerer","Krovikan Vampire","Krovikan Whispers","Kroxa, Titan of Death\'s Hunger","Kruin Outlaw // Terror of Kruin Pass","Kruin Striker","Krumar Bond-Kin","Kruphix\'s Insight","Kruphix, God of Horizons","Kry Shield","Kudzu","Kujar Seedsculptor","Kukemssa Pirates","Kukemssa Serpent","Kuldotha Flamefiend","Kuldotha Forgemaster","Kuldotha Phoenix","Kuldotha Rebirth","Kuldotha Ringleader","Kulrath Knight","Kumano\'s Blessing","Kumano\'s Pupils","Kumano, Master Yamabushi","Kumena\'s Awakening","Kumena\'s Speaker","Kumena, Tyrant of Orazca","Kunoros, Hound of Athreos","Kuon, Ogre Ascendant // Kuon\'s Essence","Kurgadon","Kurkesh, Onakke Ancient","Kuro\'s Taken","Kuro, Pitlord","Kusari-Gama","Kwende, Pride of Femeref","Kydele, Chosen of Kruphix","Kykar, Wind\'s Fury","Kynaios and Tiro of Meletis","Kyoki, Sanity\'s Eclipse","Kyren Archive","Kyren Glider","Kyren Legate","Kyren Negotiations","Kyren Sniper","Kyren Toy","Kyscu Drake","Kytheon\'s Irregulars","Kytheon\'s Tactics","Kytheon, Hero of Akros // Gideon, Battle-Forged","Lab Rats","Laboratory Brute","Laboratory Maniac","Labro Bot","Labyrinth Champion","Labyrinth Guardian","Labyrinth Minotaur","Labyrinth Raptor","Labyrinth of Skophos","Laccolith Grunt","Laccolith Rig","Laccolith Titan","Laccolith Warrior","Laccolith Whelp","Lace with Moonglove","Lackey Recycler","Ladies\' Knight","Lady Caleria","Lady Evangela","Lady Orca","Lady Sun","Lady Zhurong, Warrior Queen","Lagac Lizard","Lagonna-Band Elder","Lagonna-Band Storyteller","Lagonna-Band Trailblazer","Lair Delve","Lair of the Ashen Idol","Lairwatch Giant","Lake of the Dead","Lambholt Elder // Silverpelt Werewolf","Lambholt Pacifist // Lambholt Butcher","Lammastide Weave","Lampad of Death\'s Vigil","Lamplighter of Selhoff","Lance","Lancer Sliver","Lancers en-Kor","Land Aid \'04","Land Cap","Land Equilibrium","Land Grant","Land Leeches","Land Tax","Land\'s Edge","Landbind Ritual","Landfill","Landslide","Languish","Lantern Kami","Lantern Scout","Lantern Spirit","Lantern of Insight","Lantern of Undersight","Lantern-Lit Graveyard","Lapis Lazuli Talisman","Lapse of Certainty","Laquatus\'s Champion","Laquatus\'s Creativity","Laquatus\'s Disdain","Larceny","Largepox","Larger Than Life","Lash Out","Lash of Thorns","Lash of the Tyrant","Lash of the Whip","Lashknife","Lashknife Barrier","Lashweed Lurker","Lashwrithe","Last Breath","Last Caress","Last Chance","Last Gasp","Last Kiss","Last Laugh","Last One Standing","Last Rites","Last Stand","Last Thoughts","Last Word","Last-Ditch Effort","Lat-Nam\'s Legacy","Latch Seeker","Latchkey Faerie","Lathliss, Dragon Queen","Lathnu Hellion","Lathnu Sailback","Latulla\'s Orders","Latulla, Keldon Overseer","Laughing Hyena","Launch","Launch Party","Launch the Fleet","Lava Axe","Lava Blister","Lava Burst","Lava Coil","Lava Dart","Lava Flow","Lava Hounds","Lava Runner","Lava Serpent","Lava Spike","Lava Storm","Lava Tubes","Lava Zombie","Lava-Field Overlord","Lavaball Trap","Lavabelly Sliver","Lavaborn Muse","Lavabrink Floodgates","Lavabrink Venturer","Lavaclaw Reaches","Lavacore Elemental","Lavafume Invoker","Lavakin Brawler","Lavalanche","Lavamancer\'s Skill","Lavastep Raider","Lavinia of the Tenth","Lavinia, Azorius Renegade","Law-Rune Enforcer","Lawbringer","Lawless Broker","Lawmage\'s Binding","Lay Bare","Lay Bare the Heart","Lay Claim","Lay Waste","Lay of the Land","Lazav, Dimir Mastermind","Lazav, the Multifarious","Lazier Goblin","Lazotep Behemoth","Lazotep Plating","Lazotep Reaver","Lead Astray","Lead Golem","Lead by Example","Lead the Stampede","Lead-Belly Chimera","Leaden Fists","Leaden Myr","Leadership Vacuum","Leaf Arrow","Leaf Dancer","Leaf Gilder","Leaf-Crowned Elder","Leafcrown Dryad","Leafdrake Roost","Leafkin Avenger","Leafkin Druid","League Guildmage","Leap","Leap of Faith","Leap of Flame","Leapfrog","Leaping Lizard","Leaping Master","Learn from the Past","Learned Learner","Leashling","Leatherback Baloth","Leave // Chance","Leave No Trace","Leave in the Dust","Ledev Champion","Ledev Guardian","Leech Bonder","Leeches","Leeching Bite","Leeching Licid","Leeching Sliver","Leechridden Swamp","Leering Emblem","Leering Gargoyle","Leery Fogbeast","Legacy Weapon","Legacy\'s Allure","Legerdemain","Legion Angel","Legion Conquistador","Legion Guildmage","Legion Lieutenant","Legion Loyalist","Legion Warboss","Legion\'s End","Legion\'s Initiative","Legion\'s Judgment","Legion\'s Landing // Adanto, the First Fort","Legions of Lim-Dûl","Lena, Selfless Champion","Lens of Clarity","Leonin Abunas","Leonin Arbiter","Leonin Armorguard","Leonin Battlemage","Leonin Bladetrap","Leonin Bola","Leonin Den-Guard","Leonin Elder","Leonin Iconoclast","Leonin Relic-Warder","Leonin Scimitar","Leonin Shikari","Leonin Skyhunter","Leonin Snarecaster","Leonin Squire","Leonin Sun Standard","Leonin Vanguard","Leonin Warleader","Leonin of the Lost Pride","Leopard-Spotted Jiao","Leovold\'s Operative","Leovold, Emissary of Trest","Leshrac\'s Rite","Leshrac\'s Sigil","Lesser Gargadon","Lesser Masticore","Lesser Werewolf","Lethal Sting","Lethal Vapors","Lethargy Trap","Lethe Lake","Letter Bomb","Leveler","Leviathan","Levitation","Lexivore","Ley Druid","Ley Line","Ley Weaver","Leyline Phantom","Leyline Prowler","Leyline Tyrant","Leyline of Abundance","Leyline of Anticipation","Leyline of Combustion","Leyline of Lifeforce","Leyline of Lightning","Leyline of Punishment","Leyline of Sanctity","Leyline of Singularity","Leyline of Vitality","Leyline of the Meek","Leyline of the Void","Lhurgoyf","Liability","Liar\'s Pendulum","Liberate","Liberated Dwarf","Liberating Combustion","Library Larcenist","Library of Alexandria","Library of Lat-Nam","Library of Leng","Lich","Lich Lord of Unx","Lich\'s Caress","Lich\'s Mastery","Lich\'s Mirror","Lich\'s Tomb","Lichenthrope","Licia, Sanguine Tribune","Liege of the Axe","Liege of the Hollows","Liege of the Pit","Liege of the Tangle","Lieutenant Kirtar","Lieutenants of the Guard","Life // Death","Life Burst","Life Chisel","Life Goes On","Life Matrix","Life and Limb","Life from the Loam","Life\'s Finale","Life\'s Legacy","Lifebane Zombie","Lifeblood","Lifeblood Hydra","Lifecraft Awakening","Lifecraft Cavalry","Lifecrafter\'s Bestiary","Lifecrafter\'s Gift","Lifeforce","Lifegift","Lifelace","Lifeline","Lifelink","Lifesmith","Lifespark Spellbomb","Lifespinner","Lifespring Druid","Lifetap","Lifted by Clouds","Light Up the Stage","Light from Within","Light of Day","Light of Hope","Light of Promise","Light of Sanction","Light of the Legion","Lightbringer","Lightform","Lighthouse Chronologist","Lightkeeper of Emeria","Lightmine Field","Lightning Angel","Lightning Axe","Lightning Berserker","Lightning Blast","Lightning Blow","Lightning Bolt","Lightning Cloud","Lightning Coils","Lightning Colt","Lightning Crafter","Lightning Dart","Lightning Diadem","Lightning Dragon","Lightning Elemental","Lightning Greaves","Lightning Helix","Lightning Hounds","Lightning Javelin","Lightning Mare","Lightning Mauler","Lightning Phoenix","Lightning Prowess","Lightning Reaver","Lightning Reflexes","Lightning Rift","Lightning Runner","Lightning Serpent","Lightning Shrieker","Lightning Skelemental","Lightning Storm","Lightning Stormkin","Lightning Strike","Lightning Surge","Lightning Talons","Lightning Visionary","Lightning Volley","Lightning-Core Excavator","Lightning-Rig Crew","Lightwalker","Lightwielder Paladin","Lignify","Liliana Vess","Liliana of the Dark Realms","Liliana of the Veil","Liliana\'s Caress","Liliana\'s Contract","Liliana\'s Defeat","Liliana\'s Devotee","Liliana\'s Elite","Liliana\'s Indignation","Liliana\'s Influence","Liliana\'s Mastery","Liliana\'s Reaver","Liliana\'s Scorn","Liliana\'s Scrounger","Liliana\'s Shade","Liliana\'s Specter","Liliana\'s Spoils","Liliana\'s Standard Bearer","Liliana\'s Steward","Liliana\'s Triumph","Liliana, Death Mage","Liliana, Death Wielder","Liliana, Death\'s Majesty","Liliana, Dreadhorde General","Liliana, Heretical Healer // Liliana, Defiant Necromancer","Liliana, Untouched by Death","Liliana, Waker of the Dead","Liliana, the Last Hope","Liliana, the Necromancer","Lilting Refrain","Lim-Dûl the Necromancer","Lim-Dûl\'s Cohort","Lim-Dûl\'s Hex","Lim-Dûl\'s High Guard","Lim-Dûl\'s Paladin","Lim-Dûl\'s Vault","Limestone Golem","Limited Resources","Limits of Solidarity","Lin Sivvi, Defiant Hero","Linden, the Steadfast Queen","Linessa, Zephyr Mage","Lingering Death","Lingering Mirage","Lingering Phantom","Lingering Souls","Lingering Tormentor","Linvala, Keeper of Silence","Linvala, Shield of Sea Gate","Linvala, the Preserver","Lion\'s Eye Diamond","Lionheart Maverick","Liquid Fire","Liquify","Liquimetal Coating","Lithatog","Lithoform Blight","Lithoform Engine","Lithomancer\'s Focus","Lithophage","Little Girl","Liturgy of Blood","Liu Bei, Lord of Shu","Live Fast","Livewire Lash","Living Airship","Living Armor","Living Artifact","Living Death","Living Destiny","Living End","Living Hive","Living Inferno","Living Lands","Living Lightning","Living Lore","Living Plane","Living Tempest","Living Terrain","Living Totem","Living Tsunami","Living Twister","Living Wall","Living Wish","Livonya Silone","Lizard Warrior","Llanowar","Llanowar Augur","Llanowar Behemoth","Llanowar Cavalry","Llanowar Dead","Llanowar Druid","Llanowar Elite","Llanowar Elves","Llanowar Empath","Llanowar Envoy","Llanowar Knight","Llanowar Mentor","Llanowar Reborn","Llanowar Scout","Llanowar Sentinel","Llanowar Tribe","Llanowar Vanguard","Llanowar Visionary","Llanowar Wastes","Llawan, Cephalid Empress","Loafing Giant","Loam Dryad","Loam Dweller","Loam Larva","Loam Lion","Loamdragger Giant","Loaming Shaman","Loathsome Catoblepas","Loathsome Chimera","Lobber Crew","Lobe Lobber","Lobotomy","Loch Dragon","Loch Korrigan","Lochmere Serpent","Locket of Yesterdays","Lockjaw Snapper","Locthwain Gargoyle","Locthwain Paladin","Locust Miser","Locust Swarm","Lodestone Bauble","Lodestone Golem","Lodestone Myr","Lofty Denial","Logic Knot","Lone Missionary","Lone Revenant","Lone Rider // It That Rides as One","Lone Wolf","Lonely Sandbar","Lonesome Unicorn // Rider in Need","Long Road Home","Long-Finned Skywhale","Long-Forgotten Gohei","Long-Term Plans","Longbow Archer","Longhorn Firebeast","Longshot Squad","Longtusk Cub","Look Skyward and Despair","Look at Me, I\'m R&D","Look at Me, I\'m the DCI","Lookout\'s Dispersal","Looming Altisaur","Looming Hoverguard","Looming Shade","Looming Spires","Loopy Lobster","Loose Lips","Looter il-Kor","Lord Magnus","Lord Windgrace","Lord of Atlantis","Lord of Extinction","Lord of Shatterskull Pass","Lord of Tresserhorn","Lord of the Accursed","Lord of the Pit","Lord of the Undead","Lord of the Unreal","Lord of the Void","Lore Broker","Lore Drakkis","Lore Seeker","Lore Weaver","Lorescale Coatl","Loreseeker\'s Stone","Lorthos, the Tidemaker","Lose Calm","Lose Hope","Lost Auramancers","Lost Hours","Lost Legacy","Lost Legion","Lost Leonin","Lost Order of Jarkeld","Lost Soul","Lost in Thought","Lost in a Labyrinth","Lost in the Mist","Lost in the Woods","Lotleth Giant","Lotleth Troll","Lotus Bloom","Lotus Blossom","Lotus Cobra","Lotus Field","Lotus Guardian","Lotus Path Djinn","Lotus Petal","Lotus Vale","Lotus-Eye Mystics","Louvaq, the Aberrant","Lovestruck Beast // Heart\'s Desire","Lovisa Coldeyes","Lowland Basilisk","Lowland Giant","Lowland Oaf","Lowland Tracker","Loxodon Anchorite","Loxodon Convert","Loxodon Gatekeeper","Loxodon Hierarch","Loxodon Hierarch Avatar","Loxodon Lifechanter","Loxodon Line Breaker","Loxodon Mender","Loxodon Mystic","Loxodon Partisan","Loxodon Peacekeeper","Loxodon Punisher","Loxodon Restorer","Loxodon Sergeant","Loxodon Smiter","Loxodon Stalwart","Loxodon Warhammer","Loxodon Wayfarer","Loyal Apprentice","Loyal Cathar // Unhallowed Cathar","Loyal Drake","Loyal Guardian","Loyal Gyrfalcon","Loyal Pegasus","Loyal Retainers","Loyal Sentry","Loyal Subordinate","Loyal Unicorn","Lu Bu, Master-at-Arms","Lu Meng, Wu General","Lu Su, Wu Advisor","Lu Xun, Scholar General","Lucent Liminid","Lucille","Lucky Clover","Ludevic\'s Test Subject // Ludevic\'s Abomination","Ludevic, Necro-Alchemist","Lukka, Coppercoat Outcast","Lull","Lullmage Mentor","Lullmage\'s Domination","Lullmage\'s Familiar","Lumbering Battlement","Lumbering Falls","Lumbering Satyr","Lumberknot","Lumengrid Augur","Lumengrid Drake","Lumengrid Gargoyle","Lumengrid Sentinel","Lumengrid Warden","Luminarch Ascension","Luminarch Aspirant","Luminate Primordial","Luminesce","Luminescent Rain","Luminous Angel","Luminous Bonds","Luminous Broodmoth","Luminous Guardian","Luminous Wake","Lumithread Field","Lunar Avenger","Lunar Force","Lunar Mystic","Lunarch Mantle","Lunge","Lunk Errant","Lupine Prototype","Lurching Rotbeast","Lure","Lure of Prey","Lurebound Scarecrow","Lurker","Lurking Arynx","Lurking Automaton","Lurking Chupacabra","Lurking Crocodile","Lurking Deadeye","Lurking Evil","Lurking Informant","Lurking Jackals","Lurking Nightstalker","Lurking Predators","Lurking Skirge","Lurrus of the Dream-Den","Lush Growth","Lust for War","Lutri, the Spellchaser","Lux Cannon","Luxa River Shrine","Luxury Suite","Lydari Druid","Lydari Elephant","Lyev Decree","Lyev Skyknight","Lymph Sliver","Lyna","Lynx","Lyra Dawnbringer","Lys Alana Bowmaster","Lys Alana Huntmaster","Lys Alana Scarblade","Lyzolda, the Blood Witch","Lyzolda, the Blood Witch Avatar","M\'Odo, the Gnarled Oracle","Ma Chao, Western Warrior","Maalfeld Twins","Macabre Mockery","Macabre Waltz","Mace of the Valiant","Macetail Hystrodon","Machinate","Mad Auntie","Mad Dog","Mad Prophet","Mad Ratter","Mad Science Fair Project","Madblind Mountain","Madcap Experiment","Madcap Skills","Maddening Cacophony","Maddening Imp","Maddening Wind","Madrush Cyclops","Maelstrom Archangel","Maelstrom Archangel Avatar","Maelstrom Djinn","Maelstrom Nexus","Maelstrom Pulse","Maelstrom Wanderer","Maga, Traitor to Mortals","Mage Slayer","Mage il-Vec","Mage\'s Guile","Mage-Ring Bully","Mage-Ring Network","Mage-Ring Responder","Magebane Armor","Magefire Wings","Mages\' Contest","Mageta the Lion","Mageta\'s Boon","Magewright\'s Stone","Maggot Carrier","Maggot Therapy","Magic Word","Magical Hack","Magical Hacker","Magister Sphinx","Magister of Worth","Magistrate\'s Scepter","Magistrate\'s Veto","Magma Burst","Magma Giant","Magma Hellion","Magma Jet","Magma Mine","Magma Phoenix","Magma Rift","Magma Sliver","Magma Spray","Magma Vein","Magmaquake","Magmaroth","Magmasaur","Magmatic Channeler","Magmatic Chasm","Magmatic Core","Magmatic Force","Magmatic Insight","Magmatic Sinkhole","Magmaw","Magnetic Flux","Magnetic Mine","Magnetic Mountain","Magnetic Theft","Magnetic Web","Magnify","Magnifying Glass","Magnigoth Treefolk","Magnivore","Magosi, the Waterveil","Magus of the Abyss","Magus of the Arena","Magus of the Balance","Magus of the Bazaar","Magus of the Candelabra","Magus of the Coffers","Magus of the Disk","Magus of the Future","Magus of the Jar","Magus of the Library","Magus of the Mind","Magus of the Mirror","Magus of the Moat","Magus of the Moon","Magus of the Scroll","Magus of the Tabernacle","Magus of the Unseen","Magus of the Vineyard","Magus of the Wheel","Magus of the Will","Mahamoti Djinn","Mairsil, the Pretender","Majestic Auricorn","Majestic Heliopterus","Majestic Myriarch","Major Teroh","Make Mischief","Make Obsolete","Make Yourself Useful","Make a Stand","Make a Wish","Makeshift Battalion","Makeshift Mannequin","Makeshift Mauler","Makeshift Munitions","Makindi Aeronaut","Makindi Griffin","Makindi Ox","Makindi Patrol","Makindi Shieldmate","Makindi Sliderunner","Makindi Stampede // Makindi Mesas","Malach of the Dawn","Malachite Golem","Malachite Talisman","Malakir Blood-Priest","Malakir Bloodwitch","Malakir Cullblade","Malakir Familiar","Malakir Rebirth // Malakir Mire","Malakir Soothsayer","Malefic Scythe","Malevolent Awakening","Malevolent Noble","Malevolent Whispers","Malfegor","Malfegor Avatar","Malfunction","Malicious Advice","Malicious Affliction","Malicious Intent","Malignant Growth","Malignus","Mammoth Harness","Mammoth Spider","Mammoth Umbra","Man of Measure","Man-o\'-War","Mana Abundance","Mana Bloom","Mana Breach","Mana Cache","Mana Chains","Mana Clash","Mana Confluence","Mana Crypt","Mana Cylix","Mana Drain","Mana Echoes","Mana Flair","Mana Flare","Mana Geode","Mana Geyser","Mana Leak","Mana Leech","Mana Matrix","Mana Maze","Mana Prism","Mana Reflection","Mana Screw","Mana Seism","Mana Severance","Mana Short","Mana Skimmer","Mana Tithe","Mana Vapors","Mana Vault","Mana Vortex","Mana Web","Mana-Charged Dragon","Manabarbs","Manabond","Manacles of Decay","Manaforce Mace","Manaforge Cinder","Managorger Hydra","Manakin","Manalith","Manamorphose","Manaplasm","Manascape Refractor","Manaweft Sliver","Mandate of Peace","Mandatory Friendship Shackles","Maned Serval","Mangara of Corondor","Mangara\'s Blessing","Mangara\'s Equity","Mangara\'s Tome","Mangara, the Diplomat","Manglehorn","Maniacal Rage","Manic Scribe","Manic Vandal","Manifest","Manifold Insights","Manifold Key","Manipulate Fate","Mannichi, the Fevered Dream","Manor Gargoyle","Manor Skeleton","Manriki-Gusari","Manta Ray","Manta Riders","Manticore Eternal","Manticore of the Gauntlet","Mantis Engine","Mantis Rider","Mantle of Leadership","Mantle of Tides","Mantle of Webs","Mantle of the Wolf","Map the Wastes","Maraleaf Pixie","Maraleaf Rider","Maralen of the Mornsong","Maralen of the Mornsong Avatar","Marang River Prowler","Marang River Skeleton","Marath, Will of the Wild","Marauder\'s Axe","Marauding Blight-Priest","Marauding Boneslasher","Marauding Knight","Marauding Looter","Marauding Maulhorn","Marauding Raptor","Maraxus","Maraxus of Keld","Marble Chalice","Marble Diamond","Marble Priest","Marble Titan","March from the Tomb","March of Souls","March of the Drowned","March of the Machines","March of the Multitudes","March of the Returned","Marchesa\'s Decree","Marchesa\'s Emissary","Marchesa\'s Infiltrator","Marchesa\'s Smuggler","Marchesa, the Black Rose","Mardu Ascendancy","Mardu Banner","Mardu Blazebringer","Mardu Charm","Mardu Hateblade","Mardu Heart-Piercer","Mardu Hordechief","Mardu Outrider","Mardu Roughrider","Mardu Runemark","Mardu Scout","Mardu Shadowspear","Mardu Skullhunter","Mardu Strike Leader","Mardu Warshrieker","Mardu Woe-Reaper","Marhault Elsdragon","Marionette Master","Marisi\'s Twinclaws","Marisi, Breaker of the Coil","Marit Lage\'s Slumber","Maritime Guard","Marjhan","Mark for Death","Mark of Asylum","Mark of Eviction","Mark of Fury","Mark of Mutiny","Mark of Sakiko","Mark of the Oni","Mark of the Vampire","Marked by Honor","Marker Beetles","Market Festival","Markov Blademaster","Markov Crusader","Markov Dreadknight","Markov Patrician","Markov Warlord","Maro","Maro Avatar","Maro\'s Gone Nuts","Marrow Bats","Marrow Chomper","Marrow Shards","Marrow-Gnawer","Marsh Boa","Marsh Casualties","Marsh Crocodile","Marsh Flats","Marsh Flitter","Marsh Gas","Marsh Goblins","Marsh Hulk","Marsh Lurker","Marsh Threader","Marsh Viper","Marshal\'s Anthem","Marshaling Cry","Marshaling the Troops","Marshdrinker Giant","Marshmist Titan","Martial Coup","Martial Glory","Martial Impetus","Martial Law","Martyr for the Cause","Martyr of Ashes","Martyr of Bones","Martyr of Dusk","Martyr of Frost","Martyr of Sands","Martyr of Spores","Martyr\'s Bond","Martyr\'s Cause","Martyr\'s Cry","Martyr\'s Soul","Martyrdom","Martyred Rusalka","Martyrs of Korlis","Martyrs\' Tomb","Marwyn, the Nurturer","Mary O\'Kill","Masako the Humorless","Mask of Avacyn","Mask of Immolation","Mask of Intolerance","Mask of Law and Grace","Mask of Memory","Mask of Riddles","Mask of the Mimic","Masked Admirers","Masked Blackguard","Masked Gorgon","Mass Appeal","Mass Calcify","Mass Diminish","Mass Hysteria","Mass Manipulation","Mass Mutiny","Mass Polymorph","Mass of Ghouls","Massacre","Massacre Girl","Massacre Totem","Massacre Wurm","Massive Raid","Master Apothecary","Master Biomancer","Master Decoy","Master Healer","Master Splicer","Master Thief","Master Transmuter","Master Trinketeer","Master Warcraft","Master of Arms","Master of Cruelties","Master of Diversion","Master of Etherium","Master of Pearls","Master of Predicaments","Master of Waves","Master of Winds","Master of the Feast","Master of the Hunt","Master of the Pearl Trident","Master of the Veil","Master of the Wild Hunt","Master of the Wild Hunt Avatar","Master the Way","Master\'s Call","Masterful Ninja","Masterful Replication","Mastermind\'s Acquisition","Masterwork of Ingenuity","Mastery of the Unseen","Masticore","Masumaro, First to Live","Matca Rioters","Mathas, Fiend Seeker","Matopi Golem","Matsu-Tribe Birdstalker","Matsu-Tribe Decoy","Matsu-Tribe Sniper","Matter Reshaper","Maul Splicer","Maul of the Skyclaves","Maulfist Doorbuster","Maulfist Revolutionary","Maulfist Squad","Mausoleum Guard","Mausoleum Harpy","Mausoleum Secrets","Mausoleum Turnkey","Mausoleum Wanderer","Maverick Thopterist","Mavren Fein, Dusk Apostle","Maw of Kozilek","Maw of the Mire","Maw of the Obzedat","Mawcor","Maximize Altitude","Maximize Velocity","May Civilization Collapse","Mayael the Anima","Mayael the Anima Avatar","Mayael\'s Aria","Mayhem Devil","Mayor of Avabruck // Howlpack Alpha","Maze Abomination","Maze Behemoth","Maze Glider","Maze Rusher","Maze Sentinel","Maze of Ith","Maze of Shadows","Maze\'s End","Mazemind Tome","Mazirek, Kraul Death Priest","Meadowboon","Meandering River","Meandering Towershell","Measure of Wickedness","Mechanized Production","Meddle","Meddling Kids","Meddling Mage","Medicine Bag","Medicine Runner","Meditate","Meditation Puzzle","Medomai the Ageless","Medomai\'s Prophecy","Meekstone","Megantic Sliver","Megatherium","Megatog","Meglonoth","Megrim","Meishin, the Mind Cage","Melancholy","Melee","Melek, Izzet Paragon","Melesse Spirit","Meletis Astronomer","Meletis Charlatan","Melira\'s Keepers","Melira, Sylvok Outcast","Meloku the Clouded Mirror","Melt Terrain","Meltdown","Melting","Memnarch","Memnite","Memorial to Folly","Memorial to Genius","Memorial to Glory","Memorial to Unity","Memorial to War","Memoricide","Memory Bank","Memory Crystal","Memory Drain","Memory Erosion","Memory Jar","Memory Lapse","Memory Leak","Memory Plunder","Memory Sluice","Memory Theft","Memory\'s Journey","Menacing Ogre","Menagerie Liberator","Mending Hands","Mending Touch","Meng Huo\'s Horde","Meng Huo, Barbarian King","Mental Agony","Mental Discipline","Mental Misstep","Mental Note","Mental Vapors","Mentor of the Meek","Mephidross Vampire","Mephitic Ooze","Mephitic Vapors","Mer Man","Mer-Ek Nightblade","Mercadia\'s Downfall","Mercadian Atlas","Mercadian Bazaar","Mercadian Lift","Mercenaries","Mercenary Informer","Mercenary Knight","Merchant Scroll","Merchant Ship","Merchant of Secrets","Merchant of the Vale // Haggle","Merchant\'s Dockhand","Merciless Eternal","Merciless Eviction","Merciless Executioner","Merciless Javelineer","Merciless Resolve","Mercurial Chemister","Mercurial Geists","Mercurial Kite","Mercurial Pretender","Mercy Killing","Meren of Clan Nel Toth","Merfolk Assassin","Merfolk Branchwalker","Merfolk Falconer","Merfolk Looter","Merfolk Mesmerist","Merfolk Mistbinder","Merfolk Observer","Merfolk Raiders","Merfolk Seastalkers","Merfolk Secretkeeper // Venture Deeper","Merfolk Seer","Merfolk Skydiver","Merfolk Skyscout","Merfolk Sovereign","Merfolk Spy","Merfolk Thaumaturgist","Merfolk Traders","Merfolk Trickster","Merfolk Wayfinder","Merfolk Windrobber","Merfolk of the Depths","Merfolk of the Pearl Trident","Merieke Ri Berit","Merrow Bonegnawer","Merrow Commerce","Merrow Grimeblotter","Merrow Harbinger","Merrow Levitator","Merrow Reejerey","Merrow Wavebreakers","Merrow Witsniper","Merseine","Mesa Chicken","Mesa Enchantress","Mesa Falcon","Mesa Lynx","Mesa Pegasus","Mesa Unicorn","Mesmeric Fiend","Mesmeric Orb","Mesmeric Sliver","Mesmeric Trance","Mesmerizing Benthid","Messenger Drake","Messenger Falcons","Messenger Jays","Messenger\'s Speed","Metagamer","Metal Fatigue","Metallic Mastery","Metallic Mimic","Metallic Rebuke","Metallic Sliver","Metallurgeon","Metallurgic Summonings","Metalspinner\'s Puzzleknot","Metalwork Colossus","Metalworker","Metamorphic Alteration","Metamorphic Wurm","Metamorphose","Metamorphosis","Metathran Aerostat","Metathran Elite","Metathran Soldier","Metathran Transport","Metathran Zombie","Meteor Blast","Meteor Crater","Meteor Golem","Meteor Shower","Meteor Storm","Meteorite","Metrognome","Metropolis Sprite","Miasmic Mummy","Michiko Konda, Truth Seeker","Michonne, Ruthless Survivor","Midlife Upgrade","Midnight Banshee","Midnight Charm","Midnight Clock","Midnight Covenant","Midnight Duelist","Midnight Entourage","Midnight Guard","Midnight Haunting","Midnight Oil","Midnight Reaper","Midnight Recovery","Midnight Ritual","Midnight Scavengers","Midsummer Revel","Midvast Protector","Might Beyond Reason","Might Makes Right","Might Sliver","Might Weaver","Might of Alara","Might of Murasa","Might of Oaks","Might of Old Krosa","Might of the Masses","Might of the Nephilim","Mightstone","Mighty Emergence","Mighty Leap","Migration Path","Migratory Greathorn","Migratory Route","Mijae Djinn","Mikaeus, the Lunarch","Mikaeus, the Unhallowed","Mikokoro, Center of the Sea","Militant Angel","Militant Inquisitor","Militant Monk","Military Intelligence","Militia Bugler","Militia\'s Pride","Millennial Gargoyle","Millikin","Millstone","Mimeofacture","Mimic Vat","Miming Slime","Mina and Denn, Wildborn","Minamo","Minamo Scrollkeeper","Minamo Sightbender","Minamo\'s Meddling","Minamo, School at Water\'s Edge","Mind Bend","Mind Bomb","Mind Burst","Mind Carver","Mind Control","Mind Drain","Mind Extraction","Mind Funeral","Mind Games","Mind Grind","Mind Harness","Mind Knives","Mind Maggots","Mind Over Matter","Mind Peel","Mind Rake","Mind Raker","Mind Ravel","Mind Rot","Mind Sculpt","Mind Shatter","Mind Slash","Mind Sludge","Mind Spring","Mind Stone","Mind Swords","Mind Twist","Mind Unbound","Mind Warp","Mind Whip","Mind\'s Desire","Mind\'s Dilation","Mind\'s Eye","Mindbender Spores","Mindblade Render","Mindblaze","Mindbreak Trap","Mindclaw Shaman","Mindcrank","Mindculling","Mindeye Drake","Mindlash Sliver","Mindleech Mass","Mindleecher","Mindless Automaton","Mindless Null","Mindlock Orb","Mindmelter","Mindmoil","Mindreaver","Minds Aglow","Mindscour Dragon","Mindshrieker","Mindslaver","Mindslicer","Mindsparker","Mindstab","Mindstab Thrull","Mindstatic","Mindstorm Crown","Mindswipe","Mindwarper","Mindwhip Sliver","Mindwrack Demon","Mindwrack Harpy","Mindwrack Liege","Mine Bearer","Mine Excavation","Mine Layer","Mine, Mine, Mine!","Miner\'s Bane","Minion Reflector","Minion of Leshrac","Minion of Tevesh Szat","Minion of the Wastes","Minion\'s Return","Minions\' Murmurs","Minister of Impediments","Minister of Inquiries","Minister of Pain","Ministrant of Obligation","Minotaur Abomination","Minotaur Aggressor","Minotaur Explorer","Minotaur Illusionist","Minotaur Skullcleaver","Minotaur Sureshot","Minotaur Tactician","Minotaur Warrior","Miracle Worker","Miraculous Recovery","Mirage Mirror","Mirari","Mirari\'s Wake","Mire Blight","Mire Boa","Mire Kavu","Mire Shade","Mire Triton","Mire in Misery","Mire\'s Grasp","Mire\'s Malice","Mire\'s Toll","Miren, the Moaning Well","Mirko Vosk, Mind Drinker","Mirozel","Mirran Crusader","Mirran Mettle","Mirran Spy","Mirri","Mirri the Cursed","Mirri the Cursed Avatar","Mirri\'s Guile","Mirri, Cat Warrior","Mirri, Weatherlight Duelist","Mirrodin Besieged","Mirrodin\'s Core","Mirror Entity","Mirror Entity Avatar","Mirror Gallery","Mirror Golem","Mirror Image","Mirror March","Mirror Match","Mirror Mirror","Mirror Mockery","Mirror Sheen","Mirror Shield","Mirror Strike","Mirror Universe","Mirror Wall","Mirror of Fate","Mirror of the Forebears","Mirror-Mad Phantasm","Mirror-Sigil Sergeant","Mirrored Depths","Mirrored Lotus","Mirrormade","Mirrorpool","Mirrorweave","Mirrorwing Dragon","Mirrorwood Treefolk","Mirrorworks","Miscalculation","Miscast","Mischief and Mayhem","Mischievous Chimera","Mischievous Poltergeist","Mischievous Quanar","Misdirection","Mise","Misers\' Cage","Misery Charm","Misfortune","Misfortune\'s Gain","Misguided Rage","Mishra","Mishra\'s Bauble","Mishra\'s Factory","Mishra\'s Groundbreaker","Mishra\'s Helix","Mishra\'s Self-Replicator","Mishra\'s Toy Workshop","Mishra\'s War Machine","Mishra\'s Workshop","Mishra, Artificer Prodigy","Misinformation","Miss Demeanor","Misshapen Fiend","Mission Briefing","Misstep","Mist Dragon","Mist Intruder","Mist Leopard","Mist Raven","Mist of Stagnation","Mist-Cloaked Herald","Mist-Syndicate Naga","Mistbind Clique","Mistblade Shinobi","Mistcaller","Mistcutter Hydra","Mistfire Adept","Mistfire Weaver","Mistfolk","Mistford River Turtle","Mistform Dreamer","Mistform Mask","Mistform Mutant","Mistform Seaswift","Mistform Shrieker","Mistform Skyreaver","Mistform Sliver","Mistform Stalker","Mistform Ultimus","Mistform Wakecaster","Mistform Wall","Mistform Warchief","Misthollow Griffin","Misthoof Kirin","Mistmeadow Skulk","Mistmeadow Witch","Mistmoon Griffin","Mistral Charger","Mistral Singer","Mistveil Plains","Mistvein Borderpost","Misty Rainforest","Mitotic Manipulation","Mitotic Slime","Mizzium Meddler","Mizzium Mortars","Mizzium Skin","Mizzium Tank","Mizzium Transreliquat","Mizzix of the Izmagnus","Mizzix\'s Mastery","Mnemonic Betrayal","Mnemonic Nexus","Mnemonic Sliver","Mnemonic Wall","Moan of the Unhallowed","Moaning Spirit","Moaning Wall","Moat","Moat Piranhas","Mob","Mob Justice","Mob Mentality","Mob Rule","Mobile Fort","Mobile Garrison","Mobilization","Mobilize","Mobilized District","Mockery of Nature","Modular Monstrosity","Mogg Alarm","Mogg Assassin","Mogg Bombers","Mogg Cannon","Mogg Conscripts","Mogg Fanatic","Mogg Flunkies","Mogg Hollows","Mogg Infestation","Mogg Jailer","Mogg Maniac","Mogg Raider","Mogg Salvage","Mogg Sentry","Mogg Squad","Mogg Toady","Mogg War Marshal","Moggcatcher","Mogis\'s Favor","Mogis\'s Marauder","Mogis\'s Warhound","Mogis, God of Slaughter","Mold Adder","Mold Demon","Mold Shambler","Molder","Molder Beast","Molder Slug","Molderhulk","Moldervine Cloak","Moldervine Reclamation","Moldgraf Monstrosity","Moldgraf Scavenger","Mole Worms","Molimo, Maro-Sorcerer","Molten Birth","Molten Blast","Molten Disaster","Molten Echoes","Molten Firebird","Molten Frame","Molten Hydra","Molten Influence","Molten Nursery","Molten Primordial","Molten Psyche","Molten Rain","Molten Ravager","Molten Sentry","Molten Slagheap","Molten Vortex","Molten-Tail Masticore","Moltensteel Dragon","Molting Harpy","Molting Skin","Molting Snakeskin","Moment of Craving","Moment of Heroism","Moment of Silence","Moment of Triumph","Moment\'s Peace","Momentary Blink","Momentous Fall","Momentum","Momentum Rumbler","Momir Vig, Simic Visionary","Momir Vig, Simic Visionary Avatar","Monastery Flock","Monastery Loremaster","Monastery Mentor","Monastery Siege","Monastery Swiftspear","Mondronen Shaman // Tovolar\'s Magehunter","Mongrel Pack","Moniker Mage","Monk Idealist","Monk Realist","Monkey Cage","Monkey Monkey Monkey","Monkey-","Monomania","Mons\'s Goblin Raiders","Mons\'s Goblin Waiters","Monsoon","Monstrify","Monstrous Carabid","Monstrous Growth","Monstrous Hound","Monstrous Onslaught","Monstrous Step","Moodmark Painter","Moon Heron","Moon Sprite","Moon-Eating Dog","Moonblade Shinobi","Moonbow Illusionist","Moonglove Changeling","Moonglove Extract","Moonglove Winnower","Moonhold","Moonlace","Moonlight Bargain","Moonlight Geist","Moonlight Hunt","Moonlit Scavengers","Moonlit Strider","Moonlit Wake","Moonmist","Moonring Island","Moonring Mirror","Moonsilver Spear","Moonveil Dragon","Moonwing Moth","Moor Fiend","Moorish Cavalry","Moorland Drifter","Moorland Haunt","Moorland Inquisitor","Morale","Morality Shift","Moratorium Stone","Moraug, Fury of Akoum","Morbid Bloom","Morbid Curiosity","Morbid Hunger","Morbid Plunder","Mordant Dragon","More or Less","Morgue Burst","Morgue Theft","Morgue Thrull","Morgue Toad","Morinfen","Morinfen Avatar","Moriok Reaver","Moriok Replica","Moriok Rigger","Moriok Scavenger","Morkrut Banshee","Morkrut Necropod","Morningtide","Moroii","Morophon, the Boundless","Morph","Morphic Pool","Morphic Tide","Morphling","Morsel Theft","Morselhoarder","Mortal Combat","Mortal Flesh Is Weak","Mortal Obstinacy","Mortal Wound","Mortal\'s Ardor","Mortal\'s Resolve","Mortarpod","Mortician Beetle","Mortify","Mortipede","Mortiphobia","Mortis Dogs","Mortivore","Mortuary","Mortuary Mire","Mortus Strider","Mosquito Guard","Moss Diamond","Moss Kami","Moss Monster","Moss Viper","Moss-Pit Skeleton","Mossbridge Troll","Mosscoat Goriak","Mossdog","Mossfire Egg","Mossfire Valley","Mosstodon","Mosswort Bridge","Mothdust Changeling","Mother Bear","Mother Kangaroo","Mother of Goons","Mother of Runes","Mothrider Samurai","Mount Keralia","Mountain","Mountain Bandit","Mountain Goat","Mountain Stronghold","Mountain Titan","Mountain Valley","Mountain Yeti","Mounted Archers","Mourner\'s Shield","Mournful Zombie","Mourning","Mourning Thrull","Mournwhelk","Mournwillow","Mouth // Feed","Mouth of Ronom","Mouth to Mouth","Mowu, Loyal Companion","Mox Amber","Mox Diamond","Mox Emerald","Mox Jet","Mox Lotus","Mox Opal","Mox Pearl","Mox Ruby","Mox Sapphire","Mox Tantalite","Mtenda Griffin","Mtenda Herder","Mtenda Lion","Mu Yanling","Mu Yanling, Celestial Wind","Mu Yanling, Sky Dancer","Muck Drubb","Muck Rats","Mudbrawler Cohort","Mudbrawler Raiders","Mudbutton Clanger","Mudbutton Torchrunner","Muddle the Mixture","Mudhole","Mudslide","Mugging","Mul Daya Channelers","Mulch","Muldrotha, the Gravetide","Mulldrifter","Multani","Multani\'s Acolyte","Multani\'s Decree","Multani\'s Harmony","Multani\'s Presence","Multani, Maro-Sorcerer","Multani, Yavimaya\'s Avatar","Multi-Headed","Multiform Wonder","Mummy Paramount","Munda\'s Vanguard","Munda, Ambush Leader","Mundungu","Mungha Wurm","Munitions Expert","Muraganda Petroglyphs","Murasa","Murasa Behemoth","Murasa Brute","Murasa Pyromancer","Murasa Ranger","Murasa Rootgrazer","Murasa Sproutling","Murder","Murder Investigation","Murder of Crows","Murderer\'s Axe","Murderous Betrayal","Murderous Compulsion","Murderous Cut","Murderous Redcap","Murderous Redcap Avatar","Murderous Rider // Swift End","Murderous Spoils","Murgish Cemetery","Murk Dwellers","Murk Strider","Murkfiend Liege","Murmuring Bosk","Murmuring Mystic","Murmuring Phantasm","Murmurs from Beyond","Muscle Burst","Muscle Sliver","Muse Drake","Muse Vessel","Musician","Mutagenic Growth","Mutant\'s Prey","Mutavault","Mutilate","Mutiny","Mutual Destruction","Mutual Epiphany","Muxus, Goblin Grandee","Muzzio\'s Preparations","Muzzio, Visionary Architect","Muzzle","Mwonvuli Acid-Moss","Mwonvuli Beast Tracker","Mwonvuli Ooze","My Crushing Masterstroke","My First Tome","My Forces Are Innumerable","My Genius Knows No Bounds","My Laughter Echoes","My Undead Horde Awakens","My Wish Is Your Command","Mycoid Shepherd","Mycologist","Mycoloth","Mycosynth Fiend","Mycosynth Golem","Mycosynth Lattice","Mycosynth Wellspring","Myojin of Cleansing Fire","Myojin of Infinite Rage","Myojin of Life\'s Web","Myojin of Night\'s Reach","Myojin of Seeing Winds","Myr Adapter","Myr Battlesphere","Myr Enforcer","Myr Galvanizer","Myr Incubator","Myr Landshaper","Myr Matrix","Myr Mindservant","Myr Moonvessel","Myr Propagator","Myr Prototype","Myr Quadropod","Myr Reservoir","Myr Retriever","Myr Servitor","Myr Sire","Myr Superion","Myr Turbine","Myr Welder","Myriad Construct","Myriad Landscape","Myrsmith","Mysteries of the Deep","Mysterious Egg","Mysterious Pathlighter","Mystic Archaeologist","Mystic Barrier","Mystic Compass","Mystic Confluence","Mystic Crusader","Mystic Decree","Mystic Denial","Mystic Enforcer","Mystic Familiar","Mystic Forge","Mystic Gate","Mystic Genesis","Mystic Meditation","Mystic Melting","Mystic Might","Mystic Monastery","Mystic Penitent","Mystic Remora","Mystic Repeal","Mystic Restraints","Mystic Retrieval","Mystic Sanctuary","Mystic Skyfish","Mystic Snake","Mystic Speculation","Mystic Subdual","Mystic Veil","Mystic Visionary","Mystic Zealot","Mystic of the Hidden Way","Mystical Dispute","Mystical Teachings","Mystical Tutor","Mystifying Maze","Myth Realized","Myth Unbound","Mythic Proportions","Mythos of Brokkos","Mythos of Illuna","Mythos of Nethroi","Mythos of Snapdax","Mythos of Vadrok","Márton Stromgald","Naar Isle","Naban, Dean of Iteration","Nacatl Hunt-Pride","Nacatl Outlander","Nacatl Savage","Nacatl War-Pride","Nacre Talisman","Nadir Kraken","Nafs Asp","Naga Eternal","Naga Oracle","Naga Vitalist","Nagao, Bound by Honor","Nagging Thoughts","Nahiri\'s Binding","Nahiri\'s Lithoforming","Nahiri\'s Machinations","Nahiri\'s Stoneblades","Nahiri\'s Wrath","Nahiri, Heir of the Ancients","Nahiri, Storm of Stone","Nahiri, the Harbinger","Nahiri, the Lithomancer","Naiad of Hidden Coves","Najeela, the Blade-Blossom","Nakaya Shade","Naked Singularity","Nalathni Dragon","Name Dropping","Nameless Inversion","Nameless One","Nameless Race","Nantuko Blightcutter","Nantuko Calmer","Nantuko Cultivator","Nantuko Disciple","Nantuko Elder","Nantuko Husk","Nantuko Mentor","Nantuko Monastery","Nantuko Shade","Nantuko Shaman","Nantuko Shrine","Nantuko Tracer","Nantuko Vigilante","Narcissism","Narcolepsy","Narcomoeba","Narnam Cobra","Narnam Renegade","Narrow Escape","Narset Transcendent","Narset of the Ancient Way","Narset\'s Reversal","Narset, Enlightened Master","Narset, Parter of Veils","Narstad Scrapper","Naru Meha, Master Wizard","Narwhal","Nascent Metamorph","Nath of the Gilt-Leaf","Nath\'s Buffoon","Nath\'s Elite","Natural Affinity","Natural Balance","Natural Connection","Natural Emergence","Natural End","Natural Obsolescence","Natural Order","Natural Selection","Natural Spring","Natural State","Natural Unity","Naturalize","Nature Demands an Offering","Nature Shields Its Own","Nature\'s Blessing","Nature\'s Chant","Nature\'s Chosen","Nature\'s Claim","Nature\'s Cloak","Nature\'s Kiss","Nature\'s Lore","Nature\'s Panoply","Nature\'s Resurgence","Nature\'s Revolt","Nature\'s Ruin","Nature\'s Spiral","Nature\'s Way","Nature\'s Will","Nature\'s Wrath","Naughty // Nice","Nausea","Nav Squad Commandos","Navigator\'s Compass","Navigator\'s Ruin","Naya","Naya Battlemage","Naya Charm","Naya Hushblade","Naya Panorama","Naya Sojourners","Naya Soulbeast","Nazahn, Revered Bladesmith","Near-Death Experience","Nearheath Chaplain","Nearheath Pilgrim","Nearheath Stalker","Nebelgast Herald","Nebuchadnezzar","Neck Snap","Neck Tangle","Necra Disciple","Necra Sanctuary","Necratog","Necravolver","Necrite","Necro-Impotence","Necrobite","Necrogen Censer","Necrogen Mists","Necrogen Scudder","Necrogen Spellbomb","Necrogenesis","Necrologia","Necromancer\'s Assistant","Necromancer\'s Covenant","Necromancer\'s Magemark","Necromancer\'s Stockpile","Necromancy","Necromantic Selection","Necromantic Summons","Necromantic Thirst","Necromaster Dragon","Necromentia","Necropanther","Necropede","Necroplasm","Necropolis","Necropolis Fiend","Necropolis Regent","Necropolis of Azar","Necropotence","Necropotence Avatar","Necropouncer","Necrosavant","Necroskitter","Necrotic Ooze","Necrotic Plague","Necrotic Sliver","Necrotic Wound","Nectar Faerie","Need for Speed","Needle Drop","Needle Specter","Needle Spires","Needle Storm","Needlebite Trap","Needlebug","Needlepeak Spider","Needleshot Gourna","Needletooth Raptor","Needleverge Pathway // Pillarverge Pathway","Nef-Crop Entangler","Nefarious Lich","Nefarox, Overlord of Grixis","Nefashu","Negan, the Cold-Blooded","Negate","Neglected Heirloom // Ashmouth Blade","Neheb, Dreadhorde Champion","Neheb, the Eternal","Neheb, the Worthy","Neko-Te","Nekrataal","Nekrataal Avatar","Nekusar, the Mindrazer","Nema Siltlurker","Nemata, Grove Guardian","Nemesis Mask","Nemesis Trap","Nemesis of Mortals","Nemesis of Reason","Neoform","Nephalia","Nephalia Academy","Nephalia Drownyard","Nephalia Moondrakes","Nephalia Seakite","Nephalia Smuggler","Nerf War","Nessian Asp","Nessian Boar","Nessian Courser","Nessian Demolok","Nessian Game Warden","Nessian Hornbeetle","Nessian Wanderer","Nessian Wilds Ravager","Nest Invader","Nest Robber","Nest of Scarabs","Nested Ghoul","Nesting Dragon","Nesting Grounds","Nesting Wurm","Netcaster Spider","Nether Horror","Nether Shadow","Nether Spirit","Nether Traitor","Nether Void","Netherborn Altar","Netherborn Phalanx","Nethroi, Apex of Death","Netter en-Dal","Nettle Drone","Nettle Sentinel","Nettle Swine","Nettletooth Djinn","Nettlevine Blight","Nettling Curse","Nettling Imp","Neural Network","Neurok Commando","Neurok Familiar","Neurok Hoversail","Neurok Invisimancer","Neurok Prodigy","Neurok Replica","Neurok Spy","Neurok Stealthsuit","Neurok Transmuter","Neutralize","Neutralizing Blast","Never // Return","Never Happened","Neverending Torment","Nevermaker","Nevermore","Nevinyrral\'s Disk","New Benalia","New Blood","New Frontiers","New Horizons","New Perspectives","New Prahv Guildmage","Nexus Wardens","Nexus of Fate","Neyith of the Dire Hunt","Nezahal, Primal Tide","Nezumi Bone-Reader","Nezumi Cutthroat","Nezumi Graverobber // Nighteyes the Desecrator","Nezumi Ronin","Nezumi Shadow-Watcher","Nezumi Shortfang // Stabwhisker the Odious","Niall Silvain","Niambi, Esteemed Speaker","Niambi, Faithful Healer","Niblis of Dusk","Niblis of Frost","Niblis of the Breath","Niblis of the Mist","Niblis of the Urn","Nicol Bolas","Nicol Bolas, Dragon-God","Nicol Bolas, God-Pharaoh","Nicol Bolas, Planeswalker","Nicol Bolas, the Deceiver","Nicol Bolas, the Ravager // Nicol Bolas, the Arisen","Night // Day","Night Dealings","Night Incarnate","Night Market Aeronaut","Night Market Guard","Night Market Lookout","Night Revelers","Night Soil","Night Terrors","Night of Souls\' Betrayal","Night\'s Whisper","Nightbird\'s Clutches","Nightcreep","Nightfire Giant","Nightguard Patrol","Nighthawk Scavenger","Nighthaze","Nighthowler","Nightmare","Nightmare Incursion","Nightmare Lash","Nightmare Moon // Princess Luna","Nightmare Shepherd","Nightmare Unmaking","Nightmare Void","Nightmare\'s Thirst","Nightmarish End","Nightpack Ambusher","Nightscape Apprentice","Nightscape Battlemage","Nightscape Familiar","Nightscape Master","Nightshade Assassin","Nightshade Peddler","Nightshade Schemers","Nightshade Seer","Nightshade Stinger","Nightsky Mimic","Nightsnare","Nightsoil Kami","Nightsquad Commando","Nightstalker Engine","Nightveil Predator","Nightveil Specter","Nightveil Sprite","Nightwind Glider","Nightwing Shade","Nihil Spellbomb","Nihilistic Glee","Nihilith","Nikara, Lair Scavenger","Nikko-Onna","Nikya of the Old Ways","Nim Abomination","Nim Deathmantle","Nim Devourer","Nim Grotesque","Nim Lasher","Nim Replica","Nim Shambler","Nim Shrieker","Nimana Sell-Sword","Nimana Skitter-Sneak","Nimana Skydancer","Nimble Birdsticker","Nimble Innovator","Nimble Mongoose","Nimble Obstructionist","Nimble Pilferer","Nimble Trapfinder","Nimble-Blade Khenra","Nimbus Champion","Nimbus Maze","Nimbus Naiad","Nimbus Swimmer","Nimbus Wings","Nimbus of the Isles","Nin, the Pain Artist","Nine Lives","Nine-Ringed Bo","Nine-Tail White Fox","Ninja","Ninja of the Deep Hours","Ninja of the New Moon","Ninth Bridge Patrol","Nip Gwyllion","Nira, Hellkite Duelist","Nirkana Assassin","Nirkana Cutthroat","Nirkana Revenant","Nissa Revane","Nissa of Shadowed Boughs","Nissa\'s Chosen","Nissa\'s Defeat","Nissa\'s Encouragement","Nissa\'s Expedition","Nissa\'s Judgment","Nissa\'s Pilgrimage","Nissa\'s Renewal","Nissa\'s Revelation","Nissa\'s Triumph","Nissa\'s Zendikon","Nissa, Genesis Mage","Nissa, Nature\'s Artisan","Nissa, Steward of Elements","Nissa, Vastwood Seer // Nissa, Sage Animist","Nissa, Vital Force","Nissa, Voice of Zendikar","Nissa, Who Shakes the World","Nissa, Worldwaker","Niv-Mizzet Reborn","Niv-Mizzet, Dracogenius","Niv-Mizzet, Parun","Niv-Mizzet, the Firemind","Niveous Wisps","Nivix Barrier","Nivix Cyclops","Nivix Guildmage","Nivix, Aerie of the Firemind","Nivmagus Elemental","Nix","No Escape","No Mercy","No One Will Hear Your Cries","No Quarter","No Rest for the Wicked","No-Dachi","Nobilis of War","Noble Banneret","Noble Benefactor","Noble Elephant","Noble Hierarch","Noble Panther","Noble Purpose","Noble Quarry","Noble Stand","Noble Steeds","Noble Templar","Noble Vestige","Nocturnal Feeder","Nocturnal Raid","Noetic Scales","Noggin Whack","Noggle Bandit","Noggle Bridgebreaker","Noggle Hedge-Mage","Noggle Ransacker","Nomad Decoy","Nomad Mythmaker","Nomad Outpost","Nomad Stadium","Nomadic Elf","Nomads en-Kor","Nomads\' Assembly","Noose Constrictor","Noosegraf Mob","Norin the Wary","Norn\'s Annex","Norn\'s Dominion","Norritt","North Star","Northern Paladin","Norwood Archers","Norwood Priestess","Norwood Ranger","Norwood Riders","Norwood Warrior","Nostalgic Dreams","Nosy Goblin","Not Forgotten","Not of This World","Nothing Can Stop Me Now","Notion Rain","Notion Thief","Notorious Assassin","Notorious Throng","Nourish","Nourishing Shoal","Nova Chaser","Nova Cleric","Nova Pentacle","Novablast Wurm","Novellamental","Novice Knight","Novijen Sages","Novijen, Heart of Progress","Now I Know My ABC\'s","Noxious Bayou","Noxious Dragon","Noxious Field","Noxious Gearhulk","Noxious Ghoul","Noxious Grasp","Noxious Groodion","Noxious Hatchling","Noxious Hydra Breath","Noxious Revival","Noxious Toad","Noxious Vapors","Noyan Dar, Roil Shaper","Nucklavee","Nuisance Engine","Null Brooch","Null Caller","Null Chamber","Null Champion","Null Profusion","Null Rod","Nullhide Ferox","Nullify","Nullmage Advocate","Nullmage Shepherd","Nullpriest of Oblivion","Nullstone Gargoyle","Nulltread Gargantuan","Numai Outcast","Number Crunch","Numbing Dose","Numbing Jellyfish","Numot, the Devastator","Nurturer Initiate","Nurturing Licid","Nurturing Peatland","Nut Collector","Nykthos, Shrine to Nyx","Nylea\'s Colossus","Nylea\'s Disciple","Nylea\'s Emissary","Nylea\'s Forerunner","Nylea\'s Huntmaster","Nylea\'s Intervention","Nylea\'s Presence","Nylea, God of the Hunt","Nylea, Keen-Eyed","Nyx Herald","Nyx Infusion","Nyx Lotus","Nyx Weaver","Nyx-Fleece Ram","Nyxathid","Nyxbloom Ancient","Nyxborn Brute","Nyxborn Colossus","Nyxborn Courser","Nyxborn Eidolon","Nyxborn Marauder","Nyxborn Rollicker","Nyxborn Seaguard","Nyxborn Shieldmate","Nyxborn Triton","Nyxborn Wolf","O-Kagachi, Vengeful Kami","O-Naginata","Oak Street Innkeeper","Oaken Brawler","Oaken Power Suit","Oakenform","Oakgnarl Warrior","Oakhame Adversary","Oakhame Ranger // Bring Back","Oakheart Dryads","Oashra Cultivator","Oasis","Oasis Ritualist","Oath of Ajani","Oath of Chandra","Oath of Druids","Oath of Ghouls","Oath of Gideon","Oath of Jace","Oath of Kaya","Oath of Lieges","Oath of Liliana","Oath of Lim-Dûl","Oath of Mages","Oath of Nissa","Oath of Scholars","Oath of Teferi","Oath of the Ancient Wood","Oathkeeper, Takeno\'s Daisho","Oathsworn Giant","Oathsworn Knight","Oathsworn Vampire","Ob Nixilis Reignited","Ob Nixilis of the Black Oath","Ob Nixilis\'s Cruelty","Ob Nixilis, Unshackled","Ob Nixilis, the Fallen","Ob Nixilis, the Hate-Twisted","Obelisk Spider","Obelisk of Alara","Obelisk of Bant","Obelisk of Esper","Obelisk of Grixis","Obelisk of Jund","Obelisk of Naya","Obelisk of Undoing","Obelisk of Urd","Oblation","Obliterate","Oblivion Crown","Oblivion Ring","Oblivion Sower","Oblivion Stone","Oblivion Strike","Oblivion\'s Hunger","Oboro Breezecaller","Oboro Envoy","Oboro, Palace in the Clouds","Obosh, the Preypiercer","Obscuring Aether","Obscuring Haze","Observant Alseid","Obsessive Search","Obsessive Skinner","Obsessive Stitcher","Obsianus Golem","Obsidian Acolyte","Obsidian Battle-Axe","Obsidian Fireheart","Obsidian Giant","Obstinate Baloth","Obstinate Familiar","Obuun, Mul Daya Ancestor","Obzedat\'s Aid","Obzedat, Ghost Council","Ochran Assassin","Octoprophet","Octopus Umbra","Ocular Halo","Oculus","Oddly Uneven","Odds // Ends","Odious Trow","Odric, Lunarch Marshal","Odric, Master Tactician","Odunos River Trawler","Odylic Wraith","Of One Mind","Off Balance","Offalsnout","Offering to Asha","Offspring\'s Revenge","Ogre Arsonist","Ogre Battledriver","Ogre Berserker","Ogre Enforcer","Ogre Errant","Ogre Gatecrasher","Ogre Geargrabber","Ogre Jailbreaker","Ogre Leadfoot","Ogre Marauder","Ogre Menial","Ogre Painbringer","Ogre Recluse","Ogre Resister","Ogre Savant","Ogre Sentry","Ogre Shaman","Ogre Siegebreaker","Ogre Slumlord","Ogre Taskmaster","Ogre Warrior","Ogre\'s Cleaver","Ohran Frostfang","Ohran Viper","Ohran Yeti","Ojutai Exemplars","Ojutai Interceptor","Ojutai Monument","Ojutai\'s Breath","Ojutai\'s Command","Ojutai\'s Summons","Ojutai, Soul of Winter","Okaun, Eye of Chaos","Oketra the True","Oketra\'s Attendant","Oketra\'s Avenger","Oketra\'s Last Mercy","Oketra\'s Monument","Okiba-Gang Shinobi","Okina Nightwatch","Okina, Temple to the Grandfathers","Okk","Oko\'s Accomplices","Oko\'s Hospitality","Oko, Thief of Crowns","Oko, the Trickster","Ol\' Buzzbark","Old Fogey","Old Ghastbark","Old Guard","Old Man of the Sea","Old-Fashioned Vampire","Old-Growth Dryads","Olivia Voldaren","Olivia\'s Bloodsworn","Olivia\'s Dragoon","Olivia, Mobilized for War","Oloro, Ageless Ascetic","Omega Myr","Omen","Omen Machine","Omen of Fire","Omen of the Dead","Omen of the Forge","Omen of the Hunt","Omen of the Sea","Omen of the Sun","Omenspeaker","Ominous Seas","Ominous Sphinx","Omnath, Locus of Creation","Omnath, Locus of Mana","Omnath, Locus of Rage","Omnath, Locus of the Roil","Omnibian","Omniscience","Omnispell Adept","On Serra\'s Wings","On Thin Ice","Onakke Catacomb","Onakke Ogre","Once More with Feeling","Once Upon a Time","Once and Future","Ondu Champion","Ondu Cleric","Ondu Giant","Ondu Greathorn","Ondu Inversion // Ondu Skyruins","Ondu Rising","Ondu War Cleric","One Dozen Eyes","One Thousand Lashes","One With the Wind","One with Death","One with Nature","One with Nothing","One with the Machine","One with the Stars","One-Eyed Scarecrow","Oneirophage","Ongoing Investigation","Oni Possession","Oni of Wild Places","Oni of Wild Places Avatar","Only Blood Ends Your Nightmares","Onslaught","Onulet","Onward // Victory","Onyx Goblet","Onyx Mage","Onyx Talisman","Oona\'s Blackguard","Oona\'s Gatewarden","Oona\'s Grace","Oona\'s Prowler","Oona, Queen of the Fae","Ooze Flux","Ooze Garden","Opal Acrolith","Opal Archangel","Opal Avenger","Opal Caryatid","Opal Champion","Opal Gargoyle","Opal Guardian","Opal Lake Gatekeepers","Opal Palace","Opal Titan","Opal-Eye, Konda\'s Yojimbo","Opalescence","Opaline Bracers","Opaline Sliver","Opaline Unicorn","Open Fire","Open into Wonder","Open the Armory","Open the Gates","Open the Graves","Open the Vaults","Ophidian","Ophidian Eye","Ophiomancer","Opportunist","Opportunistic Dragon","Opportunity","Opposition","Oppression","Oppressive Rays","Oppressive Will","Opt","Optical Optimizer","Optimus Prime, Inspiring Leader","Opulent Palace","Oracle","Oracle en-Vec","Oracle of Bones","Oracle of Dust","Oracle of Mul Daya","Oracle of Nectars","Oracle\'s Attendants","Oracle\'s Insight","Oracle\'s Vault","Orah, Skyclave Hierophant","Oran-Rief Hydra","Oran-Rief Invoker","Oran-Rief Ooze","Oran-Rief Recluse","Oran-Rief Survivalist","Oran-Rief, the Vastwood","Orator of Ojutai","Oraxid","Orazca Frillback","Orazca Raptor","Orazca Relic","Orb of Dreams","Orbs of Warding","Orbweaver Kumo","Orc General","Orc Sureshot","Orchard Elemental","Orchard Spirit","Orchard Warden","Orcish Artillery","Orcish Bloodpainter","Orcish Cannonade","Orcish Cannoneers","Orcish Captain","Orcish Catapult","Orcish Conscripts","Orcish Farmer","Orcish Healer","Orcish Hellraiser","Orcish Librarian","Orcish Lumberjack","Orcish Mechanics","Orcish Mine","Orcish Oriflamme","Orcish Paratroopers","Orcish Settlers","Orcish Spy","Orcish Squatters","Orcish Squatters Avatar","Orcish Vandal","Orcish Veteran","Ordeal of Erebos","Ordeal of Heliod","Ordeal of Nylea","Ordeal of Purphoros","Ordeal of Thassa","Order // Chaos","Order of Leitbur","Order of Midnight // Alter Fate","Order of Succession","Order of Whiteclay","Order of Yawgmoth","Order of the Ebon Hand","Order of the Golden Cricket","Order of the Sacred Bell","Order of the Sacred Torch","Order of the Stars","Order of the White Shield","Ordered Migration","Ordinary Pony","Ordruun Commando","Ordruun Veteran","Ore Gorger","Ore-Scale Guardian","Oread of Mountain\'s Blaze","Oreskos Explorer","Oreskos Sun Guide","Oreskos Swiftclaw","Organ Grinder","Organ Harvest","Orgg","Origin Spellbomb","Orim","Orim\'s Chant","Orim\'s Cure","Orim\'s Prayer","Orim\'s Thunder","Orim\'s Touch","Orim, Samite Healer","Oriss, Samite Guardian","Ormos, Archive Keeper","Ornamental Courage","Ornate Kanzashi","Ornery Dilophosaur","Ornery Goblin","Ornery Kudu","Ornitharch","Ornithopter","Orochi Colony","Orochi Eggwatcher // Shidako, Broodmistress","Orochi Hatchery","Orochi Leafcaller","Orochi Ranger","Orochi Sustainer","Oros, the Avenger","Orzhov Advokist","Orzhov Basilica","Orzhov Charm","Orzhov Cluestone","Orzhov Enforcer","Orzhov Euthanist","Orzhov Guildgate","Orzhov Guildmage","Orzhov Keyrune","Orzhov Locket","Orzhov Pontiff","Orzhov Racketeers","Orzhov Signet","Orzhova","Orzhova, the Church of Deals","Osai Vultures","Ostiary Thrull","Ostracize","Otaria","Otarian Juggernaut","Otepec Huntmaster","Otherworld Atlas","Otherworldly Journey","Otherworldly Outburst","Otrimi, the Ever-Playful","Oubliette","Ouphe Vandals","Our Market Research Shows That Players Like Really Long Card Names So We Made this Card to Have the Absolute Longest Card Name Ever Elemental","Oust","Out of Bounds","Outbreak","Outflank","Outland Boar","Outland Colossus","Outlaws\' Merriment","Outmaneuver","Outmuscle","Outnumber","Outpost Siege","Outrage Shaman","Outrider en-Kor","Outrider of Jhess","Outwit","Ovalchase Daredevil","Ovalchase Dragster","Over My Dead Bodies","Overabundance","Overbeing of Myth","Overblaze","Overburden","Overcome","Overeager Apprentice","Overflowing Insight","Overgrown Armasaur","Overgrown Battlement","Overgrown Estate","Overgrown Tomb","Overgrowth","Overgrowth Elemental","Overlaid Terrain","Overload","Overmaster","Override","Overrule","Overrun","Overseer of the Damned","Oversold Cemetery","Oversoul of Dusk","Overt Operative","Overtaker","Overwhelm","Overwhelmed Apprentice","Overwhelming Denial","Overwhelming Forces","Overwhelming Instinct","Overwhelming Intellect","Overwhelming Splendor","Overwhelming Stampede","Ovinize","Ovinomancer","Oviya Pashiri, Sage Lifecrafter","Ow","Owl Familiar","Ox of Agonas","Oxidda Daredevil","Oxidda Golem","Oxidda Scrapmelter","Oxidize","Oyobi, Who Split the Heavens","Pacification Array","Pacifism","Pack Guardian","Pack Hunt","Pack Leader","Pack Mastiff","Pack Rat","Pack\'s Disdain","Pack\'s Favor","Pact of Negation","Pact of the Titan","Padeem, Consul of Innovation","Pain // Suffering","Pain Kami","Pain Magnification","Pain Seer","Pain\'s Reward","Painbringer","Painful Lesson","Painful Memories","Painful Quandary","Painful Truths","Painiac","Painsmith","Painted Bluffs","Painter\'s Servant","Painwracker Oni","Paired Tactician","Pako, Arcane Retriever","Palace Familiar","Palace Guard","Palace Jailer","Palace Sentinels","Palace Siege","Paladin en-Vec","Paladin of Atonement","Paladin of Prahv","Paladin of the Bloodstained","Pale Bears","Pale Moon","Pale Recluse","Pale Rider of Trostad","Pale Wayfarer","Paleoloth","Paliano Vanguard","Paliano, the High City","Palinchron","Palisade Giant","Palladia-Mors","Palladia-Mors, the Ruiner","Palladium Myr","Palliation Accord","Pallid Mycoderm","Pallimud","Panacea","Pandemonium","Pandora\'s Box","Pang Tong, \\"Young Phoenix\\"","Panglacial Wurm","Pangosaur","Panharmonicon","Panic","Panic Attack","Panic Spellbomb","Panoptic Mirror","Panopticon","Panther Warriors","Paper Tiger","Paperfin Rascal","Paradigm Shift","Paradise Druid","Paradise Mantle","Paradise Plume","Paradox Engine","Paradox Haze","Paradoxical Outcome","Paragon of Eternal Wilds","Paragon of Fierce Defiance","Paragon of Gathering Mists","Paragon of New Dawns","Paragon of Open Graves","Paragon of the Amesha","Parallax Dementia","Parallax Inhibitor","Parallax Nexus","Parallax Tide","Parallax Wave","Parallectric Feedback","Parallel Evolution","Parallel Lives","Parallel Thoughts","Paralyze","Paralyzing Grasp","Paranoid Delusions","Paranoid Parish-Blade","Parapet","Parapet Watchers","Paraselene","Parasitic Bond","Parasitic Impetus","Parasitic Implant","Parasitic Strix","Parcelbeast","Parch","Pardic Arsonist","Pardic Collaborator","Pardic Dragon","Pardic Firecat","Pardic Lancer","Pardic Miner","Pardic Swordsmith","Pardic Wanderer","Parhelion II","Parhelion Patrol","Pariah","Pariah\'s Shield","Paroxysm","Part Water","Part the Veil","Part the Waterveil","Parting Thoughts","Party Crasher","Pashalik Mons","Passwall Adept","Past in Flames","Patagia Golem","Patagia Tiger","Patagia Viper","Patchwork Gnomes","Path of Ancestry","Path of Anger\'s Flame","Path of Bravery","Path of Discovery","Path of Mettle // Metzali, Tower of Triumph","Path of Peace","Path to Exile","Pathbreaker Ibex","Pathbreaker Wurm","Pathmaker Initiate","Pathrazer of Ulamog","Pathway Arrows","Patient Rebuilding","Patient Turtle","Patriarch\'s Bidding","Patriarch\'s Desire","Patrician\'s Scorn","Patrol Hound","Patrol Signaler","Patron Wizard","Patron of the Akki","Patron of the Kitsune","Patron of the Moon","Patron of the Nezumi","Patron of the Orochi","Patron of the Valiant","Patron of the Vein","Patron of the Wild","Pattern Matcher","Pattern of Rebirth","Paupers\' Cage","Pause for Reflection","Pavel Maliki","Pawn of Ulamog","Pay No Heed","Pay Tribute to Me","Peace Strider","Peace Talks","Peace and Quiet","Peace of Mind","Peacekeeper","Peacekeeper Avatar","Peacewalker Colossus","Peach Garden Oath","Peak Eruption","Pearl Dragon","Pearl Lake Ancient","Pearl Medallion","Pearl Shard","Pearled Unicorn","Pearlspear Courier","Peat Bog","Pedantic Learning","Peek","Peel from Reality","Peema Aether-Seer","Peema Outrider","Peer Pressure","Peer Through Depths","Peer into the Abyss","Pegasus Charger","Pegasus Courser","Pegasus Refuge","Pegasus Stampede","Pelakka Predation // Pelakka Caverns","Pelakka Wurm","Pelt Collector","Pemmin\'s Aura","Penance","Pendant of Prosperity","Pendelhaven","Pendelhaven Elder","Pendrell Drake","Pendrell Flux","Pendrell Mists","Pendulum of Patterns","Pennon Blade","Pensive Minotaur","Pentad Prism","Pentagram of the Ages","Pentarch Paladin","Pentarch Ward","Pentavus","Penumbra Bobcat","Penumbra Kavu","Penumbra Spider","Penumbra Wurm","People of the Woods","Peppersmoke","Peregrination","Peregrine Drake","Peregrine Griffin","Peregrine Mask","Perhaps You\'ve Met My Cohort","Perilous Forays","Perilous Myr","Perilous Predicament","Perilous Research","Perilous Shadow","Perilous Vault","Perilous Voyage","Perimeter Captain","Perimeter Sergeant","Perish","Perish the Thought","Permafrost Trap","Permeating Mass","Pernicious Deed","Perpetual Timepiece","Perplex","Perplexing Chimera","Persecute","Persecute Artist","Persistent Petitioners","Personal Decoy","Personal Incarnation","Personal Sanctuary","Personal Tutor","Persuasion","Pestermite","Pestilence","Pestilence Demon","Pestilence Rats","Pestilent Haze","Pestilent Kathari","Pestilent Souleater","Pestilent Spirit","Pet Project","Petalmane Baku","Petals of Insight","Petra Sphinx","Petradon","Petrahydrox","Petravark","Petrified Field","Petrified Plating","Petrified Wood-Kin","Pewter Golem","Phage the Untouchable","Phage the Untouchable Avatar","Phalanx Formation","Phalanx Leader","Phalanx Tactics","Phantasmagorian","Phantasmal Abomination","Phantasmal Bear","Phantasmal Dragon","Phantasmal Fiend","Phantasmal Forces","Phantasmal Form","Phantasmal Image","Phantasmal Mount","Phantasmal Sphere","Phantasmal Terrain","Phantatog","Phantom Beast","Phantom Centaur","Phantom Flock","Phantom General","Phantom Monster","Phantom Nantuko","Phantom Ninja","Phantom Nishoba","Phantom Nomad","Phantom Tiger","Phantom Warrior","Phantom Whelp","Phantom Wings","Phantom Wurm","Pharagax Giant","Pharika\'s Chosen","Pharika\'s Cure","Pharika\'s Disciple","Pharika\'s Libation","Pharika\'s Mender","Pharika\'s Spawn","Pharika, God of Affliction","Phase Dolphin","Phelddagrif","Phenax, God of Deception","Pheres-Band Brawler","Pheres-Band Centaurs","Pheres-Band Raiders","Pheres-Band Thunderhoof","Pheres-Band Tromper","Pheres-Band Warchief","Phobian Phantasm","Phoebe, Head of S.N.E.A.K.","Phoenix Heart","Phoenix of Ash","Phosphorescent Feast","Phthisis","Phylactery Lich","Phylath, World Sculptor","Phyresis","Phyrexia\'s Core","Phyrexian Altar","Phyrexian Arena","Phyrexian Battleflies","Phyrexian Bloodstock","Phyrexian Boon","Phyrexian Broodlings","Phyrexian Colossus","Phyrexian Crusader","Phyrexian Debaser","Phyrexian Defiler","Phyrexian Delver","Phyrexian Denouncer","Phyrexian Devourer","Phyrexian Digester","Phyrexian Dreadnought","Phyrexian Driver","Phyrexian Etchings","Phyrexian Furnace","Phyrexian Gargantua","Phyrexian Ghoul","Phyrexian Gremlins","Phyrexian Grimoire","Phyrexian Hulk","Phyrexian Hydra","Phyrexian Infiltrator","Phyrexian Ingester","Phyrexian Ironfoot","Phyrexian Juggernaut","Phyrexian Lens","Phyrexian Librarian","Phyrexian Marauder","Phyrexian Metamorph","Phyrexian Monitor","Phyrexian Negator","Phyrexian Obliterator","Phyrexian Plaguelord","Phyrexian Portal","Phyrexian Processor","Phyrexian Prowler","Phyrexian Purge","Phyrexian Rager","Phyrexian Reaper","Phyrexian Rebirth","Phyrexian Reclamation","Phyrexian Revoker","Phyrexian Scriptures","Phyrexian Scuta","Phyrexian Slayer","Phyrexian Snowcrusher","Phyrexian Soulgorger","Phyrexian Splicer","Phyrexian Swarmlord","Phyrexian Totem","Phyrexian Tower","Phyrexian Tribute","Phyrexian Tyranny","Phyrexian Unlife","Phyrexian Vatmother","Phyrexian Vault","Phyrexian Walker","Phyrexian War Beast","Phytoburst","Phytohydra","Phytotitan","Pia Nalaar","Pia and Kiran Nalaar","Pia\'s Revolution","Pianna, Nomad Captain","Pick Your Poison","Pick the Brain","Pieces of the Puzzle","Pierce Strider","Pierce the Sky","Piety","Piety Charm","Pikemen","Pilfered Plans","Pilfering Imp","Pilgrim of Justice","Pilgrim of Virtue","Pilgrim of the Fires","Pilgrim\'s Eye","Pili-Pala","Pillage","Pillaging Horde","Pillar Tombs of Aku","Pillar of Flame","Pillar of Light","Pillar of Origins","Pillar of War","Pillar of the Paruns","Pillarfield Ox","Pillory of the Sleepless","Pin to the Earth","Pincer Spider","Pincher Beetles","Pine Barrens","Pine Walker","Pinecrest Ridge","Pinion Feast","Pinnacle of Rage","Pinpoint Avalanche","Pious Evangel // Wayward Disciple","Pious Interdiction","Pious Kitsune","Pious Warrior","Pious Wayfarer","Piper of the Swarm","Piper\'s Melody","Pippa, Duchess of Dice","Pir\'s Whim","Pir, Imaginative Rascal","Piracy","Piracy Charm","Piranha Marsh","Pirate Ship","Pirate\'s Cutlass","Pirate\'s Pillage","Pirate\'s Prize","Piston Sledge","Piston-Fist Cyclops","Pistus Strike","Pit Fight","Pit Imp","Pit Keeper","Pit Raptor","Pit Scorpion","Pit Spawn","Pit Trap","Pitchburn Devils","Pitchstone Wall","Pitfall Trap","Pith Driller","Pithing Needle","Pithing Spyglass","Pitiless Gorgon","Pitiless Horde","Pitiless Plunderer","Pitiless Pontiff","Pitiless Vizier","Pixie Queen","Plagiarize","Plague Beetle","Plague Belcher","Plague Boiler","Plague Dogs","Plague Engineer","Plague Fiend","Plague Mare","Plague Myr","Plague Rats","Plague Sliver","Plague Spitter","Plague Spores","Plague Stinger","Plague Wight","Plague Wind","Plague Witch","Plague of Vermin","Plaguebearer","Plaguecrafter","Plagued Rusalka","Plaguemaw Beast","Plains","Planar Birth","Planar Bridge","Planar Chaos","Planar Cleansing","Planar Collapse","Planar Despair","Planar Gate","Planar Guide","Planar Outburst","Planar Overlay","Planar Portal","Planar Void","Plane-Merge Elf","Planebound Accomplice","Planequake","Planeswalker\'s Favor","Planeswalker\'s Fury","Planeswalker\'s Mirth","Planeswalker\'s Mischief","Planeswalker\'s Scorn","Planewide Celebration","Planewide Disaster","Plant Elemental","Plasm Capture","Plasma Elemental","Plateau","Plated Crusher","Plated Geopede","Plated Pegasus","Plated Rootwalla","Plated Seastrider","Plated Slagwurm","Plated Sliver","Plated Spider","Plated Wurm","Platinum Angel","Platinum Angel Avatar","Platinum Emperion","Plaxcaster Frogling","Plaxmanta","Play of the Game","Plaza of Harmony","Plea for Guidance","Plea for Power","Pledge of Loyalty","Pledge of Unity","Plots That Span Centuries","Plover Knights","Plow Through Reito","Plow Under","Plumes of Peace","Plumeveil","Plummet","Plunder","Plundered Statue","Plunge into Darkness","Pointy Finger of Doom","Poison Arrow","Poison the Well","Poison-Tip Archer","Poisonbelly Ogre","Polar Kraken","Polis Crusher","Political Trickery","Pollen Lullaby","Pollen Remedy","Pollenbright Druid","Pollenbright Wings","Polluted Bonds","Polluted Dead","Polluted Delta","Polluted Mire","Pollywog Symbiote","Polukranos, Unchained","Polukranos, World Eater","Polymorph","Polymorphist\'s Jest","Polymorphous Rush","Polyraptor","Ponder","Pondering Mage","Pongify","Pontiff of Blight","Ponyback Brigade","Pooling Venom","Pools of Becoming","Porcelain Legionnaire","Porcuparrot","Pore Over the Pages","Porphyry Nodes","Port Inspector","Port Town","Portal Mage","Portal of Sanctuary","Portcullis","Portcullis Vine","Portent","Portent of Betrayal","Possessed Aven","Possessed Barbarian","Possessed Centaur","Possessed Nomad","Possessed Portal","Possessed Skaab","Possibility Storm","Postmortem Lunge","Poultice Sliver","Poultrygeist","Pounce","Pouncing Cheetah","Pouncing Jaguar","Pouncing Kavu","Pouncing Lynx","Pouncing Shoreshark","Pouncing Wurm","Powder Keg","Power Armor","Power Artifact","Power Conduit","Power Leak","Power Matrix","Power Play","Power Sink","Power Struggle","Power Surge","Power Taint","Power Without Equal","Power of Fire","Powerleech","Powerstone Minefield","Powerstone Shard","Pox","Practiced Tactics","Pradesh Gypsies","Praetor\'s Counsel","Praetor\'s Grasp","Prahv","Prahv, Spires of Order","Prairie Stream","Prakhata Club Security","Prakhata Pillar-Bug","Pramikon, Sky Rampart","Preacher","Precinct Captain","Precise Strike","Precision Bolt","Precognition","Precognition Field","Precognitive Perception","Precursor Golem","Predator Dragon","Predator Ooze","Predator\'s Gambit","Predator\'s Howl","Predator\'s Rapport","Predator\'s Strike","Predator, Flagship","Predatory Advantage","Predatory Focus","Predatory Hunger","Predatory Impetus","Predatory Nightstalker","Predatory Rampage","Predatory Sliver","Predatory Urge","Predatory Wurm","Predict","Preeminent Captain","Preemptive Strike","Preferred Selection","Premature Burial","Preordain","Prepare // Fight","Prescient Chimera","Presence of Gond","Presence of the Master","Presence of the Wise","Press for Answers","Press into Service","Press the Advantage","Pressure Point","Pretender\'s Claim","Prey Upon","Prey\'s Vengeance","Preyseizer Dragon","Price of Betrayal","Price of Fame","Price of Glory","Price of Knowledge","Price of Progress","Prickleboar","Prickly Boggart","Prickly Marmoset","Pride Guardian","Pride Sovereign","Pride of Conquerors","Pride of Lions","Pride of the Clouds","Pridemalkin","Priest of Forgotten Gods","Priest of Gix","Priest of Iroas","Priest of Titania","Priest of Urabrask","Priest of Yawgmoth","Priest of the Blood Rite","Priest of the Wakening Sun","Priests of Norn","Primal Amulet // Primal Wellspring","Primal Bellow","Primal Beyond","Primal Boost","Primal Clay","Primal Cocoon","Primal Command","Primal Druid","Primal Empathy","Primal Forcemage","Primal Frenzy","Primal Growth","Primal Huntbeast","Primal Might","Primal Order","Primal Plasma","Primal Rage","Primal Surge","Primal Vigor","Primal Visitation","Primal Whisperer","Primalcrux","Prime Speaker Vannifar","Prime Speaker Zegana","Primeval Bounty","Primeval Force","Primeval Light","Primeval Protector","Primeval Shambler","Primeval Titan","Primevals\' Glorious Rebirth","Primitive Etchings","Primitive Justice","Primoc Escapee","Primordial Hydra","Primordial Mist","Primordial Ooze","Primordial Sage","Primordial Wurm","Prince of Thralls","Princess Lucrezia","Princess Twilight Sparkle","Priority Avenger","Prism Array","Prism Ring","Prismatic Boon","Prismatic Circle","Prismatic Dragon","Prismatic Geoscope","Prismatic Lace","Prismatic Lens","Prismatic Omen","Prismatic Strands","Prismatic Vista","Prismatic Ward","Prismatic Wardrobe","Prismite","Prismwake Merrow","Prison Barricade","Prison Realm","Prison Term","Pristine Angel","Pristine Skywise","Pristine Talisman","Private Research","Privileged Position","Prized Amalgam","Prized Elephant","Prized Griffin","Prized Unicorn","Prizefighter Construct","Probe","Problematic Volcano","Processor Assault","Proclamation of Rebirth","Prodigal Pyromancer","Prodigal Sorcerer","Prodigal Sorcerer Avatar","Prodigious Growth","Profane Command","Profane Memento","Profane Prayers","Profane Procession // Tomb of the Dusk Rose","Profaner of the Dead","Profit // Loss","Profound Journey","Progenitor Mimic","Progenitus","Prognostic Sphinx","Prohibit","Promise of Bunrei","Promise of Power","Promised Kannushi","Propaganda","Propeller Pioneer","Proper Burial","Proper Laboratory Attire","Prophecy","Prophet of Distortion","Prophet of Kruphix","Prophet of the Peak","Prophetic Bolt","Prophetic Flamespeaker","Prophetic Prism","Prophetic Ravings","Proposal","Prosperity","Prosperous Pirates","Prossh, Skyraider of Kher","Protean Hulk","Protean Hydra","Protean Raider","Protean Thaumaturge","Protect // Serve","Protection of the Hekma","Protective Bubble","Protective Sphere","Protector of the Crown","Proteus Machine","Proteus Staff","Protomatter Powder","Prototype Portal","Proud Mentor","Proud Wildbonder","Proven Combatant","Providence","Provoke","Prowess of the Fair","Prowler\'s Helm","Prowling Caracal","Prowling Felidar","Prowling Nightstalker","Prowling Pangolin","Prowling Serpopard","Prying Blade","Prying Eyes","Prying Questions","Psionic Blast","Psionic Entity","Psionic Gift","Psionic Sliver","Psychatog","Psychic Allergy","Psychic Barrier","Psychic Battle","Psychic Corrosion","Psychic Drain","Psychic Impetus","Psychic Intrusion","Psychic Membrane","Psychic Miasma","Psychic Network","Psychic Overload","Psychic Possession","Psychic Puppetry","Psychic Purge","Psychic Rebuttal","Psychic Spear","Psychic Spiral","Psychic Strike","Psychic Surgery","Psychic Symbiont","Psychic Theft","Psychic Trance","Psychic Transfer","Psychic Venom","Psychic Vortex","Psychogenic Probe","Psychosis Crawler","Psychotic Episode","Psychotic Fury","Psychotic Haze","Psychotrope Thallid","Pteramander","Pterodon Knight","Pteron Ghost","Public Execution","Puca\'s Mischief","Puffer Extract","Pull Under","Pull from Eternity","Pull from Tomorrow","Pull from the Deep","Pulling Teeth","Pulmonic Sliver","Pulsating Illusion","Pulse Tracker","Pulse of Llanowar","Pulse of Murasa","Pulse of the Dross","Pulse of the Fields","Pulse of the Forge","Pulse of the Grid","Pulse of the Tangle","Pulsemage Advocate","Pulverize","Punctuate","Puncture Blast","Puncture Bolt","Puncturing Blow","Puncturing Light","Punish Ignorance","Punish the Enemy","Punishing Fire","Puppet Conjurer","Puppet Master","Puppet Strings","Puppet\'s Verdict","Puppeteer","Puppeteer Clique","Pure // Simple","Pure Intentions","Pure Reflection","Purelace","Puresight Merrow","Puresteel Angel","Puresteel Paladin","Purgatory","Purge","Purge the Profane","Purging Scythe","Purify","Purify the Grave","Purity","Purphoros\'s Emissary","Purphoros\'s Intervention","Purphoros, Bronze-Blooded","Purphoros, God of the Forge","Purple-Crystal Crab","Purraj of Urborg","Pursue Glory","Pursued Whale","Pursuit of Flight","Pursuit of Knowledge","Pus Kami","Put Away","Putrefaction","Putrefax","Putrefy","Putrid Cyclops","Putrid Goblin","Putrid Imp","Putrid Leech","Putrid Raptor","Putrid Warrior","Pygmy Allosaurus","Pygmy Giant","Pygmy Hippo","Pygmy Kavu","Pygmy Pyrosaur","Pygmy Razorback","Pygmy Troll","Pyknite","Pyramid of the Pantheon","Pyramids","Pyre Charger","Pyre Hound","Pyre Zombie","Pyreheart Wolf","Pyretic Hunter","Pyretic Ritual","Pyrewild Shaman","Pyric Salamander","Pyrite Spellbomb","Pyroblast","Pyroceratops","Pyroclasm","Pyroclast Consul","Pyroclastic Elemental","Pyroclastic Hellion","Pyroconvergence","Pyrohemia","Pyrokinesis","Pyromancer Ascension","Pyromancer\'s Assault","Pyromancer\'s Gauntlet","Pyromancer\'s Goggles","Pyromancer\'s Swath","Pyromancy","Pyromania","Pyromantic Pilgrim","Pyromatics","Pyrophobia","Pyrostatic Pillar","Pyrotechnics","Pyrrhic Revival","Python","Pyxis of Pandemonium","Qal Sisma Behemoth","Qarsi Deceiver","Qarsi High Priest","Qarsi Sadist","Qasali Ambusher","Qasali Pridemage","Qasali Slingers","Qilin\'s Blessing","Quag Sickness","Quag Vampires","Quagmire","Quagmire Druid","Quagmire Lamprey","Quagnoth","Quakefoot Cyclops","Quarantine Field","Quarry Beetle","Quarry Colossus","Quarry Hauler","Quartzwood Crasher","Quarum Trench Gnomes","Quash","Quasiduplicate","Queen Marchesa","Queen of Ice // Rage of Winter","Queen\'s Agent","Queen\'s Bay Soldier","Queen\'s Commission","Quench","Quenchable Fire","Quest for Ancient Secrets","Quest for Pure Flame","Quest for Renewal","Quest for Ula\'s Temple","Quest for the Gemblades","Quest for the Goblin Lord","Quest for the Gravelord","Quest for the Holy Relic","Quest for the Nihil Stone","Questing Beast","Questing Phelddagrif","Question Elemental?","Queue of Beetles","Quick Sliver","Quick-Stick Lick Trick","Quickchange","Quicken","Quickening Licid","Quickling","Quicksand","Quicksilver Amulet","Quicksilver Behemoth","Quicksilver Dagger","Quicksilver Dragon","Quicksilver Elemental","Quicksilver Fountain","Quicksilver Gargantuan","Quicksilver Geyser","Quicksilver Sea","Quicksilver Wall","Quicksmith Genius","Quicksmith Rebel","Quicksmith Spy","Quiet Contemplation","Quiet Disrepair","Quiet Purity","Quiet Speculation","Quietus Spike","Quill-Slinger Boggart","Quilled Slagwurm","Quilled Sliver","Quilled Wolf","Quillmane Baku","Quillspike","Quirion Druid","Quirion Dryad","Quirion Elves","Quirion Explorer","Quirion Ranger","Quirion Sentinel","Quirion Trailblazer","Qumulox","R&D\'s Secret Lair","Rabble-Rouser","Rabid Bite","Rabid Bloodsucker","Rabid Elephant","Rabid Rats","Rabid Wolverines","Rabid Wombat","Racecourse Fury","Rack and Ruin","Rackling","Radha, Heart of Keld","Radha, Heir to Keld","Radiant Destiny","Radiant Essence","Radiant Flames","Radiant Fountain","Radiant Kavu","Radiant Purge","Radiant\'s Dragoons","Radiant\'s Judgment","Radiant, Archangel","Radiate","Radiating Lightning","Radical Idea","Radjan Spirit","Raff Capashen, Ship\'s Mage","Rafiq of the Many","Rafter Demon","Rag Dealer","Rag Man","Ragamuffyn","Rage Extractor","Rage Forger","Rage Nimbus","Rage Reflection","Rage Thrower","Rage Weaver","Rage of Purphoros","Rage-Scarred Berserker","Rageblood Shaman","Ragefire","Rageform","Ragemonger","Ragged Veins","Raging Bull","Raging Cougar","Raging Goblin","Raging Gorilla","Raging Kavu","Raging Kronch","Raging Minotaur","Raging Poltergeist","Raging Ravine","Raging Redcap","Raging Regisaur","Raging River","Raging Spirit","Raging Swordtooth","Ragnar","Rags // Riches","Raid Bombardment","Raiders\' Spoils","Raiders\' Wake","Raiding Nightstalker","Raiding Party","Rain of Blades","Rain of Daggers","Rain of Embers","Rain of Filth","Rain of Gore","Rain of Revelation","Rain of Rust","Rain of Salt","Rain of Tears","Rain of Thorns","Rainbow Crow","Rainbow Efreet","Rainbow Knights","Rainbow Vale","Raise Dead","Raise the Alarm","Raised by Wolves","Raka Disciple","Raka Sanctuary","Rakalite","Rakavolver","Rakdos Augermage","Rakdos Cackler","Rakdos Carnarium","Rakdos Charm","Rakdos Cluestone","Rakdos Drake","Rakdos Firewheeler","Rakdos Guildgate","Rakdos Guildmage","Rakdos Ickspitter","Rakdos Keyrune","Rakdos Locket","Rakdos Pit Dragon","Rakdos Ragemutt","Rakdos Ringleader","Rakdos Riteknife","Rakdos Roustabout","Rakdos Shred-Freak","Rakdos Signet","Rakdos Trumpeter","Rakdos the Defiler","Rakdos\'s Return","Rakdos, Lord of Riots","Rakdos, the Showstopper","Rakeclaw Gargantuan","Raking Canopy","Raking Claws","Rakish Heir","Rakka Mar","Raksha Golden Cub","Raksha Golden Cub Avatar","Rakshasa Deathdealer","Rakshasa Gravecaller","Rakshasa Vizier","Rakshasa\'s Disdain","Rakshasa\'s Secret","Ral Zarek","Ral\'s Dispersal","Ral\'s Outburst","Ral\'s Staticaster","Ral\'s Vanguard","Ral, Caller of Storms","Ral, Izzet Viceroy","Ral, Storm Conduit","Rally","Rally for the Throne","Rally of Wings","Rally the Ancestors","Rally the Forces","Rally the Horde","Rally the Peasants","Rally the Righteous","Rally the Troops","Rally to Battle","Rallying Roar","Ram Through","Rambunctious Mutt","Ramirez DePietro","Ramos, Dragon Engine","Ramosian Captain","Ramosian Commander","Ramosian Lieutenant","Ramosian Rally","Ramosian Revivalist","Ramosian Sergeant","Ramosian Sky Marshal","Rampage of the Clans","Rampaging Baloths","Rampaging Brontodon","Rampaging Cyclops","Rampaging Ferocidon","Rampaging Hippo","Rampaging Monument","Rampaging Rendhorn","Rampant Elephant","Rampant Growth","Rampart Crawler","Rampart Smasher","Ramroller","Ramses Overdark","Ramunap Excavator","Ramunap Hydra","Ramunap Ruins","Rancid Earth","Rancid Rats","Rancor","Ranger en-Vec","Ranger of Eos","Ranger\'s Guile","Ranger\'s Path","Ranger-Captain of Eos","Ranging Raptors","Rank Officer","Rank and File","Rankle, Master of Pranks","Ransack","Ransack the Lab","Rapacious Dragon","Rapacious One","Rapid Decay","Rapid Fire","Rapid Hybridization","Rapid Prototyper","Rappelling Scouts","Raptor Companion","Raptor Hatchling","Rare-B-Gone","Rarity","Rashida Scalebane","Rashka the Slayer","Rashmi, Eternities Crafter","Rasputin Dreamweaver","Rat Colony","Ratcatcher","Ratchet Bomb","Rath\'s Edge","Rathi Assassin","Rathi Dragon","Rathi Fiend","Rathi Intimidator","Rathi Trapper","Rats of Rath","Rats\' Feast","Rattleblaze Scarecrow","Rattlechains","Rattleclaw Mystic","Raugrin Crystal","Raugrin Triome","Ravaged Highlands","Ravager Wurm","Ravager\'s Mace","Ravages of War","Ravaging Blaze","Ravaging Horde","Ravaging Riftwurm","Raven Familiar","Raven Guild Initiate","Raven Guild Master","Raven\'s Crime","Raven\'s Run","Raven\'s Run Dragoon","Ravenous Baboons","Ravenous Baloth","Ravenous Bloodseeker","Ravenous Chupacabra","Ravenous Daggertooth","Ravenous Demon // Archdemon of Greed","Ravenous Giant","Ravenous Gigantotherium","Ravenous Harpy","Ravenous Intruder","Ravenous Leucrocota","Ravenous Rats","Ravenous Skirge","Ravenous Slime","Ravenous Trap","Ravenous Vampire","Raving Dead","Raving Oni-Slave","Ravnica at War","Ravos, Soultender","Ray of Command","Ray of Dissolution","Ray of Distortion","Ray of Erasure","Ray of Revelation","Rayami, First of the Fallen","Rayne, Academy Chancellor","Razaketh\'s Rite","Razaketh, the Foulblooded","Raze","Razia\'s Purification","Razia, Boros Archangel","Razing Snidd","Razor Barrier","Razor Boomerang","Razor Golem","Razor Hippogriff","Razor Pendulum","Razor Swine","Razorclaw Bear","Razorfield Rhino","Razorfield Thresher","Razorfin Abolisher","Razorfin Hunter","Razorfoot Griffin","Razorgrass Screen","Razorjaw Oni","Razormane Masticore","Razortip Whip","Razortooth Rats","Razorverge Thicket","Reach Through Mists","Reach of Branches","Reach of Shadows","Read the Bones","Read the Runes","Read the Tides","Ready // Willing","Reality Acid","Reality Anchor","Reality Hemorrhage","Reality Ripple","Reality Scramble","Reality Shaping","Reality Shift","Reality Smasher","Reality Spasm","Reality Strobe","Reality Twist","Really Epic Punch","Realm Razer","Realm Seekers","Realm-Cloaked Giant // Cast Off","Realms Befitting My Majesty","Realms Uncharted","Realmwright","Reanimate","Reap","Reap Intellect","Reap What Is Sown","Reap and Sow","Reap the Past","Reap the Seagraf","Reaper King","Reaper King Avatar","Reaper from the Abyss","Reaper of Flight Moonsilver","Reaper of Night // Harvest Fear","Reaper of Sheoldred","Reaper of the Wilds","Reaping the Graves","Reaping the Rewards","Reason // Believe","Reassembling Skeleton","Reave Soul","Reaver Ambush","Reaver Drone","Rebel Informer","Rebellion of the Flamekin","Rebirth","Reborn Hero","Reborn Hope","Rebound","Rebuff the Wicked","Rebuild","Rebuke","Rebuking Ceremony","Recall","Recantation","Reciprocate","Reckless Abandon","Reckless Air Strike","Reckless Assault","Reckless Brute","Reckless Bushwhacker","Reckless Charge","Reckless Cohort","Reckless Embermage","Reckless Fireweaver","Reckless Imp","Reckless Ogre","Reckless One","Reckless Pangolin","Reckless Racer","Reckless Rage","Reckless Reveler","Reckless Scholar","Reckless Spite","Reckless Waif // Merciless Predator","Reckless Wurm","Reclaim","Reclaim the Wastes","Reclaiming Vines","Reclamation","Reclamation Sage","Reclusive Artificer","Reclusive Wight","Recoil","Recollect","Reconnaissance","Reconnaissance Mission","Reconstruction","Record Store","Recoup","Recover","Recross the Paths","Recruit the Worthy","Recruiter of the Guard","Recumbent Bliss","Recuperate","Recurring Insight","Recurring Nightmare","Recycla-bird","Recycle","Red Cliffs Armada","Red Elemental Blast","Red Herring","Red Mana Battery","Red Scarab","Red Sun\'s Zenith","Red Ward","Red-Hot Hottie","Redcap Melee","Redcap Raiders","Redeem","Redeem the Lost","Redirect","Reduce // Rubble","Reduce in Stature","Reduce to Ashes","Reduce to Dreams","Redwood Treefolk","Reef Pirates","Reef Shaman","Reef Worm","Refibrillator","Reflect Damage","Reflecting Mirror","Reflecting Pool","Reflector Mage","Reflex Sliver","Reflexes","Refocus","Reforge the Soul","Refraction Trap","Refresh","Refreshing Elixir","Refreshing Rain","Refurbish","Refuse // Cooperate","Regal Behemoth","Regal Bloodlord","Regal Caracal","Regal Force","Regal Leosaur","Regal Unicorn","Regathan Firecat","Regenerate","Regeneration","Regenesis","Regicide","Regisaur Alpha","Regna\'s Sanction","Regna, the Redeemer","Regress","Regrowth","Reign of Chaos","Reign of Terror","Reign of the Pit","Reincarnation","Reinforced Bulwark","Reinforcements","Reins of Power","Reins of the Vinesteed","Reiterate","Reito Lantern","Reiver Demon","Rejuvenate","Rejuvenating Springs","Rejuvenation Chamber","Reki, the History of Kamigawa","Rekindled Flame","Rekindling Phoenix","Reknit","Relearn","Release the Ants","Release the Dogs","Release the Gremlins","Release to the Wind","Relentless Advance","Relentless Assault","Relentless Dead","Relentless Hunter","Relentless Pursuit","Relentless Raptor","Relentless Rats","Relentless Skaabs","Relic Amulet","Relic Axe","Relic Bane","Relic Barrier","Relic Bind","Relic Crush","Relic Golem","Relic Putrescence","Relic Robber","Relic Runner","Relic Seeker","Relic Vial","Relic Ward","Relic of Progenitus","Relief Captain","Reliquary Monk","Reliquary Tower","Remand","Remedy","Remember the Fallen","Remembrance","Reminisce","Remodel","Remorseful Cleric","Remorseless Punishment","Remote Farm","Remote Isle","Remove","Remove Enchantments","Remove Soul","Renata, Called to the Hunt","Rend Flesh","Rend Spirit","Rendclaw Trow","Render Silent","Rending Vines","Rending Volley","Renegade Demon","Renegade Doppelganger","Renegade Firebrand","Renegade Freighter","Renegade Krasis","Renegade Map","Renegade Rallier","Renegade Tactics","Renegade Troops","Renegade Warlord","Renegade Wheelsmith","Renegade\'s Getaway","Renewal","Renewed Faith","Renewing Dawn","Renewing Touch","Renounce","Renounce the Guilds","Renowned Weaponsmith","Renowned Weaver","Reparations","Repay in Kind","Repeal","Repeated Reverberation","Repeating Barrage","Repel","Repel Intruders","Repel the Abominable","Repel the Darkness","Repentance","Repentant Blacksmith","Repentant Vampire","Repercussion","Replenish","Repopulate","Reprisal","Reprobation","Reprocess","Reptilian Reflection","Repudiate // Replicate","Repulse","Requiem Angel","Reroute","Rescind","Rescue","Rescue from the Underworld","Rescuer Sphinx","Research // Development","Research Assistant","Research the Deep","Reservoir Walker","Reset","Reshape","Resilient Khenra","Resilient Wanderer","Resistance Fighter","Resize","Resolute Archangel","Resolute Blademaster","Resolute Rider","Resolute Strike","Resolute Survivors","Resolute Watchdog","Resounding Roar","Resounding Scream","Resounding Silence","Resounding Thunder","Resounding Wave","Resourceful Return","Respite","Resplendent Angel","Resplendent Griffin","Resplendent Mentor","Response // Resurgence","Rest for the Weary","Rest in Peace","Restless Apparition","Restless Bones","Restless Dead","Restless Dreams","Restock","Restoration Angel","Restoration Gearsmith","Restoration Specialist","Restore","Restore Balance","Restore the Peace","Restrain","Resupply","Resurrection","Resuscitate","Retaliate","Retaliation","Retaliator Griffin","Retether","Rethink","Retraced Image","Retract","Retraction Helix","Retreat to Coralhelm","Retreat to Emeria","Retreat to Hagra","Retreat to Kazandu","Retreat to Valakut","Retribution","Retribution of the Ancients","Retribution of the Meek","Retributive Wand","Retrofitter Foundry","Retromancer","Return from Extinction","Return of the Nightstalkers","Return of the Wildspeaker","Return to Battle","Return to Dust","Return to Nature","Return to the Earth","Return to the Ranks","Returned Centaur","Returned Phalanx","Returned Reveler","Revealing Wind","Reveillark","Reveille Squad","Reveka, Wizard Savant","Revel in Riches","Revel of the Fallen God","Revelation","Revelsong Horn","Revenant","Revenant Patriarch","Revenge of Ravens","Revenge of the Hunted","Reverberate","Reverberation","Revered Dead","Revered Elder","Revered Unicorn","Reverence","Reverent Hoplite","Reverent Hunter","Reverent Mantra","Reverent Silence","Reversal of Fortune","Reverse Damage","Reverse Engineer","Reverse Polarity","Reverse the Sands","Revitalize","Revival // Revenge","Revive","Revive the Fallen","Reviving Dose","Reviving Melody","Reviving Vapors","Revoke Existence","Revoke Privileges","Revolutionary Rebuff","Reward the Faithful","Rewards of Diversity","Reweave","Rewind","Reya Dawnbringer","Reyhan, Last of the Abzan","Rhet-Crop Spearmaster","Rhino-","Rhizome Lurcher","Rhonas the Indomitable","Rhonas\'s Last Stand","Rhonas\'s Monument","Rhonas\'s Stalwart","Rhox","Rhox Bodyguard","Rhox Brute","Rhox Charger","Rhox Faithmender","Rhox Maulers","Rhox Meditant","Rhox Oracle","Rhox Pikemaster","Rhox Veteran","Rhox War Monk","Rhys the Exiled","Rhys the Redeemed","Rhystic Cave","Rhystic Circle","Rhystic Deluge","Rhystic Lightning","Rhystic Scrying","Rhystic Shield","Rhystic Study","Rhystic Syphon","Rhystic Tutor","Rhythm of the Wild","Rhythmic Water Vortex","Rib Cage Spider","Ribbon Snake","Ribbons of Night","Ribbons of the Reikai","Richard Garfield, Ph.D.","Rick, Steadfast Leader","Ricochet","Ricochet Trap","Riddle of Lightning","Riddleform","Riddlekeeper","Riddlemaster Sphinx","Riddlesmith","Ride Down","Riders of Gavony","Ridge Rannet","Ridged Kusite","Ridgeline Rager","Ridgescale Tusker","Ridgetop Raptor","Riding Red Hare","Riding the Dilu Horse","Rielle, the Everwise","Rienne, Angel of Rebirth","Rift","Rift Bolt","Rift Elemental","Riftmarked Knight","Riftstone Portal","Riftsweeper","Riftwing Cloudskate","Rigging Runner","Righteous Aura","Righteous Authority","Righteous Avengers","Righteous Blow","Righteous Cause","Righteous Charge","Righteous Confluence","Righteous Fury","Righteous Indignation","Righteous War","Righteousness","Riku of Two Reflections","Rile","Rime Dryad","Rime Tender","Rime Transfusion","Rimebound Dead","Rimefeather Owl","Rimehorn Aurochs","Rimescale Dragon","Rimewind Cryomancer","Rimewind Taskmage","Rimrock Knight // Boulder Rush","Rin and Seri, Inseparable","Ring of Evos Isle","Ring of Gix","Ring of Immortals","Ring of Kalonia","Ring of Ma\'rûf","Ring of Renewal","Ring of Three Wishes","Ring of Thune","Ring of Valkas","Ring of Xathrid","Rings a Bell","Rings of Brighthearth","Ringskipper","Ringwarden Owl","Riot Control","Riot Devils","Riot Gear","Riot Piker","Riot Ringleader","Riot Spikes","Rip to Pieces","Rip-Clan Crasher","Riparian Tiger","Ripjaw Raptor","Ripscale Predator","Riptide","Riptide Biologist","Riptide Chimera","Riptide Chronologist","Riptide Crab","Riptide Director","Riptide Entrancer","Riptide Laboratory","Riptide Mangler","Riptide Pilferer","Riptide Replicator","Riptide Shapeshifter","Riptide Survivor","Riptide Turtle","Rise // Fall","Rise Again","Rise from the Grave","Rise from the Tides","Rise of Eagles","Rise of the Dark Realms","Rise of the Hobgoblins","Rise to Glory","Rise to the Challenge","Risen Executioner","Risen Reef","Risen Riptide","Risen Sanctuary","Rishadan Airship","Rishadan Brigand","Rishadan Cutpurse","Rishadan Footpad","Rishadan Pawnshop","Rishadan Port","Rishkar\'s Expertise","Rishkar, Peema Renegade","Rising Miasma","Rising Populace","Rising Waters","Risk Factor","Risky Move","Rite of Belzenlok","Rite of Consumption","Rite of Flame","Rite of Passage","Rite of Replication","Rite of Ruin","Rite of Undoing","Rite of the Raging Storm","Rite of the Serpent","Rites of Flourishing","Rites of Initiation","Rites of Reaping","Rites of Refusal","Rites of Spring","Rith\'s Attendant","Rith\'s Charm","Rith\'s Grove","Rith, the Awakener","Rith, the Awakener Avatar","Ritual of Rejuvenation","Ritual of Restoration","Ritual of Soot","Ritual of Steel","Ritual of Subdual","Ritual of the Machine","Ritual of the Returned","Rivalry","Rivals\' Duel","Riven Turnbull","River Bear","River Boa","River Darter","River Delta","River Heralds\' Boon","River Hoopoe","River Kaijin","River Kelpie","River Merfolk","River Serpent","River Sneak","River of Tears","River\'s Favor","River\'s Grasp","River\'s Rebuke","Riverfall Mimic","Riverglide Pathway // Lavaglide Pathway","Riverwheel Aerialists","Riverwise Augur","Riveting Rigger","Rix Maadi Guildmage","Rix Maadi Reveler","Rix Maadi, Dungeon Palace","Road of Return","Roalesk, Apex Hybrid","Roaming Ghostlight","Roar of Challenge","Roar of Jukai","Roar of Reclamation","Roar of the Crowd","Roar of the Kha","Roar of the Wurm","Roaring Primadox","Roaring Slagwurm","Roast","Robber Fly","Robber of the Rich","Robe of Mirrors","Robo-","Robot Chicken","Roc Charger","Roc Egg","Roc Hatchling","Roc of Kher Ridges","Rock Badger","Rock Basilisk","Rock Hydra","Rock Jockey","Rock Lobster","Rock Slide","Rockcaster Platoon","Rocket Launcher","Rocket-Powered Turbo Slug","Rockshard Elemental","Rockslide Ambush","Rockslide Elemental","Rockslide Sorcerer","Rocky Tar Pit","Rod of Ruin","Rod of Spanking","Rofellos","Rofellos\'s Gift","Rofellos, Llanowar Emissary","Rogue Elephant","Rogue Kavu","Rogue Refiner","Rogue Skycaptain","Rogue\'s Gloves","Rogue\'s Passage","Rohgahh of Kher Keep","Roil Elemental","Roil Eruption","Roil Spout","Roil\'s Retribution","Roiling Horror","Roiling Regrowth","Roiling Terrain","Roiling Vortex","Roiling Waters","Roilmage\'s Trick","Role Reversal","Rollick of Abandon","Rolling Earthquake","Rolling Spoil","Rolling Stones","Rolling Temblor","Rolling Thunder","Rona, Disciple of Gix","Ronin Cavekeeper","Ronin Cliffrider","Ronin Houndmaster","Ronin Warclub","Ronom Hulk","Ronom Serpent","Ronom Unicorn","Roofstalker Wight","Rooftop Storm","Rookie Mistake","Roon of the Hidden Realm","Roost of Drakes","Root Cage","Root Elemental","Root Greevil","Root Maze","Root Out","Root Sliver","Root Snare","Root Spider","Root-Kin Ally","Rootborn Defenses","Rootbound Crag","Rootbreaker Wurm","Rootgrapple","Rooting Kavu","Rooting Moloch","Rootrunner","Roots","Roots of All Evil","Roots of Life","Rootwalla","Rootwater Alligator","Rootwater Commando","Rootwater Depths","Rootwater Diver","Rootwater Hunter","Rootwater Matriarch","Rootwater Mystic","Rootwater Shaman","Rootwater Thief","Rorix Bladewing","Rosemane Centaur","Rosethorn Acolyte // Seasonal Ritual","Rosethorn Halberd","Rosheen Meanderer","Rot Farm Skeleton","Rot Hulk","Rot Shambler","Rot Wolf","Rotcrown Ghoul","Roterothopter","Rotfeaster Maggot","Rotlung Reanimator","Rotted Hulk","Rotted Hystrix","Rotted Ones, Lay Siege","Rottenheart Ghoul","Rotting Fensnake","Rotting Giant","Rotting Legion","Rotting Mastodon","Rotting Rats","Rotting Regisaur","Rotwidow Pack","Rough // Tumble","Roughshod Mentor","Rouse","Rouse the Mob","Rousing Read","Rousing of Souls","Rout","Roving Keep","Rowan Kenrith","Rowan Treefolk","Rowan\'s Battleguard","Rowan\'s Stalwarts","Rowan, Fearless Sparkmage","Rowdy Crew","Rowen","Royal Assassin","Royal Assassin Avatar","Royal Decree","Royal Falcon","Royal Herbalist","Royal Trooper","Rubble Reading","Rubble Slinger","Rubbleback Rhino","Rubblebelt Boar","Rubblebelt Maaka","Rubblebelt Raiders","Rubblebelt Recluse","Rubblebelt Rioters","Rubblebelt Runner","Rubblehulk","Rubinia Soulsinger","Ruby Leech","Ruby Medallion","Rude Awakening","Ruff, Underdog Champ","Rugged Highlands","Rugged Prairie","Ruham Djinn","Ruhan of the Fomori","Ruin Crab","Ruin Ghost","Ruin Processor","Ruin Raider","Ruin Rat","Ruin in Their Wake","Ruination","Ruination Guide","Ruination Rioter","Ruination Wurm","Ruinous Gremlin","Ruinous Minotaur","Ruinous Path","Ruinous Ultimatum","Ruins of Oran-Rief","Ruins of Trokair","Rukh Egg","Rule of Law","Rules Lawyer","Rumbling Aftershocks","Rumbling Baloth","Rumbling Crescendo","Rumbling Rockslide","Rumbling Ruin","Rumbling Sentry","Rumbling Slum","Rumbling Slum Avatar","Rummaging Goblin","Rummaging Wizard","Run Afoul","Run Aground","Run Amok","Run Away Together","Run Wild","Runaway Carriage","Runaway Steam-Kin","Rune Snag","Rune of Protection: Artifacts","Rune of Protection: Black","Rune of Protection: Blue","Rune of Protection: Green","Rune of Protection: Lands","Rune of Protection: Red","Rune of Protection: White","Rune-Cervin Rider","Rune-Scarred Demon","Rune-Tail, Kitsune Ascendant // Rune-Tail\'s Essence","Runeboggle","Runechanter\'s Pike","Runeclaw Bear","Runed Arch","Runed Halo","Runed Servitor","Runed Stalactite","Runeflare Trap","Runehorn Hellkite","Runes of the Deus","Runesword","Runewing","Runic Armasaur","Runic Repetition","Runner\'s Bane","Rupture","Rupture Spire","Ruric Thar, the Unbowed","Rush of Adrenaline","Rush of Battle","Rush of Blood","Rush of Ice","Rush of Knowledge","Rush of Vitality","Rushblade Commander","Rushing River","Rushing-Tide Zubera","Rushwood Dryad","Rushwood Elemental","Rushwood Grove","Rushwood Herbalist","Rushwood Legate","Russet Wolves","Rust","Rust Elemental","Rust Scarab","Rust Tick","Rusted Relic","Rusted Sentinel","Rusted Slasher","Rustic Clachan","Rusting Golem","Rustmouth Ogre","Rustrazor Butcher","Rustspore Ram","Rustwing Falcon","Ruthless Cullblade","Ruthless Deathfang","Ruthless Disposal","Ruthless Instincts","Ruthless Invasion","Ruthless Knave","Ruthless Ripper","Ruthless Sniper","Rysorian Badger","Ryusei, the Falling Star","S.N.E.A.K. Dispatcher","S.N.O.T.","Saber Ants","Saberclaw Golem","Sabertooth Alley Cat","Sabertooth Cobra","Sabertooth Mauler","Sabertooth Nishoba","Sabertooth Outrider","Sabertooth Wyvern","Sabretooth Tiger","Sacellum Archers","Sacellum Godspeaker","Sachi, Daughter of Seshiro","Sacred Armory","Sacred Boon","Sacred Cat","Sacred Excavation","Sacred Foundry","Sacred Ground","Sacred Guide","Sacred Knight","Sacred Mesa","Sacred Nectar","Sacred Prey","Sacred Rites","Sacred White Deer","Sacred Wolf","Sacrifice","Sacrifice Play","Saddleback Lagac","Saddled Rimestag","Sadistic Augermage","Sadistic Glee","Sadistic Hypnotist","Sadistic Obsession","Sadistic Sacrament","Sadistic Skymarcher","Safe Haven","Safe Passage","Safeguard","Safehold Duo","Safehold Elite","Safehold Sentry","Safewright Quest","Saffi Eriksdotter","Sage Aven","Sage Owl","Sage of Ancient Lore // Werewolf of Ancient Hunger","Sage of Epityr","Sage of Fables","Sage of Hours","Sage of Lat-Nam","Sage of Mysteries","Sage of Shaila\'s Claim","Sage of the Falls","Sage of the Inward Eye","Sage\'s Dousing","Sage\'s Knowledge","Sage\'s Reverie","Sage\'s Row Denizen","Sage\'s Row Savant","Sage-Eye Avengers","Sage-Eye Harrier","Sages of the Anima","Sagittars\' Volley","Sagu Archer","Sagu Mauler","Saheeli Rai","Saheeli\'s Artistry","Saheeli\'s Directive","Saheeli\'s Silverwing","Saheeli, Sublime Artificer","Saheeli, the Gifted","Sai of the Shinobi","Sai, Master Thopterist","Sailmonger","Sailor of Means","Saji\'s Torrent","Sakashima the Impostor","Sakashima the Impostor Avatar","Sakashima\'s Student","Sakiko, Mother of Summer","Sakura-Tribe Elder","Sakura-Tribe Scout","Sakura-Tribe Springcaller","Salivating Gremlins","Salt Flats","Salt Marsh","Salt Road Ambushers","Salt Road Patrol","Salt Road Quartermasters","Saltblast","Saltcrusted Steppe","Saltfield Recluse","Saltskitter","Saltwater Stalwart","Salvage","Salvage Drone","Salvage Scout","Salvage Scuttler","Salvage Slasher","Salvage Titan","Salvager of Ruin","Salvager of Secrets","Salvaging Station","Samite Alchemist","Samite Archer","Samite Blessing","Samite Censer-Bearer","Samite Elder","Samite Healer","Samite Ministration","Samite Pilgrim","Samite Sanctuary","Samurai Enforcers","Samurai of the Pale Curtain","Samut\'s Sprint","Samut, Tyrant Smasher","Samut, Voice of Dissent","Samut, the Tested","Sanctified Charge","Sanctifier of Souls","Sanctimony","Sanctuary Blade","Sanctuary Cat","Sanctuary Lockdown","Sanctuary Smasher","Sanctum Custodian","Sanctum Gargoyle","Sanctum Guardian","Sanctum Plowbeast","Sanctum Prelate","Sanctum Seeker","Sanctum Spirit","Sanctum of All","Sanctum of Calm Waters","Sanctum of Eternity","Sanctum of Fruitful Harvest","Sanctum of Serra","Sanctum of Shattered Heights","Sanctum of Stone Fangs","Sanctum of Tranquil Light","Sanctum of Ugin","Sand Golem","Sand Silos","Sand Squid","Sand Strangler","Sandals of Abdallah","Sandbar Crocodile","Sandbar Merfolk","Sandbar Serpent","Sandblast","Sandcrafter Mage","Sands of Delirium","Sands of Time","Sandskin","Sandsower","Sandsteppe Citadel","Sandsteppe Mastodon","Sandsteppe Outcast","Sandsteppe Scavenger","Sandstone Bridge","Sandstone Deadfall","Sandstone Needle","Sandstone Oracle","Sandstone Warrior","Sandstorm","Sandstorm Charger","Sandstorm Eidolon","Sandwurm Convergence","Sangrite Backlash","Sangrite Surge","Sangromancer","Sangrophage","Sanguimancy","Sanguinary Mage","Sanguine Bond","Sanguine Glorifier","Sanguine Guard","Sanguine Indulgence","Sanguine Praetor","Sanguine Sacrament","Sanitarium Skeleton","Sanity Gnawers","Sanity Grinding","Sap Sucker","Sapling of Colfenor","Sapphire Charm","Sapphire Drake","Sapphire Leech","Sapphire Medallion","Saprazzan Bailiff","Saprazzan Breaker","Saprazzan Cove","Saprazzan Heir","Saprazzan Legate","Saprazzan Outrigger","Saprazzan Raider","Saprazzan Skerry","Saproling Burst","Saproling Cluster","Saproling Infestation","Saproling Migration","Saproling Symbiosis","Sapseep Forest","Sarah\'s Wings","Sarcatog","Sarcomancy","Sarcomite Myr","Sarkhan Unbroken","Sarkhan Vol","Sarkhan the Mad","Sarkhan the Masterless","Sarkhan\'s Catharsis","Sarkhan\'s Dragonfire","Sarkhan\'s Rage","Sarkhan\'s Triumph","Sarkhan\'s Unsealing","Sarkhan\'s Whelp","Sarkhan, Dragonsoul","Sarkhan, Fireblood","Sarkhan, the Dragonspeaker","Sarpadian Empires, Vol. VII","Saruli Caretaker","Saruli Gatekeepers","Sasaya, Orochi Ascendant // Sasaya\'s Essence","Saskia the Unyielding","Satyr Enchanter","Satyr Firedancer","Satyr Grovedancer","Satyr Hedonist","Satyr Hoplite","Satyr Nyx-Smith","Satyr Piper","Satyr Rambler","Satyr Wayfinder","Satyr\'s Cunning","Sauroform Hybrid","Sauté","Savaen Elves","Savage Alliance","Savage Beating","Savage Conception","Savage Firecat","Savage Gorger","Savage Gorilla","Savage Hunger","Savage Knuckleblade","Savage Lands","Savage Offensive","Savage Punch","Savage Silhouette","Savage Smash","Savage Stomp","Savage Summoning","Savage Surge","Savage Swipe","Savage Thallid","Savage Twister","Savage Ventmaw","Savageborn Hydra","Savai Crystal","Savai Sabertooth","Savai Thundermane","Savai Triome","Savannah","Savannah Lions","Savannah Sage","Save Life","Saving Grace","Saving Grasp","Savor the Moment","Savra, Queen of the Golgari","Savvy Hunter","Sawback Manticore","Sawtooth Loon","Sawtooth Ogre","Sawtooth Thresher","Sawtusk Demolisher","Scab-Clan Berserker","Scab-Clan Charger","Scab-Clan Giant","Scab-Clan Mauler","Scabland","Scald","Scalding Cauldron","Scalding Devil","Scalding Salamander","Scalding Tarn","Scalding Tongs","Scaldkin","Scale Blessing","Scale Up","Scale of Chiss-Goria","Scale the Heights","Scalebane\'s Elite","Scaled Behemoth","Scaled Destruction","Scaled Hulk","Scaled Wurm","Scaleguard Sentinels","Scalelord Reckoner","Scalpelexis","Scampering Scorcher","Scandalmonger","Scapegoat","Scapeshift","Scar","Scarab Feast","Scarab of the Unseen","Scarblade Elite","Scare Tactics","Scarecrone","Scarecrow","Scaretiller","Scarland Thrinax","Scarred Puma","Scarred Vinebreeder","Scars of the Veteran","Scarscale Ritual","Scarwood Bandits","Scarwood Goblins","Scarwood Hag","Scarwood Treefolk","Scathe Zombies","Scatter Arc","Scatter the Seeds","Scatter to the Winds","Scattered Groves","Scattering Stroke","Scattershot","Scattershot Archer","Scavenged Blade","Scavenged Weaponry","Scavenger Drake","Scavenger Folk","Scavenger Grounds","Scavenging Ghoul","Scavenging Harpy","Scavenging Ooze","Scavenging Scarab","Scent of Brine","Scent of Cinder","Scent of Ivy","Scent of Jasmine","Scent of Nightshade","Scepter of Dominance","Scepter of Empires","Scepter of Fugue","Scepter of Insight","Scheming Symmetry","Schismotivate","Scholar of Athreos","Scholar of Stars","Scholar of the Ages","Scholar of the Lost Trove","School of Piranha","School of the Unseen","Scion Summoner","Scion of Darkness","Scion of Glaciers","Scion of Oona","Scion of Ugin","Scion of Vitu-Ghazi","Scion of the Swarm","Scion of the Ur-Dragon","Scion of the Wild","Scissors Lizard","Scorch Rider","Scorch Spitter","Scorch the Fields","Scorched Earth","Scorched Ruins","Scorched Rusalka","Scorching Dragonfire","Scorching Lava","Scorching Missile","Scorching Spear","Scorching Winds","Scorchmark","Scorchwalker","Scoria Cat","Scoria Elemental","Scoria Wurm","Scorned Villager // Moonscarred Werewolf","Scornful Aether-Lich","Scornful Egotist","Scour","Scour All Possibilities","Scour from Existence","Scour the Laboratory","Scoured Barrens","Scourge Devil","Scourge Servant","Scourge Wolf","Scourge of Fleets","Scourge of Geier Reach","Scourge of Kher Ridges","Scourge of Nel Toth","Scourge of Numai","Scourge of Skola Vale","Scourge of Valkas","Scourge of the Nobilis","Scourge of the Skyclaves","Scourge of the Throne","Scourgemark","Scourglass","Scouring Sands","Scout the Borders","Scout\'s Warning","Scouting Trek","Scrabbling Claws","Scragnoth","Scrambleverse","Scrap","Scrap Mastery","Scrap Trawler","Scrapbasket","Scrapdiver Serpent","Scrapheap","Scrapheap Scrounger","Scrapper Champion","Scrapskin Drake","Scrapyard Mongrel","Scrapyard Recombiner","Scrapyard Salvo","Screaming Fury","Screaming Seahawk","Screaming Shield","Screamreach Brawler","Screams from Within","Screams of the Damned","Screeching Bat // Stalking Vampire","Screeching Buzzard","Screeching Drake","Screeching Griffin","Screeching Harpy","Screeching Phoenix","Screeching Silcaw","Screeching Skaab","Screeching Sliver","Scrib Nibblers","Scribe of the Mindful","Scrivener","Scroll Rack","Scroll Thief","Scroll of Avacyn","Scroll of Fate","Scroll of Griselbrand","Scroll of Origins","Scroll of the Masters","Scrounge","Scrounger of Souls","Scrounging Bandar","Scrubland","Scryb Ranger","Scryb Sprites","Scrying Glass","Scrying Sheets","Sculpting Steel","Scute Mob","Scute Swarm","Scuttlegator","Scuttlemutt","Scuttling Death","Scuttling Doom Engine","Scuttling Sliver","Scuzzback Marauders","Scuzzback Scrapper","Scythe Leopard","Scythe Specter","Scythe Tiger","Scythe of the Wretched","Scytheclaw","Sea Drake","Sea Eagle","Sea Gate Banneret","Sea Gate Colossus","Sea Gate Loremaster","Sea Gate Oracle","Sea Gate Restoration // Sea Gate, Reborn","Sea Gate Stormcaller","Sea Gate Wreckage","Sea God\'s Revenge","Sea God\'s Scorn","Sea Kings\' Blessing","Sea Legs","Sea Monster","Sea Scryer","Sea Serpent","Sea Snidd","Sea Spirit","Sea Sprite","Sea Troll","Sea of Clouds","Sea of Sand","Sea\'s Claim","Sea-Dasher Octopus","Seachrome Coast","Seacoast Drake","Seafarer\'s Quay","Seafloor Debris","Seafloor Oracle","Seafloor Stalker","Seagraf Skaab","Seahunter","Seal Away","Seal of Cleansing","Seal of Doom","Seal of Fire","Seal of Primordium","Seal of Removal","Seal of Strength","Seal of the Guildpact","Sealed Fate","Sealock Monster","Search Warrant","Search for Azcanta // Azcanta, the Sunken Ruin","Search for Survivors","Search for Tomorrow","Search the City","Searchlight Geist","Searing Barrage","Searing Blaze","Searing Blood","Searing Flesh","Searing Light","Searing Meditation","Searing Rays","Searing Spear","Searing Spear Askari","Searing Touch","Searing Wind","Seascape Aerialist","Seashell Cameo","Seaside Citadel","Seaside Haven","Seasinger","Season of Growth","Season of the Witch","Season\'s Beatings","Seasoned Hallowblade","Seasoned Marshal","Seasoned Pyromancer","Seasoned Tactician","Seasoned Weaponsmith","Seasons Past","Seat of the Synod","Secluded Glen","Secluded Steppe","Second Chance","Second Guess","Second Harvest","Second Sight","Second Sunrise","Second Thoughts","Second Wind","Secret Base","Secret Plans","Secret Salvage","Secret Summoning","Secretkeeper","Secrets of Paradise","Secrets of the Dead","Secrets of the Golden City","Secure the Scene","Secure the Wastes","Security Blockade","Security Detail","Sedge Scorpion","Sedge Sliver","Sedge Troll","Sedraxis Alchemist","Sedraxis Specter","Sedris, the Traitor King","See Beyond","See Red","See the Truth","See the Unwritten","Seed Guardian","Seed Spark","Seed the Land","Seedborn Muse","Seedcradle Witch","Seedguide Ash","Seedling Charm","Seeds of Innocence","Seeds of Renewal","Seeds of Strength","Seedtime","Seek Bolas\'s Counsel","Seek the Horizon","Seek the Wilds","Seeker","Seeker of Insight","Seeker of Skybreak","Seeker of the Way","Seekers\' Squire","Seer of the Last Tomorrow","Seer\'s Lantern","Seer\'s Sundial","Seer\'s Vision","Seething Anger","Seething Pathblazer","Seething Song","Segmented Krotiq","Segmented Wurm","Segovian Angel","Segovian Leviathan","Seht\'s Tiger","Seismic Assault","Seismic Elemental","Seismic Mage","Seismic Rupture","Seismic Shift","Seismic Shudder","Seismic Spike","Seismic Stomp","Seismic Strike","Seizan, Perverter of Truth","Seize the Day","Seize the Initiative","Seize the Soul","Seizures","Sejiri Merfolk","Sejiri Refuge","Sejiri Shelter // Sejiri Glacier","Sejiri Steppe","Sek\'Kuar, Deathkeeper","Sekki, Seasons\' Guide","Select for Inspection","Selective Adaptation","Selective Memory","Selective Snare","Selenia","Selenia, Dark Angel","Selesnya Charm","Selesnya Cluestone","Selesnya Eulogist","Selesnya Evangel","Selesnya Guildgate","Selesnya Guildmage","Selesnya Keyrune","Selesnya Locket","Selesnya Loft Gardens","Selesnya Sagittars","Selesnya Sanctuary","Selesnya Sentry","Selesnya Signet","Self-Assembler","Self-Inflicted Wound","Selfie Preservation","Selfless Cathar","Selfless Exorcist","Selfless Savior","Selfless Spirit","Selfless Squire","Selhoff Occultist","Selkie Hedge-Mage","Sell-Sword Brute","Seller of Songbirds","Selvala\'s Charge","Selvala\'s Enforcer","Selvala\'s Stampede","Selvala, Explorer Returned","Selvala, Heart of the Wilds","Semblance Anvil","Sen Triplets","Senate Courier","Senate Griffin","Senate Guildmage","Send to Sleep","Sengir Autocrat","Sengir Bats","Sengir Nosferatu","Sengir Vampire","Sengir, the Dark Baron","Sensation Gorger","Sensei Golden-Tail","Sensei\'s Divining Top","Senseless Rage","Sensor Splicer","Sensory Deprivation","Sentinel","Sentinel Dispatch","Sentinel Sliver","Sentinel Spider","Sentinel Totem","Sentinel Tower","Sentinel of the Eternal Watch","Sentinel of the Pearl Trident","Sentinel\'s Eyes","Sentinel\'s Mark","Sentinels of Glen Elendra","Sentry Oak","Sentry of the Underworld","Separatist Voidmage","Sephara, Sky\'s Blade","Septic Rats","Sepulchral Primordial","Sequestered Stash","Seraph","Seraph Sanctuary","Seraph of Dawn","Seraph of the Masses","Seraph of the Scales","Seraph of the Suns","Seraph of the Sword","Serendib Djinn","Serendib Efreet","Serendib Sorcerer","Serene Heart","Serene Master","Serene Offering","Serene Remembrance","Serene Steward","Serene Sunset","Serenity","Sergeant-at-Arms","Serpent Assassin","Serpent Generator","Serpent Skin","Serpent Warrior","Serpent of Yawning Depths","Serpent of the Endless Sea","Serpent\'s Gift","Serpentine","Serpentine Basilisk","Serpentine Kavu","Serpentine Spike","Serra","Serra Advocate","Serra Angel","Serra Angel Avatar","Serra Ascendant","Serra Avatar","Serra Avenger","Serra Aviary","Serra Bestiary","Serra Disciple","Serra Inquisitors","Serra Paladin","Serra Sphinx","Serra Zealot","Serra the Benevolent","Serra\'s Blessing","Serra\'s Boon","Serra\'s Embrace","Serra\'s Guardian","Serra\'s Hymn","Serra\'s Liturgy","Serra\'s Sanctum","Serrated Arrows","Serrated Biskelion","Serrated Scorpion","Serum Powder","Serum Raker","Serum Tank","Serum Visions","Servant of Nefarox","Servant of Tymaret","Servant of Volrath","Servant of the Conduit","Servant of the Scale","Servo Exhibition","Servo Schematic","Seshiro the Anointed","Seshiro the Anointed Avatar","Set Adrift","Setessan Battle Priest","Setessan Champion","Setessan Griffin","Setessan Oathsworn","Setessan Petitioner","Setessan Skirmisher","Setessan Starbreaker","Setessan Tactics","Setessan Training","Sethron, Hurloon General","Seton\'s Desire","Seton\'s Scout","Seton, Krosan Protector","Settle Beyond Reality","Settle the Score","Settle the Wreckage","Seven Dwarves","Sever Soul","Sever the Bloodline","Severed Legion","Severed Strands","Sevinne\'s Reclamation","Sevinne, the Chronoclasm","Sewer Nemesis","Sewer Rats","Sewer Shambler","Sewerdreg","Sewers of Estark","Sewn-Eye Drake","Sex Appeal","Shabraz, the Skyshark","Shacklegeist","Shackles","Shade of Trokair","Shade\'s Breath","Shade\'s Form","Shadow Alley Denizen","Shadow Glider","Shadow Guildmage","Shadow Lance","Shadow Rider","Shadow Rift","Shadow Slice","Shadow Sliver","Shadow Stinger","Shadow of Doubt","Shadow of the Grave","Shadowbane","Shadowblood Egg","Shadowblood Ridge","Shadowborn Apostle","Shadowborn Demon","Shadowcloak Vampire","Shadowed Caravel","Shadowfeed","Shadowmage Infiltrator","Shadows of the Past","Shadows\' Verdict","Shadowspear","Shadowstorm","Shadowstorm Vizier","Shaggy Camel","Shah of Naar Isle","Shahrazad","Shake the Foundations","Shalai, Voice of Plenty","Shaleskin Bruiser","Shaleskin Plower","Shallow Grave","Shaman en-Kor","Shaman of Forgotten Ways","Shaman of Spring","Shaman of the Great Hunt","Shaman of the Pack","Shaman\'s Trance","Shamanic Revelation","Shamble Back","Shambleshark","Shambling Attendants","Shambling Ghoul","Shambling Goblin","Shambling Remains","Shambling Shell","Shambling Strider","Shambling Suit","Shambling Swarm","Shambling Vent","Shanna, Sisay\'s Legacy","Shanodin Dryads","Shape Anew","Shape Stealer","Shape of the Wiitigo","Shape the Sands","Shaper Apprentice","Shaper Guildmage","Shaper Parasite","Shapers of Nature","Shapers\' Sanctuary","Shapesharer","Shapeshifter","Shapeshifter\'s Marrow","Shard Convergence","Shard Phoenix","Shard Volley","Shard of Broken Glass","Sharding Sphinx","Shardless Agent","Shared Animosity","Shared Discovery","Shared Fate","Shared Summons","Shared Trauma","Shared Triumph","Shark Typhoon","Sharktocrab","Sharpened Pitchfork","Sharuum the Hegemon","Shatter","Shatter Assumptions","Shatter the Sky","Shattered Angel","Shattered Crypt","Shattered Dreams","Shattered Perception","Shattergang Brothers","Shattering Blow","Shattering Pulse","Shattering Spree","Shatterskull Charger","Shatterskull Giant","Shatterskull Minotaur","Shatterskull Recruit","Shatterskull Smashing // Shatterskull, the Hammer Pass","Shatterstorm","Shauku\'s Minion","Shauku, Endbringer","Shed Weakness","Sheer Drop","Shefet Dunes","Shefet Monitor","Shelkin Brownie","Shell Shield","Shell Skulkin","Shell of the Last Kappa","Shelldock Isle","Shellephant","Shelter","Sheltered Aerie","Sheltered Thicket","Sheltered Valley","Sheltering Ancient","Sheltering Light","Sheltering Prayers","Sheltering Word","Shenanigans","Sheoldred, Whispering One","Shepherd of Heroes","Shepherd of Rot","Shepherd of the Flock // Usher to Safety","Shepherd of the Lost","Shichifukujin Dragon","Shield Bearer","Shield Dancer","Shield Mare","Shield Mate","Shield Sphere","Shield Wall","Shield of Duty and Reason","Shield of Kaldra","Shield of the Ages","Shield of the Avatar","Shield of the Oversoul","Shield of the Realm","Shield of the Righteous","Shielded Aether Thief","Shielded Passage","Shielded by Faith","Shieldhide Dragon","Shielding Plax","Shieldmage Advocate","Shieldmage Elder","Shieldmate\'s Blessing","Shields of Velis Vel","Shifting Borders","Shifting Ceratops","Shifting Loyalties","Shifting Shadow","Shifting Sky","Shifting Sliver","Shifting Wall","Shifty Doppelganger","Shimatsu the Bloodcloaked","Shimian Night Stalker","Shimian Specter","Shimmer","Shimmer Dragon","Shimmer Myr","Shimmer of Possibility","Shimmering Barrier","Shimmering Efreet","Shimmering Glasskite","Shimmering Grotto","Shimmering Mirage","Shimmering Wings","Shimmerscale Drake","Shimmerwing Chimera","Shinechaser","Shinen of Fear\'s Chill","Shinen of Flight\'s Wings","Shinen of Fury\'s Fire","Shinen of Life\'s Roar","Shinen of Stars\' Light","Shinewend","Shining Aerosaur","Shining Armor","Shining Shoal","Shinka Gatekeeper","Shinka, the Bloodsoaked Keep","Shiny Impetus","Shipbreaker Kraken","Shipwreck Dowser","Shipwreck Looter","Shipwreck Moray","Shipwreck Singer","Shirei, Shizo\'s Caretaker","Shisato, Whispering Hunter","Shiv","Shiv\'s Embrace","Shivan Dragon","Shivan Emissary","Shivan Fire","Shivan Gorge","Shivan Harvest","Shivan Hellkite","Shivan Meteor","Shivan Oasis","Shivan Phoenix","Shivan Raptor","Shivan Reef","Shivan Sand-Mage","Shivan Wumpus","Shivan Wurm","Shivan Zombie","Shizo, Death\'s Storehouse","Shizuko, Caller of Autumn","Shoal Kraken","Shoal Serpent","Shock","Shock Troops","Shocker","Shockmaw Dragon","Shoe Tree","Shore Keeper","Shore Snapper","Shorecomber Crab","Shorecrasher Elemental","Shorecrasher Mimic","Shoreline Raider","Shoreline Ranger","Shoreline Salvager","Short Sword","Shoulder to Shoulder","Shoving Match","Show and Tell","Show of Valor","Shower of Coals","Shower of Sparks","Showstopper","Shrapnel Blast","Shred Memory","Shredded Sails","Shredding Winds","Shreds of Sanity","Shrewd Hatchling","Shrewd Negotiation","Shriek Raptor","Shriek of Dread","Shriekdiver","Shriekgeist","Shriekhorn","Shrieking Affliction","Shrieking Drake","Shrieking Grotesque","Shrieking Mogg","Shrieking Specter","Shriekmaw","Shrike Harpy","Shrill Howler // Howling Chorus","Shrine Keeper","Shrine of Boundless Growth","Shrine of Burning Rage","Shrine of Limitless Power","Shrine of Loyal Legions","Shrine of Piercing Vision","Shrine of the Forsaken Gods","Shrink","Shrivel","Shriveling Rot","Shrouded Lore","Shrouded Serpent","Shu Cavalry","Shu Defender","Shu Elite Companions","Shu Elite Infantry","Shu Farmer","Shu Foot Soldiers","Shu General","Shu Grain Caravan","Shu Soldier-Farmers","Shu Yun, the Silent Tempest","Shuko","Shunt","Shuriken","Shyft","Sibilant Spirit","Sibsig Host","Sibsig Icebreakers","Sibsig Muckdraggers","Sick and Tired","Sicken","Sickening Dreams","Sickening Shoal","Sickle Dancer","Sickle Ripper","Sickleslicer","Sidar Jabari","Sidar Kondo","Sidar Kondo of Jamuraa","Side Quest","Side to Side","Sideswipe","Sidewinder Naga","Sidewinder Sliver","Sidisi\'s Faithful","Sidisi\'s Pet","Sidisi, Brood Tyrant","Sidisi, Undead Vizier","Siege Behemoth","Siege Dragon","Siege Elemental","Siege Mastodon","Siege Modification","Siege Rhino","Siege Striker","Siege Wurm","Siege of Towers","Siege-Gang Commander","Siegebreaker Giant","Siegecraft","Siegehorn Ceratops","Sift","Sift Through Sands","Sifter Wurm","Sifter of Skulls","Sigarda\'s Aid","Sigarda, Heron\'s Grace","Sigarda, Host of Herons","Sigardian Priest","Sight Beyond Sight","Sight of the Scalelords","Sighted-Caste Sorcerer","Sightless Brawler","Sightless Ghoul","Sigil Blessing","Sigil Captain","Sigil Tracer","Sigil of Distinction","Sigil of Sleep","Sigil of Valor","Sigil of the Empty Throne","Sigil of the Nayan Gods","Sigil of the New Dawn","Sigiled Behemoth","Sigiled Contender","Sigiled Paladin","Sigiled Skink","Sigiled Starfish","Sigiled Sword of Valeron","Sign in Blood","Signal Pest","Signal the Clans","Signpost Scarecrow","Silas Renn, Seeker Adept","Silburlind Snapper","Silence","Silence the Believers","Silent Arbiter","Silent Artisan","Silent Assassin","Silent Attendant","Silent Clearing","Silent Dart","Silent Departure","Silent Gravestone","Silent Observer","Silent Sentinel","Silent Skimmer","Silent Specter","Silent Submersible","Silent-Blade Oni","Silent-Chant Zubera","Silhana Ledgewalker","Silhana Starfletcher","Silhana Wayfinder","Silhouette","Silk Net","Silkbind Faerie","Silkenfist Fighter","Silkenfist Order","Silklash Spider","Silkweaver Elite","Silkwing Scout","Silkwrap","Silt Crawler","Silumgar Assassin","Silumgar Butcher","Silumgar Monument","Silumgar Scavenger","Silumgar Sorcerer","Silumgar Spell-Eater","Silumgar\'s Command","Silumgar\'s Scorn","Silumgar, the Drifting Death","Silundi Vision // Silundi Isle","Silvar, Devourer of the Free","Silver Drake","Silver Erne","Silver Knight","Silver Myr","Silver Seraph","Silver Wyvern","Silver-Inlaid Dagger","Silverback Ape","Silverback Shaman","Silverbeak Griffin","Silverblade Paladin","Silverchase Fox","Silverclad Ferocidons","Silverclaw Griffin","Silvercoat Lion","Silverflame Ritual","Silverflame Squire // On Alert","Silverfur Partisan","Silvergill Adept","Silvergill Douser","Silverglade Elemental","Silverglade Pathfinder","Silverskin Armor","Silversmote Ghoul","Silverstorm Samurai","Silverstrike","Silverwing Squadron","Silvos, Rogue Elemental","Sima Yi, Wei Field Marshal","Simian Brawler","Simian Grunts","Simian Spirit Guide","Simic Ascendancy","Simic Basilisk","Simic Charm","Simic Cluestone","Simic Fluxmage","Simic Growth Chamber","Simic Guildgate","Simic Guildmage","Simic Initiate","Simic Keyrune","Simic Locket","Simic Manipulator","Simic Ragworm","Simic Signet","Simic Sky Swallower","Simoon","Simplify","Simulacrum","Sin Collector","Sin Prodder","Sindbad","Sinew Sliver","Singe","Singe-Mind Ogre","Singing Bell Strike","Singing Tree","Single Combat","Sinister Concoction","Sinister Possession","Sinister Sabotage","Sinister Strength","Sink into Takenuma","Sinkhole","Sinking Feeling","Sins of the Past","Sinstriker\'s Will","Sinuous Striker","Sinuous Vermin","Siona, Captain of the Pyleas","Sip of Hemlock","Sir Shandlar of Eberyn","Sire of Insanity","Sire of Stagnation","Sire of the Storm","Siren Lookout","Siren Reaver","Siren Song Lyre","Siren Stormtamer","Siren of the Fanged Coast","Siren of the Silent Song","Siren\'s Call","Siren\'s Ruse","Sirocco","Sisay","Sisay\'s Ingenuity","Sisay\'s Ring","Sisay, Weatherlight Captain","Sisters of Stone Death","Sisters of Stone Death Avatar","Sisters of the Flame","Sivitri Scarzam","Sivvi\'s Ruse","Sivvi\'s Valor","Six-y Beast","Sixth Sense","Sizzle","Sizzling Barrage","Skaab Goliath","Skaab Ruinator","Skalla Wolf","Skarrg Goliath","Skarrg Guildmage","Skarrg, the Rage Pits","Skarrgan Firebird","Skarrgan Hellkite","Skarrgan Pit-Skulk","Skarrgan Skybreaker","Skatewing Spy","Skeletal Changeling","Skeletal Crocodile","Skeletal Grimace","Skeletal Kathari","Skeletal Scrying","Skeletal Snake","Skeletal Vampire","Skeletal Wurm","Skeleton Archer","Skeleton Key","Skeleton Scavengers","Skeleton Shard","Skeleton Ship","Skeletonize","Skewer the Critics","Skill Borrower","Skilled Animator","Skillful Lunge","Skin Invasion // Skin Shedder","Skinbrand Goblin","Skinrender","Skinshifter","Skinthinner","Skinwing","Skirge Familiar","Skirk Alarmist","Skirk Commando","Skirk Drill Sergeant","Skirk Fire Marshal","Skirk Marauder","Skirk Outrider","Skirk Prospector","Skirk Ridge Exhumer","Skirk Shaman","Skirk Volcanist","Skirsdag Cultist","Skirsdag Flayer","Skirsdag High Priest","Skirsdag Supplicant","Skithiryx, the Blight Dragon","Skitter Eel","Skitter of Lizards","Skittering Crustacean","Skittering Heartstopper","Skittering Horror","Skittering Invasion","Skittering Monstrosity","Skittering Skirge","Skittering Surveyor","Skitterskin","Skittish Kavu","Skittish Valesk","Skizzik","Skizzik Surger","Skola Grovedancer","Skophos Maze-Warden","Skophos Warleader","Skred","Skulduggery","Skulking Fugitive","Skulking Ghost","Skulking Knight","Skull Catapult","Skull Collector","Skull Fracture","Skull Prophet","Skull Rend","Skull Saucer","Skull Storm","Skull of Orm","Skull of Ramos","Skullbriar, the Walking Grave","Skullcage","Skullclamp","Skullcrack","Skullknocker Ogre","Skullmane Baku","Skullmead Cauldron","Skullmulcher","Skullscorch","Skullsnatcher","Skulltap","Skullwinder","Sky Diamond","Sky Hussar","Sky Ruin Drake","Sky Scourer","Sky Skiff","Sky Spirit","Sky Swallower","Sky Terror","Sky Tether","Sky Theater Strix","Sky Weaver","Sky-Eel School","Skybind","Skyblade of the Legion","Skyblinder Staff","Skybreen","Skycat Sovereign","Skyclave Apparition","Skyclave Cleric // Skyclave Basilica","Skyclave Geopede","Skyclave Pick-Axe","Skyclave Plunder","Skyclave Relic","Skyclave Sentinel","Skyclave Shade","Skyclave Shadowcat","Skyclave Squid","Skyclaw Thrash","Skycloud Egg","Skycloud Expanse","Skyfire Kirin","Skyfire Phoenix","Skygames","Skyhunter Cub","Skyhunter Patrol","Skyhunter Prowler","Skyhunter Skirmisher","Skyknight Legionnaire","Skyknight Vanguard","Skylasher","Skyline Cascade","Skyline Despot","Skyline Predator","Skyline Scout","Skymarch Bloodletter","Skymarcher Aspirant","Skymark Roc","Skyraker Giant","Skyreach Manta","Skyreaping","Skyrider Elf","Skyrider Patrol","Skyrider Trainee","Skyscanner","Skyscribing","Skyshaper","Skyship Plunderer","Skyship Stalker","Skyship Weatherlight","Skyshooter","Skyshroud Archer","Skyshroud Behemoth","Skyshroud Blessing","Skyshroud Claim","Skyshroud Condor","Skyshroud Cutter","Skyshroud Elf","Skyshroud Elite","Skyshroud Falcon","Skyshroud Forest","Skyshroud Poacher","Skyshroud Ranger","Skyshroud Ridgeback","Skyshroud Sentinel","Skyshroud Troll","Skyshroud Troopers","Skyshroud Vampire","Skyshroud War Beast","Skysnare Spider","Skysovereign, Consul Flagship","Skyspear Cavalry","Skystreamer","Skyswirl Harrier","Skyward Eye Prophets","Skywatcher Adept","Skyway Sniper","Skywhaler\'s Shot","Skywinder Drake","Skywing Aven","Skywise Teachings","Slab Hammer","Slag Fiend","Slagstorm","Slagwurm Armor","Slash Panther","Slash of Talons","Slashing Tiger","Slate Street Ruffian","Slate of Ancestry","Slaughter","Slaughter Cry","Slaughter Drone","Slaughter Games","Slaughter Pact","Slaughter the Strong","Slaughter-Priest of Mogis","Slaughterhorn","Slaughterhouse Bouncer","Slave of Bolas","Slavering Nulls","Slay","Slayer of the Wicked","Slayer\'s Cleaver","Slayer\'s Plate","Slayers\' Stronghold","Slaying Fire","Slaying Mantis","Sleek Schooner","Sleep","Sleep Paralysis","Sleep of the Dead","Sleeper Agent","Sleeper Dart","Sleeper\'s Guile","Sleeper\'s Robe","Sleeping Potion","Sleight of Hand","Sleight of Mind","Slice and Dice","Slice in Twain","Slime Molding","Slimebind","Slimefoot, the Stowaway","Slimy Kavu","Sling-Gang Lieutenant","Slingbow Trap","Slingshot Goblin","Slinking Giant","Slinking Serpent","Slinking Skirge","Slinn Voda, the Rising Deep","Slip Through Space","Slippery Bogbonder","Slippery Bogle","Slippery Karst","Slippery Scoundrel","Slipstream Eel","Slipstream Serpent","Sliptide Serpent","Slith Ascendant","Slith Bloodletter","Slith Firewalker","Slith Predator","Slith Strider","Slither Blade","Slitherhead","Slithering Shade","Slithermuse","Slitherwisp","Slithery Stalker","Sliv-Mizzet, Hivemind","Slivdrazi Monstrosity","Sliver Construct","Sliver Hive","Sliver Hivelord","Sliver Legion","Sliver Overlord","Sliver Queen","Sliver Queen Avatar","Sliver Queen, Brood Mother","Sliversmith","Slobad, Goblin Tinkerer","Slow Motion","Sludge Crawler","Sludge Strider","Sluggishness","Sluiceway Scorpion","Slum Reaper","Slumbering Dragon","Slumbering Tora","Sly Requisitioner","Sly Spy","Smallpox","Smart Ass","Smash","Smash to Smithereens","Smelt","Smelt // Herd // Saw","Smelt-Ward Gatekeepers","Smelt-Ward Ignus","Smelt-Ward Minotaur","Smite","Smite the Monstrous","Smiting Helix","Smitten Swordmaster // Curry Favor","Smog Elemental","Smogsteed Rider","Smoke","Smoke Shroud","Smoke Teller","Smokebraider","Smokespew Invoker","Smokestack","Smolder Initiate","Smoldering Butcher","Smoldering Crater","Smoldering Efreet","Smoldering Marsh","Smoldering Spires","Smoldering Tar","Smoldering Werewolf // Erupting Dreadwolf","Smother","Smothering Abomination","Smothering Tithe","Smuggler Captain","Smuggler\'s Copter","Snag","Snake Basket","Snake Cult Initiation","Snake Pit","Snake Umbra","Snake of the Golden Grove","Snakeform","Snap","Snapback","Snapcaster Mage","Snapdax, Apex of the Hunt","Snapping Creeper","Snapping Drake","Snapping Gnarlid","Snapping Sailback","Snapping Thragg","Snapsail Glider","Snare Tactician","Snare Thopter","Snare the Skies","Snarespinner","Snarling Undorak","Sneak Attack","Sneaking Guide","Sneaky Homunculus","Snickering Squirrel","Snorting Gahr","Snow Devil","Snow Fortress","Snow Hound","Snow Mercy","Snow-Covered Forest","Snow-Covered Island","Snow-Covered Mountain","Snow-Covered Plains","Snow-Covered Swamp","Snowblind","Snowfall","Snowhorn Rider","Snubhorn Sentry","Snuff Out","So Tiny","Soar","Soaring Hope","Soaring Seacliff","Soaring Show-Off","Soaring Thought-Thief","Socketed Sprocketer","Soilshaper","Sokenzan","Sokenzan Bruiser","Sokenzan Renegade","Sokenzan Spellblade","Sol Grail","Sol Ring","Sol\'kanar the Swamp King","Sol, Advocate Eternal","Solar Blast","Solar Blaze","Solar Tide","Solarion","Soldevi Adnate","Soldevi Digger","Soldevi Excavations","Soldevi Golem","Soldevi Heretic","Soldevi Machinist","Soldevi Sage","Soldevi Sentry","Soldevi Simulacrum","Soldevi Steam Beast","Soldier Replica","Soldier of Fortune","Soldier of the Pantheon","Solemn Offering","Solemn Recruit","Solemn Simulacrum","Solemnity","Solfatara","Solid Footing","Solidarity","Solidarity of Heroes","Solitary Camel","Solitary Confinement","Solitary Hunter // One of the Pack","Soliton","Soltari Champion","Soltari Crusader","Soltari Emissary","Soltari Foot Soldier","Soltari Guerrillas","Soltari Lancer","Soltari Monk","Soltari Priest","Soltari Trooper","Soltari Visionary","Somber Hoverguard","Somberwald Alpha","Somberwald Dryad","Somberwald Sage","Somberwald Spider","Somberwald Stag","Somberwald Vigilante","Some Disassembly Required","Somnomancer","Somnophore","Song of Blood","Song of Creation","Song of Freyalise","Song of Serenity","Song of the Dryads","Song of the Worldsoul","Song-Mad Treachery // Song-Mad Ruins","Songs of the Damned","Songstitcher","Sonic Assault","Sonic Burst","Sonic Seizure","Sonorous Howlbonder","Soot Imp","Sootfeather Flock","Soothing Balm","Soothsaying","Sootstoke Kindler","Sootwalkers","Sophic Centaur","Soramaro, First to Dream","Soratami Cloud Chariot","Soratami Cloudskater","Soratami Mindsweeper","Soratami Mirror-Guard","Soratami Mirror-Mage","Soratami Rainshaper","Soratami Savant","Soratami Seer","Soraya the Falconer","Sorcerer of the Fang","Sorcerer\'s Broom","Sorcerer\'s Strongbox","Sorcerer\'s Wand","Sorceress Queen","Sorcerous Sight","Sorcerous Spyglass","Sorin Markov","Sorin\'s Guide","Sorin\'s Thirst","Sorin\'s Vengeance","Sorin, Grim Nemesis","Sorin, Imperious Bloodlord","Sorin, Lord of Innistrad","Sorin, Solemn Visitor","Sorin, Vampire Lord","Sorin, Vengeful Bloodlord","Sorrow\'s Path","Sorry","Sosuke\'s Summons","Sosuke, Son of Seshiro","Soul Barrier","Soul Bleed","Soul Burn","Soul Channeling","Soul Charmer","Soul Collector","Soul Conduit","Soul Diviner","Soul Echo","Soul Exchange","Soul Feast","Soul Foundry","Soul Kiss","Soul Link","Soul Manipulation","Soul Net","Soul Nova","Soul Parry","Soul Ransom","Soul Reap","Soul Rend","Soul Salvage","Soul Scourge","Soul Sculptor","Soul Sear","Soul Seizer // Ghastly Haunting","Soul Separator","Soul Shatter","Soul Shepherd","Soul Shred","Soul Snare","Soul Snuffers","Soul Spike","Soul Stair Expedition","Soul Strings","Soul Summons","Soul Swallower","Soul Tithe","Soul Warden","Soul of Innistrad","Soul of Magma","Soul of New Phyrexia","Soul of Ravnica","Soul of Shandalar","Soul of Theros","Soul of Zendikar","Soul of the Harvest","Soul of the Rapids","Soul\'s Attendant","Soul\'s Fire","Soul\'s Grace","Soul\'s Majesty","Soul\'s Might","Soul-Guide Lantern","Soul-Scar Mage","Soul-Strike Technique","Soulblade Corrupter","Soulblade Djinn","Soulblade Renewer","Soulblast","Soulbound Guardians","Soulbright Flamekin","Soulcage Fiend","Soulcatcher","Soulcatchers\' Aerie","Souldrinker","Soulfire Grand Master","Soulflayer","Soulgorger Orgg","Soulherder","Soulhunter Rakshasa","Soulless One","Soulless Revival","Soulmates","Soulmender","Soulquake","Soulreaper of Mogis","Souls of the Faultless","Soulscour","Soulshriek","Soulstinger","Soulsurge Elemental","Soulsworn Jury","Soulsworn Spirit","Soultether Golem","Sound the Call","Southern Elephant","Southern Paladin","Souvenir Snatcher","Sovereign\'s Bite","Sovereign\'s Realm","Sovereigns of Lost Alara","Sower of Discord","Sower of Temptation","Sowing Salt","Spare Supplies","Spare from Evil","Spark Double","Spark Elemental","Spark Fiend","Spark Harvest","Spark Jolt","Spark Mage","Spark Reaper","Spark Spray","Spark Trooper","Spark of Creativity","Sparkcaster","Sparkhunter Masticore","Sparkmage Apprentice","Sparkmage\'s Gambit","Sparksmith","Sparkspitter","Sparktongue Dragon","Sparring Collar","Sparring Construct","Sparring Golem","Sparring Mummy","Spatial Binding","Spatial Contortion","Spatial Merging","Spatula of the Ages","Spawn of Mayhem","Spawn of Rix Maadi","Spawn of Thraxes","Spawnbinder Mage","Spawnbroker","Spawning Bed","Spawning Breath","Spawning Grounds","Spawning Pit","Spawning Pool","Spawnsire of Ulamog","Spawnwrithe","Speaker of the Heavens","Spear Spewer","Spear of Heliod","Spear of the General","Spearbreaker Behemoth","Spearpoint Oread","Species Gorger","Species Specialist","Spectator Seating","Specter\'s Shriek","Specter\'s Shroud","Specter\'s Wail","Spectra Ward","Spectral Bears","Spectral Cloak","Spectral Flight","Spectral Force","Spectral Gateguards","Spectral Grasp","Spectral Guardian","Spectral Lynx","Spectral Prison","Spectral Procession","Spectral Reserves","Spectral Rider","Spectral Sailor","Spectral Searchlight","Spectral Shepherd","Spectral Shield","Spectral Shift","Spectral Sliver","Speedway Fanatic","Spell Blast","Spell Burst","Spell Contortion","Spell Counter","Spell Crumple","Spell Pierce","Spell Queller","Spell Rupture","Spell Shrivel","Spell Snare","Spell Snip","Spell Snuff","Spell Suck","Spell Swindle","Spell Syphon","Spellbane Centaur","Spellbinder","Spellbook","Spellbound Dragon","Spellbreaker Behemoth","Spelleater Wolverine","Spellgorger Barbarian","Spellgorger Weird","Spellheart Chimera","Spelljack","Spellkeeper Weird","Spellmorph Raise Dead","Spellpyre Phoenix","Spellseeker","Spellshift","Spellshock","Spellskite","Spellstutter Sprite","Spelltithe Enforcer","Spelltwine","Spellweaver Duo","Spellweaver Eternal","Spellweaver Helix","Spellweaver Volute","Spellwild Ouphe","Sphere of Duty","Sphere of Grace","Sphere of Law","Sphere of Purity","Sphere of Reason","Sphere of Resistance","Sphere of Safety","Sphere of Truth","Sphere of the Suns","Sphinx Ambassador","Sphinx Mindbreaker","Sphinx Sovereign","Sphinx Summoner","Sphinx of Enlightenment","Sphinx of Foresight","Sphinx of Jwar Isle","Sphinx of Lost Truths","Sphinx of Magosi","Sphinx of New Prahv","Sphinx of Uthuun","Sphinx of the Chimes","Sphinx of the Final Word","Sphinx of the Guildpact","Sphinx of the Steel Wind","Sphinx\'s Decree","Sphinx\'s Disciple","Sphinx\'s Herald","Sphinx\'s Insight","Sphinx\'s Revelation","Sphinx\'s Tutelage","Sphinx-Bone Wand","Spider Climb","Spider Spawning","Spider Umbra","Spidersilk Armor","Spidersilk Net","Spiderwig Boggart","Spidery Grasp","Spike Breeder","Spike Cannibal","Spike Colony","Spike Drone","Spike Feeder","Spike Hatcher","Spike Jester","Spike Rogue","Spike Soldier","Spike Tiller","Spike Weaver","Spike Worker","Spike, Tournament Grinder","Spike-Tailed Ceratops","Spiked Baloth","Spikefield Hazard // Spikefield Cave","Spikeshot Elder","Spikeshot Goblin","Spiketail Drake","Spiketail Drakeling","Spiketail Hatchling","Spikewheel Acrobat","Spin Engine","Spin into Myth","Spinal Centipede","Spinal Embrace","Spinal Graft","Spinal Parasite","Spinal Villain","Spincrusher","Spindrift Drake","Spine of Ish Sah","Spinebiter","Spined Basher","Spined Fluke","Spined Megalodon","Spined Sliver","Spined Thopter","Spined Wurm","Spinehorn Minotaur","Spineless Thug","Spinerock Knoll","Spinneret Sliver","Spinning Darkness","Spinning Wheel","Spiny Starfish","Spiraling Duelist","Spiraling Embers","Spire Barrage","Spire Garden","Spire Golem","Spire Mangler","Spire Monitor","Spire Owl","Spire Patrol","Spire Phantasm","Spire Serpent","Spire Tracer","Spire Winder","Spire of Industry","Spirebluff Canal","Spireside Infiltrator","Spirespine","Spirit Away","Spirit Bonds","Spirit Cairn","Spirit Flare","Spirit Link","Spirit Loop","Spirit Mantle","Spirit Mirror","Spirit Shackle","Spirit Shield","Spirit Weaver","Spirit en-Dal","Spirit en-Kor","Spirit of Malevolence","Spirit of Resistance","Spirit of the Hearth","Spirit of the Hunt","Spirit of the Labyrinth","Spirit of the Night","Spirit of the Season","Spirit of the Spires","Spiritmonger","Spiritual Asylum","Spiritual Focus","Spiritual Guardian","Spiritual Sanctuary","Spiritual Visit","Spiritualize","Spit Flame","Spite // Malice","Spite of Mogis","Spitebellows","Spiteflame Witch","Spiteful Blow","Spiteful Bully","Spiteful Motives","Spiteful Prankster","Spiteful Returned","Spiteful Shadows","Spiteful Sliver","Spiteful Visions","Spitemare","Spitfire Handler","Spitfire Lagac","Spitting Drake","Spitting Earth","Spitting Gourna","Spitting Hydra","Spitting Image","Spitting Sliver","Spitting Slug","Spitting Spider","Splatter Thug","Splendid Agony","Splendid Genesis","Splendid Reclamation","Splendor Mare","Splicer\'s Skill","Splinter","Splinter Twin","Splinterfright","Splintering Wind","Split Decision","Split Screen","Split-Tail Miko","Splitting Headache","Splitting Slime","Spoils of Adventure","Spoils of Blood","Spoils of Evil","Spoils of Victory","Spoils of War","Spoils of the Vault","Spontaneous Artist","Spontaneous Combustion","Spontaneous Flight","Spontaneous Generation","Spontaneous Mutation","Spore Burst","Spore Cloud","Spore Flower","Spore Frog","Spore Swarm","Sporeback Troll","Sporecap Spider","Sporecrown Thallid","Sporemound","Sporesower Thallid","Sporeweb Weaver","Sporogenesis","Sporoloth Ancient","Spotted Griffin","Spread the Sickness","Spreading Algae","Spreading Flames","Spreading Plague","Spreading Rot","Spreading Seas","Spring // Mind","Spring Cleaning","Spring of Eternal Peace","Springbloom Druid","Springing Tiger","Springjack Knight","Springjack Pasture","Springjack Shepherd","Springjaw Trap","Springleaf Drum","Springmantle Cleric","Springsage Ritual","Sprinting Warbrute","Sprite Dragon","Sprite Noble","Sprout","Sprout Swarm","Sprouting Phytohydra","Sprouting Renewal","Sprouting Thrinax","Sprouting Vines","Spur Grappler","Spurnmage Advocate","Spurred Wolverine","Spy Eye","Spy Kit","Spy Network","Squad Captain","Squad Commander","Squadron Hawk","Squall","Squall Drifter","Squall Line","Squallmonger","Squandered Resources","Squeaking Pie Grubfellows","Squeaking Pie Sneak","Squealing Devil","Squee","Squee\'s Embrace","Squee\'s Revenge","Squee\'s Toy","Squee, Goblin Nabob","Squee, Goblin Nabob Avatar","Squee, the Immortal","Squeeze","Squelch","Squelching Leeches","Squidnapper","Squire","Squire\'s Devotion","Squirming Mass","Squirrel Dealer","Squirrel Farm","Squirrel Mob","Squirrel Nest","Squirrel Wrangler","Squirrel-Powered Scheme","Sram\'s Expertise","Sram, Senior Edificer","Stab Wound","Stabbing Pain","Stabilizer","Stack of Paperwork","Stadium Vendors","Staff of Domination","Staff of Nin","Staff of Zegon","Staff of the Ages","Staff of the Death Magus","Staff of the Flame Magus","Staff of the Letter Magus","Staff of the Mind Magus","Staff of the Sun Magus","Staff of the Wild Magus","Stag Beetle","Staggering Insight","Staggershock","Stain the Mind","Stairs to Infinity","Stalker Hag","Stalking Assassin","Stalking Bloodsucker","Stalking Drone","Stalking Leonin","Stalking Stones","Stalking Tiger","Stalking Tiger Avatar","Stalking Vengeance","Stalking Yeti","Stallion of Ashmouth","Stalwart Aven","Stalwart Shield-Bearers","Stamina","Stamp of Approval","Stampede","Stampede Driver","Stampede Rider","Stampeding Elk Herd","Stampeding Horncrest","Stampeding Rhino","Stampeding Serow","Stampeding Wildebeests","Stand // Deliver","Stand Firm","Stand Together","Stand or Fall","Standard Bearer","Standardize","Standing Army","Standing Stones","Standing Troops","Standstill","Stangg","Star Compass","Star of Extinction","Star-Crowned Stag","Starfall","Starfield Mystic","Starfield of Nyx","Starke","Starke of Rath","Starlight","Starlight Invoker","Starlit Angel","Starlit Mantle","Starlit Sanctum","Starstorm","Start // Finish","Start // Fire","Start Your Engines","Startled Awake // Persistent Nightmare","Startling Development","Starved Rusalka","Stasis","Stasis Cell","Stasis Cocoon","Stasis Snare","Statecraft","Static Orb","Status // Statue","Statute of Denial","Staunch Defenders","Staunch Shieldmate","Staunch-Hearted Warrior","Stave Off","Staying Power","Steadfast Armasaur","Steadfast Cathar","Steadfast Guard","Steadfast Sentinel","Steadfast Sentry","Steadfastness","Steady Aim","Steady Progress","Steady-Handed Mook","Steal Artifact","Steal Enchantment","Steal Strength","Stealer of Secrets","Stealth Mission","Steam Augury","Steam Blast","Steam Catapult","Steam Frigate","Steam Spitter","Steam Vents","Steam Vines","Steam-Powered","Steamclaw","Steamcore Weird","Steamflogger Boss","Steamflogger Service Rep","Steamflogger Temp","Steamflogger of the Month","Steamfloggery","Steel Golem","Steel Hellkite","Steel Leaf Champion","Steel Leaf Paladin","Steel Overseer","Steel Sabotage","Steel Squirrel","Steel Wall","Steel of the Godhead","Steel-Plume Marshal","Steelbane Hydra","Steelclad Serpent","Steelclaw Lance","Steelform Sliver","Steelgaze Griffin","Steeling Stance","Steelshaper Apprentice","Steelshaper\'s Gift","Steely Resolve","Steeple Creeper","Steeple Roc","Stench of Decay","Stench of Evil","Stenchskipper","Stensia","Stensia Banquet","Stensia Bloodhall","Stensia Innkeeper","Stensia Masquerade","Steppe Glider","Steppe Lynx","Sterling Grove","Stern Constable","Stern Dismissal","Stern Judge","Stern Marshal","Stern Mentor","Stern Proctor","Stet, Draconic Proofreader","Steward of Solidarity","Steward of Valeron","Stifle","Stigma Lasher","Still Life","Stillmoon Cavalier","Stingerfling Spider","Stinging Barrier","Stinging Licid","Stinging Lionfish","Stinging Scorpion","Stinging Shot","Stingmoggie","Stingscourger","Stinkdrinker Bandit","Stinkdrinker Daredevil","Stinkweed Imp","Stir the Grave","Stir the Pride","Stir the Sands","Stirring Address","Stirring Wildwood","Stitch Together","Stitch in Time","Stitched Drake","Stitched Mangler","Stitcher Geralf","Stitcher\'s Apprentice","Stitcher\'s Graft","Stitcher\'s Supplier","Stitchwing Skaab","Stocking Tiger","Stoic Angel","Stoic Builder","Stoic Champion","Stoic Ephemera","Stoic Rebuttal","Stoke the Flames","Stolen Goods","Stolen Grain","Stolen Identity","Stolen Strategy","Stolen by the Fae","Stomp and Howl","Stomper Cub","Stomping Ground","Stomping Slabs","Stone Calendar","Stone Catapult","Stone Giant","Stone Golem","Stone Haven Medic","Stone Haven Outfitter","Stone Haven Pilgrim","Stone Idol Trap","Stone Kavu","Stone Quarry","Stone Rain","Stone Spirit","Stone-Cold Basilisk","Stone-Seeder Hierophant","Stone-Throwing Devils","Stone-Tongue Basilisk","Stonebrow, Krosan Hero","Stonecloaker","Stonecoil Serpent","Stonefare Crocodile","Stoneforge Acolyte","Stoneforge Masterwork","Stoneforge Mystic","Stonefury","Stonehands","Stonehewer Giant","Stonehewer Giant Avatar","Stonehoof Chieftain","Stonehorn Chanter","Stonehorn Dignitary","Stoneshaker Shaman","Stoneshock Giant","Stonewise Fortifier","Stonewood Invocation","Stonewood Invoker","Stonework Packbeast","Stonework Puma","Stonewright","Stony Silence","Stony Strength","Stonybrook Angler","Stonybrook Banneret","Stonybrook Schoolmaster","Stop That","Storage Matrix","Storm Caller","Storm Cauldron","Storm Crow","Storm Elemental","Storm Entity","Storm Fleet Aerialist","Storm Fleet Arsonist","Storm Fleet Pyromancer","Storm Fleet Sprinter","Storm Fleet Spy","Storm Fleet Swashbuckler","Storm Front","Storm Herald","Storm Herd","Storm Sculptor","Storm Seeker","Storm Shaman","Storm Spirit","Storm Strike","Storm World","Storm the Citadel","Storm the Vault // Vault of Catlacan","Storm\'s Wrath","Stormbind","Stormblood Berserker","Stormbound Geist","Stormbreath Dragon","Stormcaller of Keranos","Stormcaller\'s Boon","Stormchaser Chimera","Stormchaser Mage","Stormcloud Djinn","Stormcloud Spirit","Stormcrag Elemental","Stormfist Crusader","Stormfront Pegasus","Stormfront Riders","Stormrider Rig","Stormrider Spirit","Stormscale Anarch","Stormscape Apprentice","Stormscape Battlemage","Stormscape Familiar","Stormscape Master","Stormsurge Kraken","Stormtide Leviathan","Stormwatch Eagle","Stormwild Capridor","Stormwing Dragon","Stormwing Entity","Storrev, Devkarin Lich","Story Circle","Strafe","Strands of Night","Strands of Undeath","Strandwalker","Strange Augmentation","Strange Inversion","Stranglehold","Strangleroot Geist","Strangling Soot","Strangling Spores","Strata Scythe","Stratadon","Strategic Planning","Strategy, Schmategy","Stratozeppelid","Stratus Dancer","Stratus Walk","Straw Golem","Straw Soldiers","Stream Hopper","Stream of Acid","Stream of Consciousness","Stream of Life","Stream of Thought","Stream of Unconsciousness","Streambed Aquitects","Street Riot","Street Savvy","Street Spasm","Street Sweeper","Street Wraith","Streetbreaker Wurm","Strength from the Fallen","Strength in Numbers","Strength of Arms","Strength of Cedars","Strength of Isolation","Strength of Lunacy","Strength of Night","Strength of Solidarity","Strength of Unity","Strength of the Pack","Strength of the Tajuru","Strider Harness","Strike the Weak Spot","Striking Sliver","String of Disappearances","Strionic Resonator","Strip Bare","Strip Mine","Striped Bears","Striped Riverwinder","Stroke of Genius","Stromgald Cabal","Stromgald Crusader","Stromgald Spy","Stromkirk Captain","Stromkirk Condemned","Stromkirk Mentor","Stromkirk Noble","Stromkirk Occultist","Stromkirk Patrol","Strongarm Monk","Strongarm Tactics","Strongarm Thug","Stronghold Assassin","Stronghold Biologist","Stronghold Confessor","Stronghold Discipline","Stronghold Furnace","Stronghold Gambit","Stronghold Machinist","Stronghold Overseer","Stronghold Rats","Stronghold Taskmaster","Stronghold Zeppelin","Structural Collapse","Structural Distortion","Struggle // Survive","Struggle for Sanity","Strutting Turkey","Stubborn Denial","Student of Elements // Tobita, Master of Winds","Student of Ojutai","Student of Warfare","Stuffy Doll","Stuffy Doll Avatar","Stun","Stun Sniper","Stunning Reversal","Stunt Double","Stunted Growth","Stupefying Touch","Stupor","Sturdy Hatchling","Sturmgeist","Stymied Hopes","Su-Chi","Subcontract","Subdue","Subira, Tulzidi Caravanner","Subjugator Angel","Sublime Archangel","Sublime Epiphany","Sublime Exhalation","Submerge","Submerged Boneyard","Subterranean Hangar","Subterranean Scout","Subterranean Shambler","Subterranean Spirit","Subterranean Tremors","Subtle Strike","Subversion","Success!","Succumb to Temptation","Sudden Death","Sudden Demise","Sudden Disappearance","Sudden Impact","Sudden Reclamation","Sudden Shock","Sudden Spinnerets","Sudden Spoiling","Sudden Storm","Sudden Strength","Sudden Substitution","Suffer the Past","Suffocating Blast","Suffocating Fumes","Suffocation","Suicidal Charge","Sulam Djinn","Suleiman\'s Legacy","Sulfur Elemental","Sulfur Falls","Sulfur Vent","Sulfuric Vapors","Sulfuric Vortex","Sulfurous Blast","Sulfurous Springs","Sultai Ascendancy","Sultai Banner","Sultai Charm","Sultai Emissary","Sultai Flayer","Sultai Runemark","Sultai Scavenger","Sultai Skullkeeper","Sultai Soothsayer","Sumala Woodshaper","Summary Dismissal","Summary Judgment","Summer Bloom","Summit Apes","Summit Prowler","Summon the Pack","Summon the School","Summoner\'s Bane","Summoner\'s Bond","Summoner\'s Egg","Summoner\'s Pact","Summoning Station","Summoning Trap","Sun Ce, Young Conquerer","Sun Clasp","Sun Droplet","Sun Quan, Lord of Wu","Sun Sentinel","Sun Titan","Sun\'s Bounty","Sun-Blessed Mount","Sun-Collared Raptor","Sun-Crested Pterodon","Sun-Crowned Hunters","Sunastian Falconer","Sunbaked Canyon","Sunbeam Spellbomb","Sunbird\'s Invocation","Sunblade Angel","Sunblade Elf","Sunblast Angel","Sunbond","Sunbringer\'s Touch","Suncleanser","Suncrusher","Sunder","Sunder Shaman","Sunder from Within","Sundering Fork","Sundering Growth","Sundering Stroke","Sundering Titan","Sundering Vitae","Sundial of the Infinite","Sunfire Balm","Sunflare Shaman","Sunforger","Sunglasses of Urza","Sungrace Pegasus","Sungrass Egg","Sungrass Prairie","Sunhome Enforcer","Sunhome Guildmage","Sunhome Stalwart","Sunhome, Fortress of the Legion","Sunimret","Sunken City","Sunken Field","Sunken Hollow","Sunken Hope","Sunken Ruins","Sunlance","Sunlit Hoplite","Sunmane Pegasus","Sunpetal Grove","Sunrise Seeker","Sunrise Sovereign","Sunscape Apprentice","Sunscape Battlemage","Sunscape Familiar","Sunscape Master","Sunscorch Regent","Sunscorched Desert","Sunscour","Sunscourge Champion","Sunseed Nurturer","Sunset Pyramid","Sunspear Shikari","Sunspire Gatekeepers","Sunspire Griffin","Sunspring Expedition","Sunstone","Sunstrike Legionnaire","Suntail Hawk","Suntouched Myr","Sunweb","Super Secret Tech","Super-Duper Death Ray","Superior Numbers","Supernatural Stamina","Supersize","Supplant Form","Supply // Demand","Supply Caravan","Supply Runners","Supply-Line Cranes","Suppress","Suppression Bonds","Suppression Field","Supreme Exemplar","Supreme Inquisitor","Supreme Phantom","Supreme Verdict","Supreme Will","Suq\'Ata Assassin","Suq\'Ata Firewalker","Suq\'Ata Lancer","Sure Strike","Sure-Footed Infiltrator","Surestrike Trident","Surge Mare","Surge Node","Surge of Righteousness","Surge of Strength","Surge of Thoughtweft","Surge of Zeal","Surgeon General Commander","Surgespanner","Surgical Extraction","Surging Aether","Surging Dementia","Surging Flame","Surging Might","Surging Sentinels","Surly Badgersaur","Surprise Deployment","Surrak Dragonclaw","Surrak, the Hunt Caller","Surrakar Banisher","Surrakar Marauder","Surrakar Spellblade","Surreal Memoir","Surrender Your Thoughts","Surveilling Sprite","Survey the Wreckage","Surveyor\'s Scope","Survival Cache","Survival of the Fittest","Survive the Night","Survivor of the Unseen","Survivors\' Bond","Survivors\' Encampment","Suspension Field","Suspicious Bookcase","Suspicious Nanny","Sustainer of the Realm","Sustaining Spirit","Sustenance","Suture Priest","Suture Spirit","Sutured Ghoul","Svogthos, the Restless Tomb","Svyelunite Priest","Svyelunite Temple","Swab Goblin","Swaggering Corsair","Swallow Whole","Swallow the Hero Whole","Swallowing Plague","Swamp","Swamp Mosquito","Swan Song","Swans of Bryn Argoll","Swarm Guildmage","Swarm Intelligence","Swarm Shambler","Swarm Surge","Swarm of Bloodflies","Swarm of Locus","Swarm of Rats","Swarmborn Giant","Swarmyard","Swashbuckling","Swat","Swathcutter Giant","Sway of Illusion","Sway of the Stars","Sweatworks Brawler","Sweep Away","Sweet Oblivion","Swell of Courage","Swell of Growth","Swelter","Sweltering Suns","Swerve","Swift Justice","Swift Kick","Swift Maneuver","Swift Reckoning","Swift Response","Swift Silence","Swift Spinner","Swift Warden","Swift Warkite","Swiftblade Vindicator","Swiftfoot Boots","Swiftwater Cliffs","Swimmer in Nightmares","Swirl the Mists","Swirling Sandstorm","Swirling Spriggan","Swirling Torrent","Switcheroo","Swooping Talon","Sword Dancer","Sword of Body and Mind","Sword of Dungeons & Dragons","Sword of Feast and Famine","Sword of Fire and Ice","Sword of Kaldra","Sword of Light and Shadow","Sword of Sinew and Steel","Sword of Truth and Justice","Sword of Vengeance","Sword of War and Peace","Sword of the Ages","Sword of the Animist","Sword of the Chosen","Sword of the Meek","Sword of the Paruns","Sword-Point Diplomacy","Swords to Plowshares","Swordwise Centaur","Sworn Companions","Sworn Defender","Sworn Guardian","Sydri, Galvanic Genius","Sygg, River Cutthroat","Sygg, River Guide","Sylvan Advocate","Sylvan Awakening","Sylvan Basilisk","Sylvan Bounty","Sylvan Brushstrider","Sylvan Caryatid","Sylvan Echoes","Sylvan Hierophant","Sylvan Library","Sylvan Messenger","Sylvan Might","Sylvan Offering","Sylvan Paradise","Sylvan Primordial","Sylvan Ranger","Sylvan Reclamation","Sylvan Safekeeper","Sylvan Scrying","Sylvan Tutor","Sylvan Yeti","Sylvia Brightspear","Sylvok Explorer","Sylvok Lifestaff","Sylvok Replica","Symbiosis","Symbiotic Beast","Symbiotic Deployment","Symbiotic Elf","Symbiotic Wurm","Symbol Status","Symbol of Unsummoning","Synapse Sliver","Synchronized Spellcraft","Synchronized Strike","Synchronous Sliver","Syncopate","Syndic of Tithes","Syndicate Enforcer","Syndicate Guildmage","Syndicate Messenger","Syndicate Trafficker","Synod Artificer","Synod Centurion","Synod Sanctum","Synthetic Destiny","Syphon Flesh","Syphon Life","Syphon Mind","Syphon Sliver","Syphon Soul","Syr Alin, the Lion\'s Claw","Syr Cadian, Knight Owl","Syr Carah, the Bold","Syr Elenora, the Discerning","Syr Faren, the Hengehammer","Syr Gwyn, Hero of Ashvale","Syr Konrad, the Grim","Szadek, Lord of Secrets","Séance","Tablet of Epityr","Tablet of the Guilds","Taborax, Hope\'s Demise","Tactical Advantage","Tah-Crop Elite","Tah-Crop Skirmisher","Tahngarth","Tahngarth\'s Glare","Tahngarth\'s Rage","Tahngarth, First Mate","Tahngarth, Talruum Hero","Taiga","Taiga Stadium","Taigam\'s Scheming","Taigam\'s Strike","Taigam, Ojutai Master","Taigam, Sidisi\'s Hand","Tail Slash","Tainted Aether","Tainted Field","Tainted Isle","Tainted Monkey","Tainted Pact","Tainted Peak","Tainted Remedy","Tainted Sigil","Tainted Specter","Tainted Strike","Tainted Well","Tainted Wood","Taj-Nar Swordsmith","Tajic, Blade of the Legion","Tajic, Legion\'s Edge","Tajuru Archer","Tajuru Beastmaster","Tajuru Blightblade","Tajuru Paragon","Tajuru Pathwarden","Tajuru Preserver","Tajuru Snarecaster","Tajuru Stalwart","Tajuru Warcaller","Takara","Take Down","Take Heart","Take Inventory","Take Possession","Take Up Arms","Take Vengeance","Take into Custody","Takeno\'s Cavalry","Takeno, Samurai General","Takenuma","Takenuma Bleeder","Takklemaggot","Talara\'s Bane","Talara\'s Battalion","Talas Air Ship","Talas Explorer","Talas Merchant","Talas Researcher","Talas Scout","Talas Warrior","Tale\'s End","Talent of the Telepath","Talisman of Conviction","Talisman of Creativity","Talisman of Curiosity","Talisman of Dominance","Talisman of Hierarchy","Talisman of Impulse","Talisman of Indulgence","Talisman of Progress","Talisman of Resilience","Talisman of Unity","Tall as a Beanstalk","Tallowisp","Talon Gates","Talon Sliver","Talon Trooper","Talon of Pain","Talonrend","Talons of Falkenrath","Talons of Wildwood","Talrand\'s Invocation","Talrand, Sky Summoner","Talruum Champion","Talruum Minotaur","Talruum Piper","Talus Paladin","Tamanoa","Tamiyo\'s Epiphany","Tamiyo\'s Journal","Tamiyo, Collector of Tales","Tamiyo, Field Researcher","Tamiyo, the Moon Sage","Tana, the Bloodsower","Tandem Lookout","Tandem Tactics","Tangle","Tangle Angler","Tangle Asp","Tangle Golem","Tangle Hulk","Tangle Kelp","Tangle Mantis","Tangle Spider","Tangle Wire","Tanglebloom","Tangleclaw Werewolf // Fibrous Entangler","Tangled Florahedron // Tangled Vale","Tangleroot","Tanglesap","Tanglewalker","Taniwha","Taoist Hermit","Taoist Mystic","Tapestry of the Ages","Tar Fiend","Tar Pit Warrior","Tar Pitcher","Tar Snare","Taranika, Akroan Veteran","Tarfire","Target Minotaur","Targeting Rocket","Tariel, Reckoner of Souls","Tariff","Tarmogoyf","Tarnished Citadel","Tarox Bladewing","Tarpan","Tasigur\'s Cruelty","Tasigur, the Golden Fang","Task Force","Task Mage Assembly","Tasseled Dromedary","Taste for Mayhem","Taste of Blood","Taste of Death","Taste of Paradise","Tatsumasa, the Dragon\'s Fang","Tattered Drake","Tattered Haunter","Tattered Mummy","Tatterkite","Tattermunge Duo","Tattermunge Maniac","Tattermunge Witch","Tattoo Ward","Tatyova, Benthic Druid","Taunt","Taunting Arbormage","Taunting Challenge","Taunting Elf","Taurean Mauler","Tavern Swindler","Tawnos","Tawnos\'s Coffin","Tawnos\'s Wand","Tawnos\'s Weaponry","Tawnos, Urza\'s Apprentice","Tayam, Luminous Enigma","Tazeem","Tazeem Raptor","Tazeem Roilmage","Tazri, Beacon of Unity","Teacher\'s Pet","Team Spirit","Teardrop Kami","Tears of Rage","Tears of Valakut","Tectonic Break","Tectonic Edge","Tectonic Fiend","Tectonic Giant","Tectonic Hellion","Tectonic Instability","Tectonic Reformation","Tectonic Rift","Teeka\'s Dragon","Teetering Peaks","Teeterpeak Ambusher","Teferi\'s Ageless Insight","Teferi\'s Care","Teferi\'s Curse","Teferi\'s Drake","Teferi\'s Honor Guard","Teferi\'s Imp","Teferi\'s Isle","Teferi\'s Moat","Teferi\'s Protection","Teferi\'s Protege","Teferi\'s Puzzle Box","Teferi\'s Realm","Teferi\'s Response","Teferi\'s Sentinel","Teferi\'s Time Twist","Teferi\'s Tutelage","Teferi\'s Veil","Teferi\'s Wavecaster","Teferi, Hero of Dominaria","Teferi, Mage of Zhalfir","Teferi, Master of Time","Teferi, Temporal Archmage","Teferi, Time Raveler","Teferi, Timebender","Teferi, Timeless Voyager","Tek","Tel-Jilad Archers","Tel-Jilad Chosen","Tel-Jilad Defiance","Tel-Jilad Exile","Tel-Jilad Fallen","Tel-Jilad Justice","Tel-Jilad Lifebreather","Tel-Jilad Outrider","Tel-Jilad Stylus","Tel-Jilad Wolf","Telekinesis","Telekinetic Bonds","Telekinetic Sliver","Telemin Performance","Telepathic Spies","Telepathy","Teleport","Teleportal","Telethopter","Telim\'Tor","Telim\'Tor\'s Darts","Telim\'Tor\'s Edict","Teller of Tales","Telling Time","Tember City","Temmet, Vizier of Naktamun","Temp of the Damned","Temper","Tempered Sliver","Tempered Steel","Tempered Veteran","Tempest Caller","Tempest Djinn","Tempest Drake","Tempest Efreet","Tempest Owl","Tempest of Light","Temple Acolyte","Temple Altisaur","Temple Bell","Temple Elder","Temple Garden","Temple Thief","Temple of Abandon","Temple of Deceit","Temple of Enlightenment","Temple of Epiphany","Temple of Malady","Temple of Malice","Temple of Mystery","Temple of Plenty","Temple of Silence","Temple of Triumph","Temple of the False God","Temporal Adept","Temporal Aperture","Temporal Cascade","Temporal Distortion","Temporal Eddy","Temporal Extortion","Temporal Fissure","Temporal Isolation","Temporal Machinations","Temporal Manipulation","Temporal Mastery","Temporal Spring","Temporal Trespass","Temporary Insanity","Temporary Truce","Tempt with Discovery","Tempt with Glory","Tempt with Immortality","Tempt with Reflections","Tempt with Vengeance","Tempting Licid","Tempting Witch","Tempting Wurm","Temur Ascendancy","Temur Banner","Temur Battle Rage","Temur Charger","Temur Charm","Temur Runemark","Temur Sabertooth","Temur War Shaman","Tenacious Dead","Tenacious Hunter","Tenacity","Tendershoot Dryad","Tendo Ice Bridge","Tendrils of Agony","Tendrils of Corruption","Tendrils of Despair","Teneb, the Harvester","Tenement Crasher","Tentative Connection","Tenth District Guard","Tenth District Legionnaire","Tenth District Veteran","Tenza, Godo\'s Maul","Tephraderm","Terashi\'s Cry","Terashi\'s Grasp","Terashi\'s Verdict","Terastodon","Teremko Griffin","Terminal Moraine","Terminate","Terminus","Teroh\'s Faithful","Teroh\'s Vanguard","Terra Eternal","Terra Ravager","Terra Stomper","Terraformer","Terrain Elemental","Terrain Generator","Terramorphic Expanse","Terrarion","Terravore","Terrifying Presence","Territorial Allosaurus","Territorial Baloth","Territorial Boar","Territorial Dispute","Territorial Gorger","Territorial Hammerskull","Territorial Hellkite","Territorial Roc","Territorial Scythecat","Terror","Terror of Mount Velus","Terror of the Fairgrounds","Terror of the Peaks","Terrus Wurm","Teshar, Ancestor\'s Apostle","Test of Endurance","Test of Faith","Testament of Faith","Tethered Griffin","Tethered Skirge","Tethmos High Priest","Tetravus","Tetsuko Umezawa, Fugitive","Tetsuo Umezawa","Tetzimoc, Primal Death","Teyo\'s Lightshield","Teyo, the Shieldmage","Teysa Karlov","Teysa, Envoy of Ghosts","Teysa, Orzhov Scion","Teysa, Orzhov Scion Avatar","Tezzeret the Schemer","Tezzeret the Seeker","Tezzeret\'s Ambition","Tezzeret\'s Betrayal","Tezzeret\'s Gambit","Tezzeret\'s Gatebreaker","Tezzeret\'s Simulacrum","Tezzeret\'s Strider","Tezzeret\'s Touch","Tezzeret, Agent of Bolas","Tezzeret, Artifice Master","Tezzeret, Cruel Machinist","Tezzeret, Master of Metal","Tezzeret, Master of the Bridge","Thada Adel, Acquisitor","Thalakos Deceiver","Thalakos Dreamsower","Thalakos Drifters","Thalakos Lowlands","Thalakos Mistfolk","Thalakos Scout","Thalakos Seer","Thalakos Sentry","Thalia\'s Geistcaller","Thalia\'s Lancers","Thalia\'s Lieutenant","Thalia, Guardian of Thraben","Thalia, Heretic Cathar","Thallid","Thallid Devourer","Thallid Germinator","Thallid Omnivore","Thallid Shell-Dweller","Thallid Soothsayer","Thantis, the Warweaver","Thassa\'s Bounty","Thassa\'s Devourer","Thassa\'s Emissary","Thassa\'s Intervention","Thassa\'s Ire","Thassa\'s Oracle","Thassa\'s Rebuff","Thassa, Deep-Dwelling","Thassa, God of the Sea","That Which Was Taken","Thatcher Revolt","Thaumatic Compass // Spires of Orazca","Thaumatog","Thaumaturge\'s Familiar","Thawing Glaciers","The Abyss","The Aether Flues","The Akroan War","The Antiquities War","The Avenger","The Big Idea","The Binding of the Titans","The Birth of Meletis","The Brute","The Cauldron of Eternity","The Chain Veil","The Champion","The Cheese Stands Alone","The Circle of Loyalty","The Countdown Is at One","The Crowd Goes Wild","The Dark Barony","The Dead Shall Serve","The Destined","The Elderspell","The Eldest Reborn","The Eon Fog","The Explorer","The Fallen","The Fallen Apart","The Fate of the Flammable","The First Eruption","The First Iroan Games","The First Sliver","The Flame of Keld","The Fourth Sphere","The General","The Gitrog Monster","The Grand Calcutron","The Grand Tour","The Great Aurora","The Great Forest","The Great Henge","The Harvester","The Haunt of Hightower","The Hippodrome","The Hive","The Hunter","The Immortal Sun","The Iron Guardian Stirs","The Lady of the Mountain","The Legend of Arena","The Locust God","The Maelstrom","The Magic Mirror","The Mending of Dominaria","The Mighty Will Fall","The Mimeoplasm","The Mirari Conjecture","The Ozolith","The Philosopher","The Pieces Are Coming Together","The Prismatic Piper","The Protector","The Provider","The Rack","The Royal Scions","The Savant","The Scarab God","The Scorpion God","The Slayer","The Tabernacle at Pendrell Vale","The Triumph of Anax","The Tyrant","The Ultimate Nightmare of Wizards of the Coast® Customer Service","The Unspeakable","The Ur-Dragon","The Vanquisher","The Very Soil Shall Shake","The Wanderer","The Warmonger","The Warrior","The Wretched","The Zephyr Maze","Theater of Horrors","Theft of Dreams","Thelon of Havenwood","Thelon\'s Chant","Thelon\'s Curse","Thelonite Druid","Thelonite Hermit","Thelonite Monk","There Is No Refuge","Thermal Blast","Thermal Flux","Thermal Glider","Thermal Navigator","Thermo-Alchemist","Thermokarst","Thermopod","Thespian\'s Stage","Thick-Skinned Goblin","Thicket Basilisk","Thicket Crasher","Thicket Elemental","Thief of Blood","Thief of Hope","Thief of Sanity","Thieves\' Auction","Thieves\' Fortune","Thieves\' Guild Enforcer","Thieving Amalgam","Thieving Magpie","Thieving Otter","Thieving Skydiver","Thieving Sprite","Thing from the Deep","Thing in the Ice // Awoken Horror","Think Tank","Think Twice","Thirst","Thirst for Knowledge","Thirst for Meaning","Thirsting Axe","Thirsting Bloodlord","Thirsting Shade","This World Belongs to Me","Thistledown Duo","Thistledown Liege","Thopter Arrest","Thopter Assembly","Thopter Engineer","Thopter Foundry","Thopter Pie Network","Thopter Spy Network","Thopter Squadron","Thorn Elemental","Thorn Lieutenant","Thorn Mammoth","Thorn Thallid","Thorn of Amethyst","Thorn of the Black Rose","Thorn-Thrash Viashino","Thornado","Thornbite Staff","Thornbow Archer","Thorncaster Sliver","Thorned Moloch","Thornhide Wolves","Thornling","Thornscape Apprentice","Thornscape Battlemage","Thornscape Familiar","Thornscape Master","Thorntooth Witch","Thornwatch Scarecrow","Thornweald Archer","Thornwind Faeries","Thornwood Falls","Those Who Serve","Thought Collapse","Thought Courier","Thought Devourer","Thought Dissector","Thought Distortion","Thought Eater","Thought Erasure","Thought Gorger","Thought Harvester","Thought Hemorrhage","Thought Lash","Thought Nibbler","Thought Prison","Thought Reflection","Thought Scour","Thought Sponge","Thought Vessel","Thought-Knot Seer","Thoughtbind","Thoughtbound Phantasm","Thoughtbound Primoc","Thoughtcast","Thoughtcutter Agent","Thoughtflare","Thoughtlace","Thoughtleech","Thoughtpicker Witch","Thoughtrender Lamia","Thoughts of Ruin","Thoughtseize","Thoughtweft Gambit","Thoughtweft Trio","Thousand Winds","Thousand-Year Elixir","Thousand-Year Storm","Thousand-legged Kami","Thraben Doomsayer","Thraben Foulbloods","Thraben Gargoyle // Stonewing Antagonizer","Thraben Heretic","Thraben Inspector","Thraben Purebloods","Thraben Sentry // Thraben Militia","Thraben Standard Bearer","Thraben Valiant","Thragtusk","Thran Dynamo","Thran Forge","Thran Foundry","Thran Golem","Thran Lens","Thran Quarry","Thran Temporal Gateway","Thran Tome","Thran Turbine","Thran War Machine","Thran Weaponry","Thrash // Threat","Thrash of Raptors","Thrasher Brute","Thrashing Brontodon","Thrashing Mossdog","Thrashing Mudspawn","Thrashing Wumpus","Thrasios, Triton Hero","Thraximundar","Threads of Disloyalty","Threaten","Three Dreams","Three Tragedies","Three Visits","Three Wishes","Three-Headed Goblin","Threnody Singer","Thresher Beast","Thresher Lizard","Thrill of Possibility","Thrill of the Hunt","Thrill-Kill Assassin","Thrilling Encore","Thriss, Nantuko Primus","Thrive","Thriving Bluff","Thriving Grove","Thriving Grubs","Thriving Heath","Thriving Ibex","Thriving Isle","Thriving Moor","Thriving Rats","Thriving Rhino","Thriving Turtle","Throat Slitter","Throat Wolf","Throatseeker","Throes of Chaos","Thromok the Insatiable","Throne Warden","Throne of Bone","Throne of Empires","Throne of Geth","Throne of Makindi","Throne of the God-Pharaoh","Throne of the High City","Throttle","Through the Breach","Throwing Knife","Thrull Champion","Thrull Parasite","Thrull Retainer","Thrull Surgeon","Thrull Wizard","Thrumming Stone","Thrummingbird","Thrun, the Last Troll","Thryx, the Sudden Storm","Thud","Thud-for-Duds","Thumbscrews","Thunder Brute","Thunder Dragon","Thunder Drake","Thunder Spirit","Thunder Strike","Thunder Totem","Thunder Wall","Thunder of Hooves","Thunder-Thrash Elder","Thunderblade Charge","Thunderblust","Thunderbolt","Thunderbreak Regent","Thunderclap","Thunderclap Wyvern","Thundercloud Elemental","Thundercloud Shaman","Thunderfoot Baloth","Thunderheads","Thunderherd Migration","Thundering Ceratok","Thundering Chariot","Thundering Djinn","Thundering Giant","Thundering Rebuke","Thundering Sparkmage","Thundering Spineback","Thundering Tanadon","Thundering Wurm","Thunderkin Awakener","Thundermare","Thundermaw Hellkite","Thunderous Might","Thunderous Snapper","Thunderous Wrath","Thunderscape Apprentice","Thunderscape Battlemage","Thunderscape Familiar","Thunderscape Master","Thundersong Trumpeter","Thunderstaff","Thwart","Thwart the Enemy","Thwart the Grave","Tiana, Ship\'s Caretaker","Tibalt the Chaotic","Tibalt\'s Rager","Tibalt, Rakish Instigator","Tibalt, the Fiend-Blooded","Tibor and Lumia","Ticking Gnomes","Tidal Barracuda","Tidal Bore","Tidal Control","Tidal Courier","Tidal Flats","Tidal Force","Tidal Influence","Tidal Kraken","Tidal Surge","Tidal Visionary","Tidal Warrior","Tidal Wave","Tide Drifter","Tide Skimmer","Tide of War","Tidebinder Mage","Tideforce Elemental","Tidehollow Sculler","Tidehollow Strix","Tideshaper Mystic","Tidespout Tyrant","Tidewalker","Tidewater Minion","Tidings","Tidy Conclusion","Tiger Claws","Tigereye Cameo","Tightening Coils","Tilling Treefolk","Tilonalli\'s Crown","Tilonalli\'s Knight","Tilonalli\'s Skinshifter","Tilonalli\'s Summoner","Timber Gorge","Timber Protector","Timber Wolves","Timberland Guide","Timberland Ruins","Timberline Ridge","Timbermare","Timbermaw Larva","Timberpack Wolf","Timberwatch Elf","Time Bomb","Time Distortion","Time Ebb","Time Elemental","Time Machine","Time Out","Time Reversal","Time Sidewalk","Time Sieve","Time Spiral","Time Stop","Time Stretch","Time Vault","Time Walk","Time Warp","Time Wipe","Time and Tide","Time of Heroes","Time of Ice","Time of Need","Time to Feed","Time to Reflect","Timebender","Timecrafting","Timely Hordemate","Timely Reinforcements","Timesifter","Timestream Navigator","Timetwister","Timid Drake","Timmerian Fiends","Timmy, Power Gamer","Tin Street Cadet","Tin Street Dodger","Tin Street Hooligan","Tin Street Market","Tin-Wing Chimera","Tinder Farm","Tinder Wall","Tine Shrike","Tinker","Tinybones, Trinket Thief","Tireless Missionaries","Tireless Tracker","Tireless Tribe","Tishana\'s Wayfinder","Tishana, Voice of Thunder","Titan Forge","Titan Hunter","Titan of Eternal Fire","Titan\'s Presence","Titan\'s Revenge","Titan\'s Strength","Titania","Titania\'s Boon","Titania\'s Chosen","Titania\'s Song","Titania, Protector of Argoth","Titanic Brawl","Titanic Bulvox","Titanic Growth","Titanic Pelagosaur","Titanic Ultimatum","Titanium Golem","Titanoth Rex","Titans\' Nest","Tithe","Tithe Drinker","Tithe Taker","Tithebearer Giant","Tivadar of Thorn","Tivadar\'s Crusade","To Arms!","To the Slaughter","Tobias Andrion","Tocatli Honor Guard","Together Forever","Togglodyte","Toil // Trouble","Toil to Renown","Toils of Night and Day","Tolaria","Tolaria West","Tolarian Academy","Tolarian Drake","Tolarian Emissary","Tolarian Entrancer","Tolarian Kraken","Tolarian Scholar","Tolarian Sentinel","Tolarian Serpent","Tolarian Winds","Toll of the Invasion","Tolsimir Wolfblood","Tolsimir, Friend to Wolves","Tomb Hex","Tomb Robber","Tomb of Urami","Tomb of the Spirit Dragon","Tombfire","Tombstalker","Tombstone Stairwell","Tome Anima","Tome Raider","Tome Scour","Tome of Legends","Tome of the Guildpact","Tomebound Lich","Tomik, Distinguished Advokist","Tomorrow, Azami\'s Familiar","Tonic Peddler","Toolcraft Exemplar","Tooth Collector","Tooth and Claw","Tooth and Nail","Tooth of Chiss-Goria","Tooth of Ramos","Tooth, Claw, and Tail","Toothy, Imaginary Friend","Top-Secret Tunnel","Topan Ascetic","Topan Freeblade","Topple","Topple the Statue","Topplegeist","Topsy Turvy","Tor Giant","Tor Wauki","Torbran, Thane of Red Fell","Torch Courier","Torch Drake","Torch Fiend","Torch Gauntlet","Torch Slinger","Torch Song","Torchling","Torgaar, Famine Incarnate","Torii Watchward","Torment","Torment of Hailfire","Torment of Scarabs","Torment of Venom","Tormented Angel","Tormented Hero","Tormented Pariah // Rampaging Werewolf","Tormented Soul","Tormented Thoughts","Tormenting Voice","Tormentor Exarch","Tormentor\'s Trident","Tormod\'s Crypt","Torn Between Heads","Tornado","Tornado Elemental","Tornellan Protector","Torpid Moloch","Torpor Dust","Torpor Orb","Torrent Elemental","Torrent of Fire","Torrent of Lava","Torrent of Souls","Torrent of Stone","Torrential Gearhulk","Torsten Von Ursus","Tortoise Formation","Torture","Torture Chamber","Tortured Existence","Toshiro Umezawa","Total War","Totally Lost","Totem Speaker","Totem-Guide Hartebeest","Touch and Go","Touch of Brilliance","Touch of Darkness","Touch of Death","Touch of Invisibility","Touch of Moonglove","Touch of Vitae","Touch of the Eternal","Touch of the Horned God","Touch of the Void","Touchstone","Tourach\'s Chant","Tourach\'s Gate","Tournament Grounds","Tower Above","Tower Defense","Tower Drake","Tower Gargoyle","Tower Geist","Tower of Calamities","Tower of Champions","Tower of Coireall","Tower of Eons","Tower of Fortunes","Tower of Murmurs","Tower of the Magistrate","Towering Baloth","Towering Indrik","Towering Thunderfist","Towering Titan","Towering-Wave Mystic","Town Gossipmonger // Incited Rabble","Town Sentry","Toxic Deluge","Toxic Iguanar","Toxic Nim","Toxic Stench","Toxin Sliver","Toy Boat","Toymaker","Trace of Abundance","Track Down","Tracker","Tracker\'s Instincts","Trade Caravan","Trade Routes","Trade Secrets","Tradewind Rider","Tradewind Rider Avatar","Trading Post","Tragic Arrogance","Tragic Lesson","Tragic Poet","Tragic Slip","Trail of Crumbs","Trail of Evidence","Trail of Mystery","Trail of the Mage-Rings","Trailblazer","Trailblazer\'s Boots","Train of Thought","Trained Armodon","Trained Caracal","Trained Cheetah","Trained Condor","Trained Jackal","Trained Orgg","Trained Pronghorn","Training Center","Training Drone","Training Grounds","Trait Doctoring","Traitor\'s Clutch","Traitor\'s Roar","Traitorous Blood","Traitorous Greed","Traitorous Instinct","Tranquil Cove","Tranquil Domain","Tranquil Expanse","Tranquil Garden","Tranquil Grove","Tranquil Path","Tranquil Thicket","Tranquility","Transcantation","Transcendence","Transcendent Envoy","Transcendent Master","Transgress the Mind","Transguild Courier","Transguild Promenade","Transluminant","Transmogrify","Transmogrifying Licid","Transmogrifying Wand","Transmutation","Transmute Artifact","Trap Digger","Trap Essence","Trap Runner","Trapfinder\'s Trick","Trapjaw Kelpie","Trapjaw Tyrant","Trapmaker\'s Snare","Trapped in the Tower","Traproot Kami","Trash for Treasure","Traumatic Visions","Traumatize","Travel Preparations","Traveler\'s Amulet","Traveler\'s Cloak","Traveling Philosopher","Traveling Plague","Traverse the Outlands","Traverse the Ulvenwald","Traxos, Scourge of Kroog","Treacherous Blessing","Treacherous Link","Treacherous Pit-Dweller","Treacherous Terrain","Treacherous Urge","Treacherous Vampire","Treacherous Werewolf","Treachery","Tread Mill","Tread Upon","Treasonous Ogre","Treasure Cruise","Treasure Hunt","Treasure Hunter","Treasure Keeper","Treasure Mage","Treasure Map // Treasure Cove","Treasure Nabber","Treasure Trove","Treasured Find","Treasury Thrull","Tree Monkey","Tree of Perdition","Tree of Redemption","Tree of Tales","Treefolk Harbinger","Treefolk Healer","Treefolk Mystic","Treefolk Seedlings","Treefolk Umbra","Treeshaker Chimera","Treespring Lorian","Treetop Ambusher","Treetop Bracers","Treetop Defense","Treetop Rangers","Treetop Scout","Treetop Sentinel","Treetop Village","Treetop Warden","Tremble","Tremor","Trench Gorger","Trench Wurm","Trenching Steed","Trepanation Blade","Trespasser il-Vec","Trespasser\'s Curse","Trespassing Souleater","Tresserhorn Sinks","Tresserhorn Skyknight","Trestle Troll","Treva\'s Attendant","Treva\'s Charm","Treva\'s Ruins","Treva, the Renewer","Triad of Fates","Trial // Error","Trial and Error","Trial of Ambition","Trial of Knowledge","Trial of Solidarity","Trial of Strength","Trial of Zeal","Triangle of War","Triassic Egg","Tribal Flames","Tribal Forcemage","Tribal Golem","Tribal Unity","Tribute Mage","Tribute to Hunger","Tribute to the Wild","Trickbind","Trickery Charm","Tricks of the Trade","Trickster Mage","Triclopean Sight","Trigon of Corruption","Trigon of Infestation","Trigon of Mending","Trigon of Rage","Trigon of Thought","Trinisphere","Trinket Mage","Trip Noose","Trip Wire","Triplicate Spirits","Triskaidekaphobia","Triskelavus","Triskelion","Triton Cavalry","Triton Fortune Hunter","Triton Shorestalker","Triton Shorethief","Triton Tactics","Triton Waverider","Triumph of Cruelty","Triumph of Ferocity","Triumph of Gerrard","Triumph of the Hordes","Triumphant Surge","Trokin High Guard","Troll Ascetic","Troll-Horn Cameo","Trollbred Guardian","Trollhide","Trolls of Tel-Jilad","Tromokratis","Tromp the Domains","Trophy Hunter","Trophy Mage","Tropical Island","Tropical Storm","Trostani Discordant","Trostani\'s Judgment","Trostani\'s Summoner","Trostani, Selesnya\'s Voice","Troubled Healer","Troublesome Spirit","Trove Warden","Trove of Temptation","Truce","True Believer","True Conviction","True Love\'s Kiss","True-Faith Censer","True-Name Nemesis","Truefire Captain","Truefire Paladin","Trueheart Duelist","Trueheart Twins","Trufflesnout","Truga Jungle","Trumpet Blast","Trumpeting Armodon","Trumpeting Gnarr","Trumpeting Herd","Trusted Advisor","Trusted Forcemage","Trusted Pegasus","Trustworthy Scout","Trusty Companion","Trusty Machete","Trusty Packbeast","Trusty Retriever","Truth or Dare","Truth or Tale","Trygon Predator","Trynn, Champion of Freedom","Tsabo Tavoc","Tsabo\'s Assassin","Tsabo\'s Decree","Tsabo\'s Web","Tsunami","Tuinvale Treefolk // Oaken Boon","Tukatongue Thallid","Tuknir Deathlock","Tuktuk Grunts","Tuktuk Rubblefort","Tuktuk Scrapper","Tuktuk the Explorer","Tumble Magnet","Tundra","Tundra Kavu","Tundra Wolves","Tunnel","Tunnel Ignus","Tunnel Vision","Tunneler Wurm","Tunneling Geopede","Turbo-Thwacking Auto-Hammer","Turbulent Dreams","Turf Wound","Turn // Burn","Turn Against","Turn Aside","Turn into a Pumpkin","Turn the Tables","Turn the Tide","Turn to Dust","Turn to Frog","Turn to Mist","Turn to Slag","Turnabout","Turntimber Ascetic","Turntimber Basilisk","Turntimber Grove","Turntimber Ranger","Turntimber Sower","Turntimber Symbiosis // Turntimber, Serpentine Wood","Turret Ogre","Turri Island","Turtleshell Changeling","Tusked Colossodon","Tuskguard Captain","Tuvasa the Sunlit","Twiddle","Twiddlestick Charger","Twigwalker","Twilight Drover","Twilight Mire","Twilight Panther","Twilight Prophet","Twilight Shepherd","Twilight\'s Call","Twin Bolt","Twin-Silk Spider","Twinblade Assassins","Twinblade Paladin","Twinblade Slasher","Twincast","Twinflame","Twinning Glass","Twinning Staff","Twins of Maurer Estate","Twinstrike","Twist Allegiance","Twisted Abomination","Twisted Experiment","Twisted Image","Twisted Justice","Twisted Reflection","Twitch","Two-Headed Cerberus","Two-Headed Dragon","Two-Headed Giant","Two-Headed Giant of Foriys","Two-Headed Giant of Foriys Avatar","Two-Headed Sliver","Two-Headed Zombie","Tymaret Calls the Dead","Tymaret, Chosen from Death","Tymaret, the Murder King","Tymna the Weaver","Typhoid Rats","Typhoon","Tyrannize","Tyrant of Discord","Tyrant of Valakut","Tyrant\'s Choice","Tyrant\'s Familiar","Tyrant\'s Machine","Tyrant\'s Scorn","Tyrranax","Uba Mask","Ubul Sar Gatekeepers","Ugin\'s Conjurant","Ugin\'s Construct","Ugin\'s Insight","Ugin\'s Nexus","Ugin, the Ineffable","Ugin, the Spirit Dragon","Ukkima, Stalking Shadow","Uktabi Drake","Uktabi Efreet","Uktabi Faerie","Uktabi Kong","Uktabi Orangutan","Uktabi Wildcats","Ukud Cobra","Ulamog\'s Crusher","Ulamog\'s Despoiler","Ulamog\'s Nullifier","Ulamog\'s Reclaimer","Ulamog, the Ceaseless Hunger","Ulamog, the Infinite Gyre","Ulasht, the Hate Seed","Ulcerate","Ulrich of the Krallenhorde // Ulrich, Uncontested Alpha","Ulrich\'s Kindred","Ultimate Price","Ulvenwald Bear","Ulvenwald Captive // Ulvenwald Abomination","Ulvenwald Hydra","Ulvenwald Mysteries","Ulvenwald Mystics // Ulvenwald Primordials","Ulvenwald Observer","Ulvenwald Tracker","Umara Entangler","Umara Mystic","Umara Raptor","Umara Wizard // Umara Skyfalls","Umbilicus","Umbra Mystic","Umbra Stalker","Umbral Mantle","Umezawa\'s Charm","Umezawa\'s Jitte","Umori, the Collector","Unbender Tine","Unblinking Bleb","Unbound Flourishing","Unbreakable Bond","Unbreakable Formation","Unbreathing Horde","Unbridled Growth","Unburden","Unburial Rites","Uncage the Menagerie","Uncaged Fury","Uncanny Speed","Unchained Berserker","Unchecked Growth","Unclaimed Territory","Uncle Istvan","Uncomfortable Chill","Uncontrollable Anger","Uncontrolled Infestation","Unconventional Tactics","Uncovered Clues","Undead Alchemist","Undead Augur","Undead Executioner","Undead Gladiator","Undead Leotau","Undead Minotaur","Undead Servant","Undead Slayer","Undead Warchief","Undercity Informer","Undercity Necrolisk","Undercity Plague","Undercity Reaches","Undercity Scavenger","Undercity Shade","Undercity Troll","Undercity Uprising","Undercity\'s Embrace","Underdark Beholder","Underdome","Underground River","Underground Sea","Undergrowth","Undergrowth Champion","Undergrowth Scavenger","Undergrowth Stadium","Underhanded Designs","Undermine","Underrealm Lich","Undertaker","Undertow","Underworld Breach","Underworld Cerberus","Underworld Charger","Underworld Coinsmith","Underworld Connections","Underworld Dreams","Underworld Fires","Underworld Rage-Hound","Underworld Sentinel","Undiscovered Paradise","Undo","Undying Beast","Undying Evil","Undying Flames","Undying Rage","Unearth","Unearthly Blizzard","Unerring Sling","Unesh, Criosphinx Sovereign","Unexpected Fangs","Unexpected Potential","Unexpected Results","Unexpectedly Absent","Unexplained Disappearance","Unexplained Vision","Unflinching Courage","Unforge","Unfriendly Fire","Unfulfilled Desires","Unhallowed Pact","Unhinge","Unholy Citadel","Unholy Grotto","Unholy Hunger","Unholy Indenture","Unholy Strength","Unicycle","Unified Front","Unified Lunge","Unified Strike","Unified Will","Unifying Theory","Uninvited Geist // Unimpeded Trespasser","Unity of Purpose","Universal Automaton","Universal Solvent","Unknown Shores","Unleash Fury","Unlicensed Disintegration","Unlikely Aid","Unlikely Alliance","Unliving Psychopath","Unmake","Unmake the Graves","Unmask","Unmoored Ego","Unnatural Aggression","Unnatural Endurance","Unnatural Hunger","Unnatural Predation","Unnatural Selection","Unnatural Speed","Unnerve","Unnerving Assault","Unpredictable Cyclone","Unquenchable Fury","Unquenchable Thirst","Unquestioned Authority","Unravel the Aether","Unraveling Mummy","Unruly Mob","Unscythe, Killer of Kings","Unseen Walker","Unsettled Mariner","Unspeakable Symbol","Unstable Footing","Unstable Frontier","Unstable Hulk","Unstable Mutation","Unstable Obelisk","Unstable Shapeshifter","Unstoppable Ash","Unsubstantiate","Unsummon","Untaidake, the Cloud Keeper","Untamed Hunger","Untamed Kavu","Untamed Might","Untamed Wilds","Untethered Express","Unwavering Initiate","Unwilling Recruit","Unwind","Unwinding Clock","Unworthy Dead","Unyaro Bee Sting","Unyaro Bees","Unyaro Griffin","Unyielding Krumar","Updraft","Updraft Elemental","Upheaval","Uphill Battle","Uproot","Upwelling","Ur-Drago","Ur-Golem\'s Eye","Urabrask the Hidden","Urban Burgeoning","Urban Evolution","Urban Utopia","Urbis Protector","Urborg","Urborg Drake","Urborg Elf","Urborg Emissary","Urborg Justice","Urborg Mindsucker","Urborg Panther","Urborg Phantom","Urborg Shambler","Urborg Skeleton","Urborg Stalker","Urborg Syphon-Mage","Urborg Uprising","Urborg Volcano","Urborg, Tomb of Yawgmoth","Urge to Feed","Urgent Exorcism","Urgoros, the Empty One","Uril, the Miststalker","Uro, Titan of Nature\'s Wrath","Ursapine","Ursine Champion","Ursine Fylgja","Urza","Urza\'s Armor","Urza\'s Avenger","Urza\'s Bauble","Urza\'s Blueprints","Urza\'s Chalice","Urza\'s Contact Lenses","Urza\'s Engine","Urza\'s Factory","Urza\'s Filter","Urza\'s Guilt","Urza\'s Hot Tub","Urza\'s Incubator","Urza\'s Mine","Urza\'s Miter","Urza\'s Power Plant","Urza\'s Rage","Urza\'s Ruinous Blast","Urza\'s Science Fair Project","Urza\'s Tome","Urza\'s Tower","Urza, Academy Headmaster","Urza, Lord High Artificer","Uthden Troll","Utility Knife","Utopia Mycon","Utopia Sprawl","Utopia Tree","Utopia Vow","Utter End","Utvara Hellkite","Utvara Scalper","Uyo, Silent Prophet","Vacuumelt","Vadrok, Apex of Thunder","Vaevictis Asmadi","Vaevictis Asmadi, the Dire","Vagrant Plowbeasts","Valakut Awakening // Valakut Stoneforge","Valakut Exploration","Valakut Fireboar","Valakut Invoker","Valakut Predator","Valakut, the Molten Pinnacle","Valduk, Keeper of the Flame","Valeron Outlander","Valeron Wardens","Valiant Changeling","Valiant Guard","Valiant Knight","Valiant Rescuer","Valley Dasher","Valley Rannet","Valleymaker","Valor","Valor Made Real","Valor in Akros","Valorous Charge","Valorous Stance","Valorous Steed","Vampire Aristocrat","Vampire Bats","Vampire Champion","Vampire Charmseeker","Vampire Cutthroat","Vampire Envoy","Vampire Hexmage","Vampire Hounds","Vampire Interloper","Vampire Lacerator","Vampire Neonate","Vampire Nighthawk","Vampire Noble","Vampire Nocturnus","Vampire Nocturnus Avatar","Vampire Opportunist","Vampire Outcasts","Vampire Revenant","Vampire Sovereign","Vampire Warlord","Vampire of the Dire Moon","Vampire\'s Bite","Vampire\'s Zeal","Vampiric Dragon","Vampiric Embrace","Vampiric Feast","Vampiric Fury","Vampiric Link","Vampiric Rites","Vampiric Sliver","Vampiric Spirit","Vampiric Touch","Vampiric Tutor","Vampirism","Vance\'s Blasting Cannons // Spitfire Bastion","Vandalblast","Vandalize","Vanguard of Brimaz","Vanguard\'s Shield","Vanish into Memory","Vanishing","Vanishment","Vanquish","Vanquish the Foul","Vanquish the Weak","Vanquisher\'s Banner","Vantress Gargoyle","Vantress Paladin","Vapor Snag","Vapor Snare","Vaporkin","Vaporous Djinn","Varchild\'s Crusader","Varchild\'s War-Riders","Varchild, Betrayer of Kjeldor","Varina, Lich Queen","Varolz, the Scar-Striped","Vassal Soul","Vassal\'s Duty","Vastwood Animist","Vastwood Fortification // Vastwood Thicket","Vastwood Gorger","Vastwood Hydra","Vastwood Surge","Vastwood Zendikon","Vault Skirge","Vault Skyward","Vault of Champions","Vault of Whispers","Vault of the Archangel","Vaultbreaker","Vazal, the Compleat","Vebulid","Vec Townships","Vectis Agents","Vectis Dominator","Vectis Silencers","Vector Asp","Vedalken Aethermage","Vedalken Anatomist","Vedalken Archmage","Vedalken Blademaster","Vedalken Certarch","Vedalken Dismisser","Vedalken Engineer","Vedalken Entrancer","Vedalken Ghoul","Vedalken Heretic","Vedalken Humiliator","Vedalken Infuser","Vedalken Mastermind","Vedalken Mesmerist","Vedalken Orrery","Vedalken Outlander","Vedalken Plotter","Vedalken Shackles","Veil of Birds","Veil of Secrecy","Veil of Summer","Veilborn Ghoul","Veiled Apparition","Veiled Crocodile","Veiled Sentry","Veiled Serpent","Veiled Shade","Veiling Oddity","Veilstone Amulet","Vein Drinker","Veinfire Borderpost","Vela the Night-Clad","Veldrane of Sengir","Veldt","Velican Dragon","Velis Vel","Venarian Glimmer","Venarian Gold","Vendetta","Vendilion Clique","Venerable Knight","Venerable Kumo","Venerable Lammasu","Venerable Monk","Venerated Loxodon","Venerated Teacher","Vengeance","Vengeant Vampire","Vengeful Archon","Vengeful Dead","Vengeful Devil","Vengeful Dreams","Vengeful Firebrand","Vengeful Pharaoh","Vengeful Rebel","Vengeful Rebirth","Vengeful Vampire","Vengeful Warchief","Vengevine","Venom","Venom Sliver","Venomous Breath","Venomous Changeling","Venomous Dragonfly","Venomous Fangs","Venomous Hierophant","Venomous Vines","Venomspout Brackus","Venser\'s Diffusion","Venser\'s Journal","Venser\'s Sliver","Venser, Shaper Savant","Venser, the Sojourner","Vent Sentinel","Ventifact Bottle","Verazol, the Split Current","Verdant Automaton","Verdant Catacombs","Verdant Confluence","Verdant Crescendo","Verdant Eidolon","Verdant Embrace","Verdant Field","Verdant Force","Verdant Haven","Verdant Rebirth","Verdant Succession","Verdant Sun\'s Avatar","Verdant Touch","Verdeloth the Ancient","Verdigris","Verduran Emissary","Verduran Enchantress","Verdurous Gearhulk","Verge Rangers","Verity Circle","Verix Bladewing","Vermiculos","Vernadi Shieldmate","Vernal Bloom","Vernal Equinox","Vertigo","Vertigo Spawn","Very Cryptic Command","Vesper Ghoul","Vesperlark","Vessel of Endless Rest","Vessel of Ephemera","Vessel of Malignity","Vessel of Nascency","Vessel of Paramnesia","Vessel of Volatility","Vestige of Emrakul","Vesuva","Vesuvan Doppelganger","Vesuvan Shapeshifter","Veteran Adventurer","Veteran Armorer","Veteran Armorsmith","Veteran Bodyguard","Veteran Brawlers","Veteran Cathar","Veteran Cavalier","Veteran Explorer","Veteran Motorist","Veteran Swordsmith","Veteran Warleader","Veteran of the Depths","Veteran\'s Armaments","Veteran\'s Reflexes","Veteran\'s Sidearm","Veteran\'s Voice","Vex","Vexing Arcanix","Vexing Beetle","Vexing Devil","Vexing Gull","Vexing Scuttler","Vexing Shusher","Vexing Sphinx","Vhati il-Dal","Vial Smasher the Fierce","Vial of Dragonfire","Vial of Poison","Viashino Bey","Viashino Bladescout","Viashino Cutthroat","Viashino Fangtail","Viashino Firstblade","Viashino Grappler","Viashino Heretic","Viashino Outrider","Viashino Pyromancer","Viashino Racketeer","Viashino Runner","Viashino Sandscout","Viashino Sandsprinter","Viashino Sandstalker","Viashino Sandswimmer","Viashino Shanktail","Viashino Skeleton","Viashino Slasher","Viashino Slaughtermaster","Viashino Spearhunter","Viashino Warrior","Viashino Weaponsmith","Viashivan Dragon","Vibrating Sphere","Vicious Betrayal","Vicious Conquistador","Vicious Hunger","Vicious Kavu","Vicious Offering","Vicious Rumors","Vicious Shadows","Victim of Night","Victimize","Victorious Destruction","Victory Chimes","Victory\'s Envoy","Victory\'s Herald","Victual Sliver","View from Above","Vigean Graftmage","Vigean Hydropon","Vigean Intuition","Vigil for the Lost","Vigilance","Vigilant Baloth","Vigilant Drake","Vigilant Martyr","Vigilant Sentry","Vigilante Justice","Vigor","Vigor Mortis","Vigorous Charge","Vigorspore Wurm","Vildin-Pack Outcast // Dronepack Kindred","Vile Aggregate","Vile Bile","Vile Consumption","Vile Deacon","Vile Manifestation","Vile Rebirth","Vile Redeemer","Vile Requiem","Vilis, Broker of Blood","Village Bell-Ringer","Village Cannibals","Village Elder","Village Ironsmith // Ironfang","Village Messenger // Moonrise Intruder","Village Rites","Village Survivors","Villagers of Estwald // Howlpack of Estwald","Villainous Ogre","Villainous Wealth","Vindicate","Vindictive Lich","Vindictive Mob","Vindictive Vampire","Vine Dryad","Vine Gecko","Vine Kami","Vine Mare","Vine Snare","Vine Trellis","Vinelasher Kudzu","Vines of Vastwood","Vines of the Recluse","Vineshaper Mystic","Vineweft","Vintara Elephant","Vintara Snapper","Violent Eruption","Violent Impact","Violent Outburst","Violent Ultimatum","Violet Pall","Viper\'s Kiss","Viral Drake","Viridescent Wisps","Viridian Acolyte","Viridian Betrayers","Viridian Claw","Viridian Corrupter","Viridian Emissary","Viridian Harvest","Viridian Joiner","Viridian Longbow","Viridian Lorebearers","Viridian Revel","Viridian Scout","Viridian Shaman","Viridian Zealot","Viridian Zealot Avatar","Virtue\'s Ruin","Virtuous Charge","Virtus the Veiled","Virtus\'s Maneuver","Virulent Plague","Virulent Sliver","Virulent Swipe","Virulent Wound","Visage of Bolas","Visara the Dreadful","Viscera Dragger","Viscera Seer","Viscerid Armor","Viscerid Deepwalker","Viscerid Drone","Viscid Lemures","Viseling","Vish Kal, Blood Arbiter","Vision Charm","Vision Skeins","Visionary Augmenter","Visions","Visions of Beyond","Visions of Brutality","Visitor from Planet Q","Vital Splicer","Vital Surge","Vitality Charm","Vitality Hunter","Vitality Salve","Vitalize","Vitalizing Cascade","Vitalizing Wind","Vitaspore Thallid","Vithian Renegades","Vithian Stinger","Vito, Thorn of the Dusk Rose","Vitu-Ghazi Guildmage","Vitu-Ghazi, the City-Tree","Vivid Crag","Vivid Creek","Vivid Flying Fish","Vivid Grove","Vivid Marsh","Vivid Meadow","Vivid Revival","Vivien Reid","Vivien of the Arkbow","Vivien\'s Arkbow","Vivien\'s Crocodile","Vivien\'s Grizzly","Vivien\'s Invocation","Vivien\'s Jaguar","Vivien, Arkbow Ranger","Vivien, Champion of the Wilds","Vivien, Monsters\' Advocate","Vivien, Nature\'s Avenger","Vivify","Vivisection","Vizier of Deferment","Vizier of Many Faces","Vizier of Remedies","Vizier of Tumbling Sands","Vizier of the Anointed","Vizier of the Menagerie","Vizier of the Scorpion","Vizier of the True","Vizkopa Confessor","Vizkopa Guildmage","Vizkopa Vampire","Vizzerdrix","Vodalian Arcanist","Vodalian Hypnotist","Vodalian Illusionist","Vodalian Knights","Vodalian Mage","Vodalian Merchant","Vodalian Mystic","Vodalian Serpent","Vodalian Soldiers","Vodalian War Machine","Vodalian Zombie","Voice of All","Voice of Duty","Voice of Grace","Voice of Law","Voice of Many","Voice of Reason","Voice of Resurgence","Voice of Truth","Voice of the Provinces","Voice of the Woods","Voiceless Spirit","Voices from the Void","Void","Void Attendant","Void Beckoner","Void Grafter","Void Maw","Void Shatter","Void Snare","Void Squall","Void Stalker","Void Winnower","Voidmage Apprentice","Voidmage Husher","Voidmage Prodigy","Voidslime","Voidstone Gargoyle","Voidwalk","Voidwielder","Volatile Chimera","Volatile Claws","Volatile Rig","Volcanic Awakening","Volcanic Dragon","Volcanic Eruption","Volcanic Fallout","Volcanic Geyser","Volcanic Hammer","Volcanic Island","Volcanic Offering","Volcanic Rambler","Volcanic Rush","Volcanic Salvo","Volcanic Spray","Volcanic Strength","Volcanic Submersion","Volcanic Upheaval","Volcanic Vision","Volcanic Wind","Volcano Hellion","Volcano Imp","Voldaren Duelist","Voldaren Pariah // Abolisher of Bloodlines","Volition Reins","Volley Veteran","Volley of Boulders","Volrath","Volrath the Fallen","Volrath\'s Curse","Volrath\'s Dungeon","Volrath\'s Gardens","Volrath\'s Laboratory","Volrath\'s Motion Sensor","Volrath\'s Shapeshifter","Volrath\'s Stronghold","Volrath, the Shapestealer","Volt Charge","Voltaic Brawler","Voltaic Construct","Voltaic Key","Voltaic Servant","Volunteer Militia","Volunteer Reserves","Vona\'s Hunger","Vona, Butcher of Magan","Voodoo Doll","Voracious Cobra","Voracious Dragon","Voracious Greatshark","Voracious Hatchling","Voracious Hydra","Voracious Null","Voracious Typhon","Voracious Vacuum","Voracious Vampire","Voracious Wurm","Vorapede","Vorel of the Hull Clade","Vorinclex, Voice of Hunger","Vorosh, the Hunter","Vorrac Battlehorns","Vorstclaw","Vortex Elemental","Votary of the Conclave","Vow of Duty","Vow of Flight","Vow of Lightning","Vow of Malice","Vow of Wildness","Voyage\'s End","Voyager Drake","Voyager Staff","Voyaging Satyr","Vraska the Unseen","Vraska\'s Conquistador","Vraska\'s Contempt","Vraska\'s Finisher","Vraska\'s Scorn","Vraska\'s Stoneglare","Vraska, Golgari Queen","Vraska, Regal Gorgon","Vraska, Relic Seeker","Vraska, Scheming Gorgon","Vraska, Swarm\'s Eminence","Vryn Wingmare","Vug Lizard","Vulpikeet","Vulpine Goliath","Vulshok Battlegear","Vulshok Battlemaster","Vulshok Berserker","Vulshok Gauntlets","Vulshok Heartstoker","Vulshok Morningstar","Vulshok Refugee","Vulshok Replica","Vulshok Sorcerer","Vulshok War Boar","Vulturous Aven","Vulturous Zombie","Wail of the Nim","Wailing Ghoul","Waiting in the Weeds","Wake Thrasher","Wake of Destruction","Wake of Vultures","Wake the Dead","Wake the Reflections","Wakedancer","Wakening Sun\'s Avatar","Waker of Waves","Waker of the Wilds","Wakeroot Elemental","Wakestone Gargoyle","Waking Nightmare","Walk the Aeons","Walk the Plank","Walker of Secret Ways","Walker of the Grove","Walker of the Wastes","Walking Archive","Walking Atlas","Walking Ballista","Walking Corpse","Walking Dead","Walking Desecration","Walking Dream","Walking Sponge","Walking Wall","Wall of Air","Wall of Blood","Wall of Blossoms","Wall of Bone","Wall of Brambles","Wall of Caltrops","Wall of Corpses","Wall of Deceit","Wall of Denial","Wall of Diffusion","Wall of Distortion","Wall of Dust","Wall of Earth","Wall of Essence","Wall of Faith","Wall of Fire","Wall of Forgotten Pharaohs","Wall of Fortune","Wall of Frost","Wall of Glare","Wall of Granite","Wall of Heat","Wall of Hope","Wall of Ice","Wall of Junk","Wall of Kelp","Wall of Lava","Wall of Light","Wall of Limbs","Wall of Lost Thoughts","Wall of Mist","Wall of Mulch","Wall of Nets","Wall of Omens","Wall of One Thousand Cuts","Wall of Opposition","Wall of Pine Needles","Wall of Putrid Flesh","Wall of Razors","Wall of Resistance","Wall of Resurgence","Wall of Reverence","Wall of Roots","Wall of Runes","Wall of Shadows","Wall of Shards","Wall of Shields","Wall of Souls","Wall of Spears","Wall of Stolen Identity","Wall of Stone","Wall of Swords","Wall of Tanglecord","Wall of Tears","Wall of Tombstones","Wall of Torches","Wall of Vapor","Wall of Vines","Wall of Vipers","Wall of Water","Wall of Wonder","Wall of Wood","Wallop","Wand of Denial","Wand of Ith","Wand of Vertebrae","Wand of the Elements","Wander in Death","Wanderbrine Rootcutters","Wanderer\'s Strike","Wanderer\'s Twig","Wanderguard Sentry","Wandering Champion","Wandering Eye","Wandering Fumarole","Wandering Goblins","Wandering Graybeard","Wandering Mage","Wandering Ones","Wandering Stream","Wandering Tombshell","Wandering Wolf","Wanderlust","Wandermare","Wanderwine Hub","Wanderwine Prophets","Waning Wurm","Wanted Scoundrels","War Barge","War Behemoth","War Cadence","War Chariot","War Dance","War Elemental","War Elephant","War Falcon","War Flare","War Horn","War Mammoth","War Oracle","War Priest of Thune","War Report","War Screecher","War Tax","War\'s Toll","War-Name Aspirant","War-Spike Changeling","War-Torch Goblin","War-Wing Siren","Warbreak Trumpeter","Warbriar Blessing","Warbringer","Warchanter of Mogis","Warchief Giant","Warclamp Mastiff","Warcry Phoenix","Ward Sliver","Ward of Bones","Ward of Lights","Ward of Piety","Warded Battlements","Warden of Evos Isle","Warden of Geometries","Warden of the Beyond","Warden of the Chained","Warden of the Eye","Warden of the First Tree","Warden of the Wall","Warden of the Woods","Wardscale Crocodile","Wardscale Dragon","Warfire Javelineer","Wargate","Warkite Marauder","Warleader\'s Helix","Warlord\'s Axe","Warlord\'s Fury","Warmind Infantry","Warmonger","Warmonger Hellkite","Warmonger\'s Chariot","Warmth","Warning","Warp Artifact","Warp World","Warpath","Warpath Ghoul","Warped Devotion","Warped Landscape","Warped Physique","Warped Researcher","Warping Wail","Warping Wurm","Warrant // Warden","Warren Instigator","Warren Pilferers","Warren Weirding","Warren-Scourge Elf","Warrior Angel","Warrior en-Kor","Warrior\'s Charge","Warrior\'s Honor","Warrior\'s Oath","Warrior\'s Stand","Warriors\' Lesson","Warstorm Surge","Warteye Witch","Warthog","Wary Okapi","Wash Out","Wasitora, Nekoru Queen","Wasp Lancer","Wasp of the Bitter End","Waste Away","Waste Land","Waste Not","Wasteland","Wasteland Scorpion","Wasteland Strangler","Wasteland Viper","Wastes","Watchdog","Watcher Sliver","Watcher for Tomorrow","Watcher in the Mist","Watcher in the Web","Watcher of the Roost","Watcher of the Spheres","Watchers of the Dead","Watchful Automaton","Watchful Giant","Watchful Naga","Watchwing Scarecrow","Watchwolf","Water Elemental","Water Gun Balloon Game","Water Servant","Water Wurm","Watercourser","Waterfront Bouncer","Waterkin Shaman","Waterknot","Waterlogged Grove","Watermarket","Waterspout Djinn","Waterspout Elemental","Waterspout Weavers","Watertrap Weaver","Waterveil Cavern","Waterwhirl","Watery Grave","Wave Elemental","Wave of Indifference","Wave of Reckoning","Wave of Terror","Wave of Vitriol","Wave-Wing Elemental","Wavebreak Hippocamp","Wavecrash Triton","Waves of Aggression","Waveskimmer Aven","Wax // Wane","Waxing Moon","Waxmane Baku","Way of the Thief","Wayfarer\'s Bauble","Wayfaring Giant","Wayfaring Temple","Waylay","Wayward Angel","Wayward Giant","Wayward Guide-Beast","Wayward Servant","Wayward Soul","Wayward Swordtooth","Weakness","Weakstone","Weapon Rack","Weapon Surge","Weaponcraft Enthusiast","Weaponize the Monsters","Weaponized Scrap","Weapons Trainer","Wear // Tear","Wear Away","Weaselback Redcap","Weather the Storm","Weathered Bodyguards","Weathered Wayfarer","Weatherlight","Weatherseed Elf","Weatherseed Faeries","Weatherseed Totem","Weatherseed Treefolk","Weave Fate","Weaver of Currents","Weaver of Lies","Weaver of Lightning","Web","Web of Inertia","Webweaver Changeling","Wee Dragonauts","Weed Strangle","Weed-Pruner Poplar","Wei Ambush Force","Wei Assassins","Wei Elite Companions","Wei Infantry","Wei Night Raiders","Wei Scout","Wei Strike Force","Weight Advantage","Weight of Conscience","Weight of Memory","Weight of Spires","Weight of the Underworld","Weird Harvest","Weirded Vampire","Weirding Shaman","Weirding Wood","Welcome to the Fold","Welder Automaton","Weldfast Engineer","Weldfast Monitor","Weldfast Wingsmith","Welding Jar","Welding Sparks","Welkin Guide","Welkin Hawk","Welkin Tern","Well of Discovery","Well of Ideas","Well of Knowledge","Well of Life","Well of Lost Dreams","Well-Laid Plans","Wellgabber Apothecary","Wellspring","Wellwisher","Werebear","Western Paladin","Westvale Abbey // Ormendahl, Profane Prince","Wet Willie of the Damned","Wetland Sambar","Whalebone Glider","Whammy Burn","Wharf Infiltrator","What\'s Yours Is Now Mine","Wheel and Deal","Wheel of Fate","Wheel of Fortune","Wheel of Sun and Moon","Wheel of Torture","Whelming Wave","When Fluffy Bunnies Attack","When Will You Learn?","Where Ancients Tread","Whetstone","Whetwheel","Which of You Burns Brightest?","Whim of Volrath","Whims of the Fates","Whimsy","Whimwader","Whip Sergeant","Whip Silk","Whip Vine","Whip of Erebos","Whip-Spine Drake","Whipcorder","Whipflare","Whipgrass Entangler","Whipkeeper","Whiplash Trap","Whippoorwill","Whipstitched Zombie","Whiptail Moloch","Whiptail Wurm","Whiptongue Frog","Whiptongue Hydra","Whir of Invention","Whirler Rogue","Whirler Virtuoso","Whirlermaker","Whirling Catapult","Whirling Dervish","Whirlpool Drake","Whirlpool Rider","Whirlpool Warrior","Whirlpool Whelm","Whirlwind","Whirlwind Adept","Whirlwind Denial","Whirlwind of Thought","Whisk Away","Whisper Agent","Whisper Squad","Whisper, Blood Liturgist","Whisperer of the Wilds","Whispergear Sneak","Whispering Madness","Whispering Shade","Whispering Snitch","Whispering Specter","Whispers of Emrakul","Whispers of the Muse","Whispersilk Cloak","Whispersteel Dagger","Whisperwood Elemental","White Knight","White Mana Battery","White Scarab","White Shield Crusader","White Sun\'s Zenith","White Ward","Whitemane Lion","Whiteout","Whitesun\'s Passage","Whitewater Naiads","Who // What // When // Where // Why","Wicked Akuba","Wicked Guardian","Wicked Pact","Wicked Reward","Wicked Wolf","Wicker Warcrawler","Wicker Witch","Wickerbough Elder","Widespread Brutality","Widespread Panic","Widget Contraption","Wielding the Green Dragon","Wight of Precinct Six","Wiitigo","Wild Aesthir","Wild Beastmaster","Wild Cantor","Wild Celebrants","Wild Ceratok","Wild Colos","Wild Crocodile","Wild Defiance","Wild Dogs","Wild Elephant","Wild Evocation","Wild Griffin","Wild Growth","Wild Guess","Wild Hunger","Wild Instincts","Wild Jhovall","Wild Leotau","Wild Mammoth","Wild Might","Wild Mongrel","Wild Nacatl","Wild Onslaught","Wild Ox","Wild Pair","Wild Research","Wild Ricochet","Wild Slash","Wild Swing","Wild Wanderer","Wild Wurm","Wild-Field Scarecrow","Wildborn Preserver","Wildcall","Wilderness Elemental","Wilderness Hypnotist","Wilderness Reclamation","Wildest Dreams","Wildfield Borderpost","Wildfire","Wildfire Cerberus","Wildfire Devils","Wildfire Elemental","Wildfire Emissary","Wildfire Eternal","Wildgrowth Walker","Wildheart Invoker","Wildsize","Wildslayer Elves","Wildwood Geist","Wildwood Patrol","Wildwood Rebirth","Wildwood Scourge","Wildwood Tracker","Will Kenrith","Will of the All-Hunter","Will of the Naga","Will-Forged Golem","Will-o\'-the-Wisp","Willbender","Willbreaker","Willing Test Subject","Willow Dryad","Willow Elf","Willow Faerie","Willow Priestess","Willow Satyr","Wilt","Wilt-Leaf Cavaliers","Wilt-Leaf Liege","Wily Bandar","Wily Goblin","Wind Dancer","Wind Drake","Wind Sail","Wind Shear","Wind Spirit","Wind Strider","Wind Zendikon","Wind-Kin Raiders","Wind-Scarred Crag","Windborn Muse","Windborne Charge","Windbrisk Heights","Windbrisk Raptor","Windcaller Aven","Windfall","Windgrace Acolyte","Windgrace\'s Judgment","Winding Canyons","Winding Constrictor","Winding Way","Winding Wurm","Windreader Sphinx","Windreaper Falcon","Windreaver","Windriddle Palaces","Windrider Eel","Windrider Patrol","Windrider Wizard","Winds of Abandon","Winds of Change","Winds of Qal Sisma","Winds of Rath","Winds of Rebuke","Windscouter","Windseeker Centaur","Windstorm","Windstorm Drake","Windswept Heath","Windwright Mage","Wine of Blood and Iron","Wing Puncture","Wing Shards","Wing Snare","Wing Splicer","Wing Storm","Wingbeat Warrior","Wingcrafter","Winged Coatl","Winged Shepherd","Winged Sliver","Winged Words","Wingfold Pteron","Wingmate Roc","Wingrattle Scarecrow","Wings of Aesthir","Wings of Hope","Wings of Hubris","Wings of Velis Vel","Wings of the Guard","Wingspan Mentor","Wingsteed Rider","Winnow","Winnower Patrol","Winota, Joiner of Forces","Winter Blast","Winter Orb","Winter Sky","Winter\'s Chill","Winter\'s Grasp","Winter\'s Night","Winter\'s Rest","Winterflame","Wintermoon Mesa","Wintermoor Commander","Wipe Away","Wipe Clean","Wirecat","Wirefly Hive","Wirewood Channeler","Wirewood Elf","Wirewood Guardian","Wirewood Herald","Wirewood Hivemaster","Wirewood Lodge","Wirewood Pride","Wirewood Savage","Wirewood Symbiote","Wishclaw Talisman","Wishcoin Crab","Wishful Merfolk","Wishmonger","Wispmare","Wispweaver Angel","Wistful Selkie","Wistful Thinking","Wit\'s End","Witch Engine","Witch Hunt","Witch Hunter","Witch of the Moors","Witch\'s Cauldron","Witch\'s Cottage","Witch\'s Familiar","Witch\'s Mist","Witch\'s Oven","Witch\'s Vengeance","Witch-Maw Nephilim","Witchbane Orb","Witches\' Eye","Witching Well","Witchstalker","Withdraw","Withered Wretch","Withering Boon","Withering Gaze","Withering Hex","Withering Wisps","Witherscale Wurm","Without Weakness","Withstand","Withstand Death","Witness of Tomorrows","Witness of the Ages","Witness the End","Witty Demon","Wizard Mentor","Wizard Replica","Wizard\'s Lightning","Wizard\'s Retort","Wizards\' School","Wizened Arbiter","Wizened Cenn","Wizened Snitches","Woe Strider","Woebearer","Woebringer Demon","Woeleecher","Wojek Apothecary","Wojek Bodyguard","Wojek Embermage","Wojek Halberdiers","Wojek Siren","Wolf Pack","Wolf of Devil\'s Breach","Wolf\'s Quarry","Wolf-Skull Shaman","Wolfbitten Captive // Krallenhorde Killer","Wolfbriar Elemental","Wolfcaller\'s Howl","Wolfhunter\'s Quiver","Wolfir Avenger","Wolfir Silverheart","Wolfkin Bond","Wolfrider\'s Saddle","Wolfwillow Haven","Wolverine Pack","Wonder","Wood Elemental","Wood Elves","Wood Sage","Woodborn Behemoth","Woodcloaker","Woodcutter\'s Grit","Wooded Bastion","Wooded Foothills","Wooden Sphere","Wooden Stake","Woodfall Primus","Woodland Bellower","Woodland Cemetery","Woodland Champion","Woodland Changeling","Woodland Druid","Woodland Guidance","Woodland Mystic","Woodland Patrol","Woodland Sleuth","Woodland Stream","Woodland Wanderer","Woodlot Crawler","Woodlurker Mimic","Woodripper","Woodvine Elemental","Woodweaver\'s Puzzleknot","Woodwraith Corrupter","Woodwraith Strangler","Woolly Loxodon","Woolly Mammoths","Woolly Razorback","Woolly Spider","Woolly Thoctar","Word of Binding","Word of Blasting","Word of Command","Word of Seizing","Word of Undoing","Wordmail","Words of War","Words of Waste","Words of Wilding","Words of Wind","Words of Wisdom","Words of Worship","Work a Double","Workhorse","Working Stiff","Workshop Assistant","Workshop Elders","World Breaker","World Queller","World Shaper","World at War","World-Bottling Kit","Worldfire","Worldgorger Dragon","Worldheart Phoenix","Worldknit","Worldly Counsel","Worldly Tutor","Worldpurge","Worldslayer","Worldsoul Colossus","Worldspine Wurm","Worm Harvest","Wormfang Behemoth","Wormfang Crab","Wormfang Drake","Wormfang Manta","Wormfang Newt","Wormfang Turtle","Worms of the Earth","Wormwood Dryad","Wormwood Treefolk","Worn Powerstone","Worry Beads","Worship","Worst Fears","Wort, Boggart Auntie","Wort, the Raidmother","Worthy Cause","Worthy Knight","Wound Reflection","Wrack with Madness","Wrangle","Wrap in Flames","Wrap in Vigor","Wrath of God","Wrath of Marit Lage","Wrath of Sod","Wreak Havoc","Wreath of Geists","Wrecking Ball","Wrecking Beast","Wrecking Ogre","Wren\'s Run Packmaster","Wren\'s Run Vanquisher","Wrench Mind","Wrench-Rigger","Wrenn and Six","Wretched Anurid","Wretched Banquet","Wretched Camel","Wretched Confluence","Wretched Gryff","Wrexial, the Risen Deep","Wring Flesh","Writ of Passage","Write into Being","Wu Admiral","Wu Elite Cavalry","Wu Infantry","Wu Light Cavalry","Wu Longbowman","Wu Scout","Wu Spy","Wu Warship","Wurm\'s Tooth","Wurmcalling","Wurmcoil Engine","Wurmskin Forger","Wurmweaver Coil","Wydwen, the Biting Gale","Wyluli Wolf","X","Xantcha","Xantcha, Sleeper Agent","Xanthic Statue","Xantid Swarm","Xathrid Demon","Xathrid Gorgon","Xathrid Necromancer","Xathrid Slyblade","Xenagos\'s Scorn","Xenagos\'s Strike","Xenagos, God of Revels","Xenagos, the Reveler","Xenic Poltergeist","Xenograft","Xiahou Dun, the One-Eyed","Xira Arien","Xun Yu, Wei Advisor","Xyris, the Writhing Storm","Xyru Specter","Yahenni\'s Expertise","Yahenni, Undying Partisan","Yamabushi\'s Flame","Yamabushi\'s Storm","Yanling\'s Harbinger","Yannik, Scavenging Sentinel","Yare","Yargle, Glutton of Urborg","Yarok\'s Fenlurker","Yarok\'s Wavecrasher","Yarok, the Desecrated","Yasharn, Implacable Earth","Yasova Dragonclaw","Yavimaya Ancients","Yavimaya Ants","Yavimaya Barbarian","Yavimaya Coast","Yavimaya Dryad","Yavimaya Elder","Yavimaya Enchantress","Yavimaya Gnats","Yavimaya Granger","Yavimaya Hollow","Yavimaya Kavu","Yavimaya Sapherd","Yavimaya Scion","Yavimaya Wurm","Yavimaya\'s Embrace","Yawgmoth Demon","Yawgmoth\'s Agenda","Yawgmoth\'s Bargain","Yawgmoth\'s Edict","Yawgmoth\'s Testament","Yawgmoth\'s Vile Offering","Yawgmoth\'s Will","Yawgmoth, Thran Physician","Yawning Fissure","Ydwen Efreet","Yellow Scarves Cavalry","Yellow Scarves General","Yellow Scarves Troops","Yennett, Cryptic Sovereign","Yet Another Aether Vortex","Yeva\'s Forcemage","Yeva, Nature\'s Herald","Yew Spirit","Yidaro, Wandering Monster","Yidris, Maelstrom Wielder","Yisan, the Wanderer Bard","Yixlid Jailer","Yoke of the Damned","Yoked Ox","Yoked Plowbeast","Yomiji, Who Bars the Way","Yore-Tiller Nephilim","Yorion, Sky Nomad","Yorvo, Lord of Garenbrig","Yosei, the Morning Star","Yotian Soldier","You\'re in Command","Young Pyromancer","Young Wei Recruits","Young Wolf","Your Fate Is Thrice Sealed","Your Inescapable Doom","Your Puny Minds Cannot Fathom","Your Will Is Not Your Own","Youthful Knight","Youthful Scholar","Yuan Shao\'s Infantry","Yuan Shao, the Indecisive","Yuki-Onna","Yukora, the Prisoner","Yule Ooze","Yuriko, the Tiger\'s Shadow","Zacama, Primal Calamity","Zada\'s Commando","Zada, Hedron Grinder","Zagoth Crystal","Zagoth Mamba","Zagoth Triome","Zagras, Thief of Heartbeats","Zahid, Djinn of the Lamp","Zameck Guildmage","Zanam Djinn","Zanikev Locust","Zap","Zareth San, the Trickster","Zarichi Tiger","Zaxara, the Exemplary","Zealot il-Vec","Zealot of the God-Pharaoh","Zealots en-Dal","Zealous Conscripts","Zealous Guardian","Zealous Inquisitor","Zealous Persecution","Zealous Strike","Zebra Unicorn","Zedruu the Greathearted","Zegana, Utopian Speaker","Zektar Shrine Expedition","Zelyon Sword","Zendikar Farguide","Zendikar Incarnate","Zendikar Resurgent","Zendikar\'s Roil","Zenith Flare","Zenith Seeker","Zephid","Zephid\'s Embrace","Zephyr Charge","Zephyr Falcon","Zephyr Gull","Zephyr Net","Zephyr Scribe","Zephyr Spirit","Zephyr Sprite","Zerapa Minotaur","Zetalpa, Primal Dawn","Zhalfirin Commander","Zhalfirin Crusader","Zhalfirin Decoy","Zhalfirin Knight","Zhalfirin Void","Zhang Fei, Fierce Warrior","Zhang He, Wei General","Zhang Liao, Hero of Hefei","Zhao Zilong, Tiger General","Zhou Yu, Chief Commander","Zhuge Jin, Wu Strategist","Zhur-Taa Ancient","Zhur-Taa Druid","Zhur-Taa Goblin","Zhur-Taa Swine","Zilortha, Strength Incarnate","Zirda, the Dawnwaker","Zirilan of the Claw","Zndrsplt\'s Judgment","Zndrsplt, Eye of Wisdom","Zo-Zu the Punisher","Zodiac Dog","Zodiac Dragon","Zodiac Goat","Zodiac Horse","Zodiac Monkey","Zodiac Ox","Zodiac Pig","Zodiac Rabbit","Zodiac Rat","Zodiac Rooster","Zodiac Snake","Zodiac Tiger","Zoetic Cavern","Zof Consumption // Zof Bloodbog","Zof Shade","Zombie Apocalypse","Zombie Assassin","Zombie Boa","Zombie Brute","Zombie Cannibal","Zombie Cutthroat","Zombie Fanboy","Zombie Goliath","Zombie Infestation","Zombie Master","Zombie Mob","Zombie Musher","Zombie Outlander","Zombie Scavengers","Zombie Trailblazer","Zombified","Zombify","Zoologist","Zuberi, Golden Feather","Zulaport Chainmage","Zulaport Cutthroat","Zulaport Duelist","Zulaport Enforcer","Zuo Ci, the Mocking Sage","Zur the Enchanter","Zur\'s Weirding","Zuran Enchanter","Zuran Orb","Zuran Spellcaster","Zurgo Bellstriker","Zurgo Helmsmasher","Zurzoth, Chaos Rider","Zyym, Mesmeric Lord","Zzzyxas\'s Abyss","_____","capital offense"]');function Du(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function Tu(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Du(Object(t),!0).forEach((function(r){De()(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Du(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var Mu=function(e){var t=e.types,n=e.setTypes,a=e.tokens,o=e.setTokens,i=e.changeQuantity,l=e.deckArt,s=e.changeDeckArt,u=(0,r.useState)({userQuery:"",loading:!1}),c=ze()(u,2),d=c[0],h=c[1],f=(0,r.useState)({cards:"",resultIndex:0}),g=ze()(f,2),p=g[0],m=g[1],y=function(){var e=Ze()(_e().mark((function e(r){var u,c,f,g,y;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(p.cards.length>0)){e.next=24;break}return h(Tu(Tu({},d),{},{loading:!0})),e.next=4,wu(r);case 4:u=e.sent,"https://images.pexels.com/photos/1376766/nature-milky-way-galaxy-space-1376766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"===l&&s(u.cardArt),c=-1,f=0;case 8:if(!(f<t.length)){e.next=15;break}if(t[f].name!==u.mainType){e.next=12;break}return c=f,e.abrupt("break",15);case 12:++f,e.next=8;break;case 15:if(-1!==c){e.next=19;break}n((function(e){return[].concat(Ue()(e),[{name:u.mainType,open:!0,cards:[u]}])})),e.next=23;break;case 19:return e.next=21,i(u.name,u.mainType,1);case 21:e.sent||n((function(e){return e.map((function(r,t){return t===c?Tu(Tu({},e[t]),{},{cards:[].concat(Ue()(e[t].cards),[u])}):r}))}));case 23:u.tokens.length>0&&(g=!1,y=rs(a,(function(e){for(var r=0;r<u.tokens.length;++r){for(var t=0;t<a.length;++t)if(a[t].name===u.tokens[r].name){g=!0;break}g||e.push(u.tokens[r])}})),o(y));case 24:h(Tu(Tu({},d),{},{userQuery:"",loading:!1})),m(Tu(Tu({},p),{},{cards:"",resultIndex:0}));case 26:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}();return r.createElement("div",{className:"searchbarContainer"},r.createElement(bu,{query:d,searchCard:y,queryChange:function(e){h(Tu(Tu({},d),{},{userQuery:e.target.value}));var r=[];if(""!==e.target.value){for(var t=e.target.value.toUpperCase(),n=0;n<Bu.length;++n)if(Bu[n].toUpperCase().startsWith(t)){var a=Bu[n];r.push(a)}r.length>0?m(Tu(Tu({},p),{},{cards:r,resultIndex:0})):(h(Tu(Tu({},d),{},{userQuery:e.target.value})),m(Tu(Tu({},p),{},{cards:"",resultIndex:0})))}else h(Tu(Tu({},d),{},{userQuery:"",loading:!1})),m(Tu(Tu({},p),{},{cards:"",resultIndex:0}))},autofill:p.cards[p.resultIndex]}))};Mu.propTypes={deckArt:i().string,changeDeckArt:i().func.isRequired};const Eu=ve((function(e){return{deckArt:e.deck.deckArt}}),{changeDeckArt:zs})(Mu);var Pu={hidden:{right:0,width:"0px"},visible:{right:300,width:"300px",transition:{ease:"easeOut",duration:.35}},exit:{right:0,width:"0px",transition:{ease:"easeIn",duration:.25}}};const xu=function(e){var t=e.tools,n=e.setTools;return r.createElement("div",{className:"decktoolsContainer"},r.createElement("button",{className:"decktoolsButton",onClick:function(){document.querySelectorAll(".typeGrid").forEach((function(e){t?e.classList.remove("skinnyGrid"):e.classList.add("skinnyGrid")})),n(!t)}},"Tools"),r.createElement(nl,{exitBeforeEnter:!0},t&&r.createElement(Qi.div,{className:"toolsMenu",variants:Pu,initial:"hidden",animate:"visible",exit:"exit"})))},Ru=function(e){var t=e.token,n=e.imageVariant,a=e.cardVariant;return r.createElement(Qi.div,{className:"tokenContainer",variants:a,initial:"hidden",animate:"visible",exit:"exit"},r.createElement(eu,_s()({hoverDelayInMs:170},{onMouseOver:function(e){var r=e.e,t=e.setIsHovering,n=e.unsetIsHovering;"bigCardImage"===r.target.className||"cardName"===r.target.className||"settings"===r.target.className?n():t()}}),(function(e){var a=e.isHovering;return r.createElement("div",null,r.createElement("div",{className:"cardArtContainer"},r.createElement(pu,{src:t.image,offset:0,zIndex:4,position:"relative",vOffset:0,className:"cardArt"})),a&&r.createElement(Qi.img,{className:"bigCardImage",draggable:"false",src:t.cardImage,variants:n,initial:"hidden",animate:"visible",exit:"exit"}))})),r.createElement("p",{className:"cardName"},t.name))},Gu=function(e){var t=e.tokens,n={hidden:{opacity:0,y:-8},visible:{opacity:1,y:0,transition:{ease:"easeOut",duration:.45}},exit:{opacity:0,y:-8}},a={hidden:{opacity:0,y:8},visible:{opacity:1,y:0,transition:{ease:"easeOut",duration:.5}},exit:{opacity:0,y:8,transition:{ease:"easeOut",duration:.35}}};return r.createElement("div",{className:"tokenContent"},r.createElement("div",{className:"typeContainer"},r.createElement("div",{className:"typeTitle"},"Tokens"),r.createElement("hr",{className:"typeDivider"}),r.createElement(nl,null,t.map((function(e){return r.createElement(Ru,{token:e,key:e.name,imageVariant:n,cardVariant:a})})))))},Fu=function(e){var t=e.types,n=e.setTypes,a=e.tokens,o=e.setTokens,i=e.tools,l=e.setTools,s=e.changeQuantity,u=e.changeCardSet,c=e.moveCard,d=e.cardDrag,h=e.setCardDrag,f=e.toggleType,g=e.deckArt,p=e.setDeckArt;return r.createElement("div",{className:"deckContainer"},r.createElement(Eu,{types:t,setTypes:n,tokens:a,setTokens:o,changeQuantity:s,deckArt:g,setDeckArt:p}),r.createElement(xu,{tools:i,setTools:l}),r.createElement(Cu.Z,{breakpointCols:2,className:"typeGrid",columnClassName:"typeGridColumn"},t.map((function(e,t){return r.createElement(vu,{type:e,key:e.name,typeIndex:t,changeQuantity:s,changeCardSet:u,moveCard:c,cardDrag:d,setCardDrag:h,toggleType:f})}))),a.length>0&&r.createElement(Gu,{tokens:a}))};var Wu=!1;if("undefined"!=typeof window){var Ou={get passive(){Wu=!0}};window.addEventListener("testPassive",null,Ou),window.removeEventListener("testPassive",null,Ou)}var Hu="undefined"!=typeof window&&window.navigator&&window.navigator.platform&&(/iP(ad|hone|od)/.test(window.navigator.platform)||"MacIntel"===window.navigator.platform&&window.navigator.maxTouchPoints>1),Lu=[],Iu=!1,Nu=-1,Vu=void 0,zu=void 0,Ku=function(e){return Lu.some((function(r){return!(!r.options.allowTouchMove||!r.options.allowTouchMove(e))}))},Uu=function(e){var r=e||window.event;return!!Ku(r.target)||r.touches.length>1||(r.preventDefault&&r.preventDefault(),!1)},ju=document.getElementById("modal-root");function _u(e,t){var a=e.children,o=e.fade,i=void 0!==o&&o,l=e.defaultOpened,s=void 0!==l&&l,u=(0,r.useState)(s),c=ze()(u,2),d=c[0],h=c[1],f=(0,r.useCallback)((function(){return h(!1)}),[]);(0,r.useImperativeHandle)(t,(function(){return{open:function(){return h(!0)},close:f}}),[f]);var g=(0,r.useCallback)((function(e){27===e.keyCode&&f()}),[f]);return(0,r.useEffect)((function(){return d&&(document.addEventListener("keydown",g,!1),function(e,r){if(e){if(!Lu.some((function(r){return r.targetElement===e}))){var t={targetElement:e,options:r||{}};Lu=[].concat(function(e){if(Array.isArray(e)){for(var r=0,t=Array(e.length);r<e.length;r++)t[r]=e[r];return t}return Array.from(e)}(Lu),[t]),Hu?(e.ontouchstart=function(e){1===e.targetTouches.length&&(Nu=e.targetTouches[0].clientY)},e.ontouchmove=function(r){1===r.targetTouches.length&&function(e,r){var t=e.targetTouches[0].clientY-Nu;!Ku(e.target)&&(r&&0===r.scrollTop&&t>0||function(e){return!!e&&e.scrollHeight-e.scrollTop<=e.clientHeight}(r)&&t<0?Uu(e):e.stopPropagation())}(r,e)},Iu||(document.addEventListener("touchmove",Uu,Wu?{passive:!1}:void 0),Iu=!0)):function(e){if(void 0===zu){var r=!!e&&!0===e.reserveScrollBarGap,t=window.innerWidth-document.documentElement.clientWidth;r&&t>0&&(zu=document.body.style.paddingRight,document.body.style.paddingRight=t+"px")}void 0===Vu&&(Vu=document.body.style.overflow,document.body.style.overflow="hidden")}(r)}}else console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.")}(t.current)),function(){var e;document.removeEventListener("keydown",g,!1),(e=t.current)?(Lu=Lu.filter((function(r){return r.targetElement!==e})),Hu?(e.ontouchstart=null,e.ontouchmove=null,Iu&&0===Lu.length&&(document.removeEventListener("touchmove",Uu,Wu?{passive:!1}:void 0),Iu=!1)):Lu.length||(void 0!==zu&&(document.body.style.paddingRight=zu,zu=void 0),void 0!==Vu&&(document.body.style.overflow=Vu,Vu=void 0))):console.error("enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.")}}),[g,d]),(0,n.createPortal)(d?r.createElement("div",{className:"modal ".concat(i?"modal-fade":"")},r.createElement("div",{className:"modal-overlay",onClick:f}),r.createElement("span",{role:"button",className:"modal-close","aria-label":"close",onClick:f},"x"),r.createElement("div",{className:"modal-body"},a)):null,ju)}const qu=(0,r.forwardRef)(_u),Zu=function(e){var t=e.importInfo;return r.createElement("div",{className:"importInfo"},r.createElement("div",{className:"progress progressBar"},r.createElement("div",{className:"progress progressAmount",style:{width:"".concat(t.ratio,"%")}})),r.createElement("p",null,t.ratio),r.createElement("p",{className:"importName"},t.index," / ",t.length,": ",t.name))};function Ju(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function Yu(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Ju(Object(t),!0).forEach((function(r){De()(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Ju(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var Qu={hidden:{width:"0px"},visible:{width:"calc(100% - 240px)",transition:{ease:"easeOut",duration:.5}},exit:{width:"0px",transition:{ease:"easeIn",duration:.5}}},$u=function(e){var t=e.openDeck,n=e.setOpenDeck,a=e.uploadCards,o=e.emptyPacket,i=(0,r.useRef)(null),l=(0,r.useState)([]),s=ze()(l,2),u=s[0],c=s[1],d=(0,r.useState)([]),h=ze()(d,2),f=h[0],g=h[1],p=(0,r.useState)(!1),m=ze()(p,2),y=m[0],S=m[1],v=(0,r.useState)(!1),C=ze()(v,2),A=C[0],b=C[1],k=(0,r.useState)("New Deck"),w=ze()(k,2),B=w[0],D=w[1],T=(0,r.useState)("Custom"),M=ze()(T,2),E=M[0],P=M[1],x=(0,r.useState)(0),R=ze()(x,2),G=R[0],F=R[1],W=(0,r.useState)({name:"",index:-1,ratio:-1,length:-1}),O=ze()(W,2),H=O[0],L=O[1];function I(){return(I=Ze()(_e().mark((function e(r,t,n,a){var o;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:o=rs(u,(function(e){var o=e[r].cards.splice(t,1);e[n].cards.splice(a,0,o[0])})),c(o);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function N(){return(N=Ze()(_e().mark((function e(r,t,n){var a,o,i;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=!1,o=0;case 2:if(!(o<u.length)){e.next=17;break}if(u[o].name!==t){e.next=14;break}i=0;case 5:if(!(i<u[o].cards.length)){e.next=14;break}if(u[o].cards[i].name!==r){e.next=11;break}return e.next=9,c((function(e){return e.filter((function(e,r){return o!==r||Number(e.cards[i].quantity)+Number(n)>0||e.cards.length>1})).map((function(e,r){return o!==r||e.name!==t?e:o===r&&Number(e.cards[i].quantity)+Number(n)!==0?Yu(Yu({},e),{},{cards:[].concat(Ue()(e.cards.slice(0,i)),[Yu(Yu({},e.cards[i]),{},{quantity:Number(e.cards[i].quantity)+Number(n)})],Ue()(e.cards.slice(i+1)))}):o===r&&e.cards.length>1?Yu(Yu({},e),{},{cards:[].concat(Ue()(e.cards.slice(0,i)),Ue()(e.cards.slice(i+1)))}):void 0}))}));case 9:return a=!0,e.abrupt("break",14);case 11:++i,e.next=5;break;case 14:++o,e.next=2;break;case 17:return e.abrupt("return",a);case 18:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function V(){return(V=Ze()(_e().mark((function e(r,t,n){return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c((function(e){return e.map((function(e,a){return a!==t?e:Yu(Yu({},e),{},{cards:[].concat(Ue()(e.cards.slice(0,n)),[Yu(Yu({},e.cards[n]),{},{setName:r.setName,cardArt:r.cardArt,cardImage:r.cardImage})],Ue()(e.cards.slice(n+1)))})}))}));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function z(){return(z=Ze()(_e().mark((function e(r,t){var n;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=rs(u,(function(e){e[r].open=!t})),c(n);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return(0,r.useEffect)((function(){function e(){return(e=Ze()(_e().mark((function e(r){var t,a,l,s,u,d;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c([]);case 2:return e.next=4,n(!0);case 4:i.current.open(),t=[],a=0;case 7:if(!(a<r.length)){e.next=28;break}return l=r[a].split(/(?<=^\S+)\s/),L({name:l[1],index:a,ratio:a/r.length*100,length:r.length}),e.next=12,wu(l[1]);case 12:if(null===(s=e.sent)){e.next=25;break}s.quantity=l[0],u=-1,d=0;case 17:if(!(d<t.length)){e.next=24;break}if(s.mainType!==t[d].name){e.next=21;break}return u=d,e.abrupt("break",24);case 21:++d,e.next=17;break;case 24:-1===u?t.push({name:s.mainType,open:!0,cards:[s]}):t[u].cards.push(s);case 25:++a,e.next=7;break;case 28:i.current.close(),L({name:"",index:-1,ratio:-1,length:-1}),c(t),o();case 32:case"end":return e.stop()}}),e)})))).apply(this,arguments)}console.log("openDeck: ",t),console.log("uploadCards.length: ",a.length),!t&&a.length>0&&function(r){e.apply(this,arguments)}(a)}),[a]),(0,r.useEffect)((function(){var e=0;u.forEach((function(r){r.cards.forEach((function(r){e+=Number(r.quantity)}))})),F(e)}),[u]),r.createElement(r.Fragment,null,r.createElement(nl,{exitBeforeEnter:!0},r.createElement(os,{backend:Fs},t&&r.createElement(Qi.div,{className:"builderContainer",variants:Qu,initial:"hidden",animate:"visible",exit:"exit"},r.createElement(Us,{setOpenDeck:n,deckName:B,setDeckName:D,format:E,setFormat:P,cardCount:G}),r.createElement(Fu,{types:u,setTypes:c,tokens:f,setTokens:g,tools:y,setTools:S,changeQuantity:function(e,r,t){return N.apply(this,arguments)},changeCardSet:function(e,r,t){return V.apply(this,arguments)},moveCard:function(e,r,t,n){return I.apply(this,arguments)},cardDrag:A,setCardDrag:b,toggleType:function(e,r){return z.apply(this,arguments)}})))),r.createElement(qu,{ref:i},r.createElement(Zu,{importInfo:H})))};$u.propTypes={uploadCards:i().array,emptyPacket:i().func.isRequired};const Xu=ve((function(e){return{uploadCards:e.deck.uploadCards}}),{emptyPacket:function(){return function(e){try{e({type:Te,payload:[]})}catch(r){e({type:Ee})}}}})($u);var ec=function(e){var t=e.setOpenDeck,n=e.uploadPacket;return r.createElement("div",{className:"newDeckArea"},r.createElement("button",{onClick:function(){return t(!0)},className:"createDeckButton"},"CREATE NEW DECK"),r.createElement("p",null,"OR"),r.createElement("input",{type:"file",id:"file",className:"inputFile",accept:".txt",hidden:!0,onChange:function(e){console.log("Hi"),n(e.target.files[0])}}),r.createElement("label",{className:"inputFileLabel",htmlFor:"file"},"Import deck here"))};ec.propTypes={uploadPacket:i().func.isRequired};const rc=ve((function(e){return{}}),{uploadPacket:function(e){return function(r){try{var t,n=function(){var e=Ze()(_e().mark((function e(n){var a;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=t.result.split("\n"),r({type:Te,payload:a});case 2:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}();(t=new FileReader).onloadend=n,t.readAsText(e)}catch(e){r({type:Ee})}}}})(ec);var tc=function(e){function t(){for(var r,t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];return(r=e.call.apply(e,[this].concat(n))||this).history=b(r.props),r}return a(t,e),t.prototype.render=function(){return r.createElement(W,{history:this.history,children:this.props.children})},t}(r.Component);r.Component;var nc=function(e,r){return"function"==typeof e?e(r):e},ac=function(e,r){return"string"==typeof e?p(e,null,null,r):e},oc=function(e){return e},ic=r.forwardRef;void 0===ic&&(ic=oc);var lc=ic((function(e,t){var n=e.innerRef,a=e.navigate,o=e.onClick,i=P(e,["innerRef","navigate","onClick"]),s=i.target,u=l({},i,{onClick:function(e){try{o&&o(e)}catch(r){throw e.preventDefault(),r}e.defaultPrevented||0!==e.button||s&&"_self"!==s||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),a())}});return u.ref=oc!==ic&&t||n,r.createElement("a",u)})),sc=ic((function(e,t){var n=e.component,a=void 0===n?lc:n,o=e.replace,i=e.to,s=e.innerRef,u=P(e,["component","replace","to","innerRef"]);return r.createElement(F.Consumer,null,(function(e){e||c(!1);var n=e.history,d=ac(nc(i,e.location),e.location),h=d?n.createHref(d):"",f=l({},u,{href:h,navigate:function(){var r=nc(i,e.location);(o?n.replace:n.push)(r)}});return oc!==ic?f.ref=t||s:f.innerRef=s,r.createElement(a,f)}))})),uc=function(e){return e},cc=r.forwardRef;void 0===cc&&(cc=uc),cc((function(e,t){var n=e["aria-current"],a=void 0===n?"page":n,o=e.activeClassName,i=void 0===o?"active":o,s=e.activeStyle,u=e.className,d=e.exact,h=e.isActive,f=e.location,g=e.sensitive,p=e.strict,m=e.style,y=e.to,S=e.innerRef,v=P(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return r.createElement(F.Consumer,null,(function(e){e||c(!1);var n=f||e.location,o=ac(nc(y,n),n),C=o.pathname,A=C&&C.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),b=A?L(n.pathname,{path:A,exact:d,sensitive:g,strict:p}):null,k=!!(h?h(b,n):b),w=k?function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.filter((function(e){return e})).join(" ")}(u,i):u,B=k?l({},m,{},s):m,D=l({"aria-current":k&&a||null,className:w,style:B,to:o},v);return uc!==cc?D.ref=t||S:D.innerRef=S,r.createElement(sc,D)}))}));const dc=function(e){var t=e.position;return r.createElement(sc,{to:"/",style:{textDecoration:"none"}},r.createElement("div",{className:t?"magentaLogo topLogo":"magentaLogo bottomLogo"},"Magenta"))};var hc=t(9669),fc=t.n(hc);function gc(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function pc(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?gc(Object(t),!0).forEach((function(r){De()(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):gc(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var mc=function(e){var t=e.loginUser,n=(0,r.useRef)(null),a=(0,r.useState)({loginEmail:"",loginPassword:""}),o=ze()(a,2),i=o[0],l=o[1],s=i.loginEmail,u=i.loginPassword,c=function(e){return l(pc(pc({},i),{},De()({},e.target.name,e.target.value)))},d=function(e){t()};return r.createElement(r.Fragment,null,r.createElement("button",{onClick:function(){return n.current.open()}},"Login"),r.createElement(qu,{ref:n},r.createElement("form",{className:"login-form",onSubmit:function(e){d()}},r.createElement("div",{className:"authHeader"},"Login"),r.createElement("div",{className:"form-group"},r.createElement("input",{className:"authInput",type:"email",placeholder:"Email Address",name:"loginEmail",value:s,onChange:function(e){return c(e)},required:!0}),r.createElement("input",{className:"authInput",type:"password",placeholder:"Password",name:"loginPassword",value:u,onChange:function(e){return c(e)},required:!0})),r.createElement("button",{className:"authButton",onClick:function(e){return d()}},"Log In"))))};mc.propTypes={loginUser:i().func.isRequired};const yc=ve((function(e){}),{loginUser:function(){return function(e){console.log("Sup")}}})(mc);function Sc(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function vc(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Sc(Object(t),!0).forEach((function(r){De()(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Sc(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var Cc=function(e){var t=e.registerUser,n=(0,r.useRef)(null),a=(0,r.useState)({registerName:"",registerEmail:"",registerPassword:"",registerPasswordConfirm:""}),o=ze()(a,2),i=o[0],l=o[1],s=i.registerName,u=i.registerEmail,c=i.registerPassword,d=i.registerPasswordConfirm,h=function(e){return l(vc(vc({},i),{},De()({},e.target.name,e.target.value)))},f=function(){var e=Ze()(_e().mark((function e(r){return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:c!==d?console.log("Passwords do not match"):t(s,u,c);case 1:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}();return r.createElement(r.Fragment,null,r.createElement("button",{onClick:function(){return n.current.open()}},"Register"),r.createElement(qu,{ref:n},r.createElement("form",{className:"register-form",onSubmit:function(e){f(e)}},r.createElement("div",{className:"authHeader"},"Register"),r.createElement("div",{className:"form-group"},r.createElement("input",{className:"authInput",type:"text",placeholder:"Name",name:"registerName",value:s,onChange:function(e){return h(e)},required:!0}),r.createElement("input",{className:"authInput",type:"email",placeholder:"Email Address",name:"registerEmail",value:u,onChange:function(e){return h(e)},required:!0}),r.createElement("input",{className:"authInput",type:"password",placeholder:"Password",name:"registerPassword",minLength:"6",value:c,onChange:function(e){return h(e)},required:!0}),r.createElement("input",{className:"authInput",type:"password",placeholder:"Confirm Password",name:"registerPasswordConfirm",minLength:"6",value:d,onChange:function(e){return h(e)},required:!0})),r.createElement("button",{className:"authButton",onClick:function(e){return f(e)}},"Register"))))};Cc.propTypes={registerUser:i().func.isRequired};const Ac=ve((function(e){}),{registerUser:function(e){var r=e.name,t=e.email,n=e.password;return function(){var e=Ze()(_e().mark((function e(a){var o,i,l;return _e().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o={headers:{"Content-Type":"application/json"}},i=JSON.stringify({name:r,email:t,password:n}),e.prev=2,e.next=5,fc().get("http://localhost:3000/",i,o);case 5:e.sent,e.next=15;break;case 8:e.prev=8,e.t0=e.catch(2),console.log("error: ",e.t0),l=e.t0.response.data.errors,console.log(e.t0.msg),l&&l.forEach((function(e){return console.log(e)})),a({type:"REGISTER_FAIL"});case 15:case"end":return e.stop()}}),e,null,[[2,8]])})));return function(r){return e.apply(this,arguments)}}()}})(Cc),bc=function(){return r.createElement("div",{className:"navContainer"},r.createElement(dc,{position:!0}),r.createElement(yc,null),r.createElement(Ac,null))},kc=function(){var e=(0,r.useState)(!1),t=ze()(e,2),n=t[0],a=t[1];return r.createElement("div",{className:"builderPage"},r.createElement(bc,null),r.createElement(rc,{setOpenDeck:a}),r.createElement(Xu,{openDeck:n,setOpenDeck:a}))},wc=function(){return r.createElement("div",{className:"footerContainer"},r.createElement(dc,{position:!1}))},Bc=function(){return r.createElement("div",{className:"mainPage"},r.createElement("div",{className:"headerBody"},r.createElement(bc,null),r.createElement("div",{className:"heroText"},"A Magic: the Gathering Deckbuilder"),r.createElement("p",{className:"taglineText"},"Enjoy Brewing"),r.createElement("div",{className:"headerButtonsContainer"},r.createElement(sc,{to:"/builder"},r.createElement("button",{className:"headerButton builderEnter"},"Deck Builder")),r.createElement("button",{className:"headerButton decklistEnter"},"Deck List"))),r.createElement("div",{className:"contentBody"},r.createElement("p",{className:"featureHeader"},"Features")))},Dc=function(){var e=V(F).location;return(0,r.useEffect)((function(){console.log("Hi")}),[]),r.createElement(q,{store:We},r.createElement(N,{location:e,key:e.key},r.createElement(I,{path:"/builder",component:kc}),r.createElement(I,{path:"/",component:Bc})),r.createElement(wc,null))};var Tc=t(9600);He()(Tc.Z,{insert:"head",singleton:!1}),Tc.Z.locals,fc().defaults.baseURL="http://localhost:3000",fc().defaults.headers.common.Authorization="AUTH TOKEN",fc().defaults.headers.post["Content-Type"]="application/json",n.render(r.createElement(r.StrictMode,null,r.createElement(tc,null,r.createElement(Dc,null))),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,